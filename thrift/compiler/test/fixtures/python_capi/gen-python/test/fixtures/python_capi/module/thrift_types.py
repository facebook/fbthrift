#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations

import folly.iobuf as _fbthrift_iobuf
import thrift.python.types as _fbthrift_python_types
import thrift.python.exceptions as _fbthrift_python_exceptions


import apache.thrift.op.patch.thrift_types

import apache.thrift.type.id.thrift_types

import apache.thrift.type.schema.thrift_types

import test.fixtures.python_capi.serialized_dep.thrift_types

import test.fixtures.python_capi.thrift_dep.thrift_types


class MyStruct(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "inty",  # name
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "stringy",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            3,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "myItemy",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyDataItem),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            4,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "myEnumy",  # name
            lambda: _fbthrift_python_types.EnumTypeInfo(MyEnum),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            5,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "booly",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            6,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "floatListy",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_float),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            7,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "strMappy",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_binary, _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "intSetty",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyStruct"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyStruct()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyStruct, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MyStruct, self)


class MyDataItem(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "s",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyDataItem"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyDataItem"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyDataItem()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyDataItem, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MyDataItem, self)


class TransitiveDoubler(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.TransitiveDoubler"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/TransitiveDoubler"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_TransitiveDoubler()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.TransitiveDoubler, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.TransitiveDoubler, self)


class DoubledPair(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "s",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "x",  # name
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.DoubledPair"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/DoubledPair"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_DoubledPair()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.DoubledPair, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.DoubledPair, self)


class StringPair(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "normal",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "doubled",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.StringPair"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/StringPair"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_StringPair()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.StringPair, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.StringPair, self)


class EmptyStruct(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.EmptyStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/EmptyStruct"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_EmptyStruct()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.EmptyStruct, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.EmptyStruct, self)


class PrimitiveStruct(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "booly",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "charry",  # name
            _fbthrift_python_types.typeinfo_byte,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            3,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "shorty",  # name
            _fbthrift_python_types.typeinfo_i16,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            5,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "inty",  # name
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            7,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "longy",  # name
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "floaty",  # name
            _fbthrift_python_types.typeinfo_float,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            9,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "dubby",  # name
            _fbthrift_python_types.typeinfo_double,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            12,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "stringy",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            13,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "bytey",  # name
            _fbthrift_python_types.typeinfo_binary,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            14,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "buffy",  # name
            _fbthrift_python_types.typeinfo_iobuf,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            15,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "pointbuffy",  # name
            _fbthrift_python_types.typeinfo_iobuf,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            18,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "patched_struct",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            19,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "empty_struct",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(EmptyStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            20,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "fbstring",  # name
            _fbthrift_python_types.typeinfo_binary,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            21,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "managed_string_view",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            22,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "some_error",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(test.fixtures.python_capi.thrift_dep.thrift_types.SomeError),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.PrimitiveStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/PrimitiveStruct"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_PrimitiveStruct()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.PrimitiveStruct, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.PrimitiveStruct, self)


class AdaptedFields(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "adapted_int",  # name
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "list_adapted_int",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i16),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            3,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "set_adapted_int",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_i64),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            4,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "inline_adapted_int",  # name
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.AdaptedFields"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/AdaptedFields"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_AdaptedFields()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.AdaptedFields, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.AdaptedFields, self)


class ListStruct(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "boolz",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_bool),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "intz",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i64),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            3,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "stringz",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            4,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "encoded",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_binary),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            5,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "uidz",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i64),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            6,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "matrix",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_double)),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            7,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "ucharz",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_byte)),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "voxels",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_byte))),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            9,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "buf_ptrs",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_iobuf),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.ListStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/ListStruct"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_ListStruct()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.ListStruct, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.ListStruct, self)


class SetStruct(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "enumz",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.EnumTypeInfo(MyEnum)),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "intz",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            3,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "binnaz",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_binary),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            4,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "encoded",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_binary),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            5,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "uidz",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_i64),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            6,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "charz",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_byte),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            7,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "setz",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_i64)),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.SetStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/SetStruct"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_SetStruct()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.SetStruct, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.SetStruct, self)


class MapStruct(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "enumz",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.EnumTypeInfo(MyEnum), _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "intz",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            3,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "binnaz",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_binary, _fbthrift_python_types.StructTypeInfo(PrimitiveStruct)),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            4,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "encoded",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_string, _fbthrift_python_types.typeinfo_double),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            5,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "flotz",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_i64, _fbthrift_python_types.typeinfo_float),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            6,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "map_list",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.typeinfo_i64)),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            7,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "list_map",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i64)),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "fast_list_map",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_i32, _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_double)),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            9,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "buf_map",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_binary, _fbthrift_python_types.typeinfo_iobuf),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            10,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "unsigned_list_map",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_i64, _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i64)),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MapStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MapStruct"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MapStruct()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MapStruct, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MapStruct, self)


class ComposeStruct(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "enum_",  # name
            lambda: _fbthrift_python_types.EnumTypeInfo(MyEnum),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "renamed_",  # name
            lambda: _fbthrift_python_types.EnumTypeInfo(AnnoyingEnum),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            3,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "primitive",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(PrimitiveStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            4,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "aliased",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(ListStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            5,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "xenum",  # name
            lambda: _fbthrift_python_types.EnumTypeInfo(test.fixtures.python_capi.thrift_dep.thrift_types.DepEnum),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            6,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "xstruct",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(test.fixtures.python_capi.thrift_dep.thrift_types.DepStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            7,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "friends",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.StructTypeInfo(test.fixtures.python_capi.thrift_dep.thrift_types.DepStruct)),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "serial_struct",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(test.fixtures.python_capi.serialized_dep.thrift_types.SerializedStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            9,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "serial_union",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(test.fixtures.python_capi.serialized_dep.thrift_types.SerializedUnion),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            10,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "serial_error",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(test.fixtures.python_capi.serialized_dep.thrift_types.SerializedError),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.ComposeStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/ComposeStruct"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_ComposeStruct()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.ComposeStruct, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.ComposeStruct, self)


class Onion(metaclass=_fbthrift_python_types.UnionMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "myEnum",  # name
            lambda: _fbthrift_python_types.EnumTypeInfo(MyEnum),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "myStruct",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(PrimitiveStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            4,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "myString",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            6,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "intSet",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_i64),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "doubleList",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_double),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            9,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "strMap",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_binary, _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            10,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "adaptedInt",  # name
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.Onion"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/Onion"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_Onion()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.Onion, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.Onion, self)


class MyStructPatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            3,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "patchPrior",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyStructFieldPatch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            5,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "ensure",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyStructEnsureStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            6,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "patch",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyStructFieldPatch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            7,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "remove",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i16),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyStructPatch"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyStructPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyStructPatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyStructPatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MyStructPatch, self)


class MyStructField4Patch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            lambda: _fbthrift_python_types.EnumTypeInfo(MyEnum),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyStructField4Patch"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyStructField4Patch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyStructField4Patch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyStructField4Patch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MyStructField4Patch, self)


class MyStructField6Patch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_float),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "prepend",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_float),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            9,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "append",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_float),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyStructField6Patch"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyStructField6Patch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyStructField6Patch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyStructField6Patch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MyStructField6Patch, self)


class MyStructField7Patch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_binary, _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            3,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "patchPrior",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_binary, _fbthrift_python_types.StructTypeInfo(apache.thrift.op.patch.thrift_types.StringPatch)),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            5,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "add",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_binary, _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            6,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "patch",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_binary, _fbthrift_python_types.StructTypeInfo(apache.thrift.op.patch.thrift_types.StringPatch)),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            7,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "remove",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_binary),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            9,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "put",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_binary, _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyStructField7Patch"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyStructField7Patch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyStructField7Patch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyStructField7Patch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MyStructField7Patch, self)


class MyStructField8Patch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            7,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "remove",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "add",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyStructField8Patch"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyStructField8Patch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyStructField8Patch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyStructField8Patch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MyStructField8Patch, self)


class MyStructFieldPatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "inty",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(apache.thrift.op.patch.thrift_types.I64Patch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "stringy",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(apache.thrift.op.patch.thrift_types.StringPatch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            3,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "myItemy",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyDataItemPatch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            4,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "myEnumy",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyStructField4Patch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            5,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "booly",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(apache.thrift.op.patch.thrift_types.BoolPatch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            6,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "floatListy",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyStructField6Patch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            7,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "strMappy",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyStructField7Patch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "intSetty",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyStructField8Patch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyStructFieldPatch"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyStructFieldPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyStructFieldPatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyStructFieldPatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MyStructFieldPatch, self)


class MyStructEnsureStruct(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "inty",  # name
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "stringy",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            3,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "myItemy",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyDataItem),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            4,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "myEnumy",  # name
            lambda: _fbthrift_python_types.EnumTypeInfo(MyEnum),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            5,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "booly",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            6,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "floatListy",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_float),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            7,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "strMappy",  # name
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_binary, _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            8,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "intSetty",  # name
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyStructEnsureStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyStructEnsureStruct"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyStructEnsureStruct()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyStructEnsureStruct, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MyStructEnsureStruct, self)


class MyDataItemPatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "assign",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyDataItem),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            2,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "clear",  # name
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            3,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "patchPrior",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyDataItemFieldPatch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            5,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "ensure",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyDataItemEnsureStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            6,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "patch",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(MyDataItemFieldPatch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
        (
            7,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "remove",  # name
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i16),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyDataItemPatch"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyDataItemPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyDataItemPatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyDataItemPatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MyDataItemPatch, self)


class MyDataItemFieldPatch(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "s",  # name
            lambda: _fbthrift_python_types.StructTypeInfo(apache.thrift.op.patch.thrift_types.StringPatch),  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyDataItemFieldPatch"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyDataItemFieldPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyDataItemFieldPatch()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyDataItemFieldPatch, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MyDataItemFieldPatch, self)


class MyDataItemEnsureStruct(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "s",  # name
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyDataItemEnsureStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyDataItemEnsureStruct"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyDataItemEnsureStruct()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyDataItemEnsureStruct, self)

    def _to_py_deprecated(self):
        import importlib
        py_deprecated_types = importlib.import_module("module.ttypes")
        import thrift.util.converter
        return thrift.util.converter.to_py_struct(py_deprecated_types.MyDataItemEnsureStruct, self)

# This unfortunately has to be down here to prevent circular imports
import test.fixtures.python_capi.module.thrift_metadata

class MyEnum(_fbthrift_python_types.Enum, int):
    MyValue1 = 0
    MyValue2 = 1
    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyEnum"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/MyEnum"

    @staticmethod
    def __get_metadata__():
        return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_enum_MyEnum()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        return py3_types.MyEnum(self.value)

    def _to_py_deprecated(self):
        return self.value
class AnnoyingEnum(_fbthrift_python_types.Enum, int):
    FOO = 1
    BAR = 2
    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.AnnoyingEnum"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/python_capi/AnnoyingEnum"

    @staticmethod
    def __get_metadata__():
        return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_enum_AnnoyingEnum()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.python_capi.module.types")
        return py3_types.AnnoyingEnum(self.value)

    def _to_py_deprecated(self):
        return self.value

_fbthrift_all_enums = [
    MyEnum,
    AnnoyingEnum,
]

def _fbthrift_metadata__struct_MyStruct():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MyStruct()
def _fbthrift_metadata__struct_MyDataItem():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MyDataItem()
def _fbthrift_metadata__struct_TransitiveDoubler():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_TransitiveDoubler()
def _fbthrift_metadata__struct_DoubledPair():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_DoubledPair()
def _fbthrift_metadata__struct_StringPair():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_StringPair()
def _fbthrift_metadata__struct_EmptyStruct():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_EmptyStruct()
def _fbthrift_metadata__struct_PrimitiveStruct():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_PrimitiveStruct()
def _fbthrift_metadata__struct_AdaptedFields():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_AdaptedFields()
def _fbthrift_metadata__struct_ListStruct():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_ListStruct()
def _fbthrift_metadata__struct_SetStruct():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_SetStruct()
def _fbthrift_metadata__struct_MapStruct():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MapStruct()
def _fbthrift_metadata__struct_ComposeStruct():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_ComposeStruct()
def _fbthrift_metadata__struct_Onion():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_Onion()
def _fbthrift_metadata__struct_MyStructPatch():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MyStructPatch()
def _fbthrift_metadata__struct_MyStructField4Patch():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MyStructField4Patch()
def _fbthrift_metadata__struct_MyStructField6Patch():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MyStructField6Patch()
def _fbthrift_metadata__struct_MyStructField7Patch():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MyStructField7Patch()
def _fbthrift_metadata__struct_MyStructField8Patch():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MyStructField8Patch()
def _fbthrift_metadata__struct_MyStructFieldPatch():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MyStructFieldPatch()
def _fbthrift_metadata__struct_MyStructEnsureStruct():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MyStructEnsureStruct()
def _fbthrift_metadata__struct_MyDataItemPatch():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MyDataItemPatch()
def _fbthrift_metadata__struct_MyDataItemFieldPatch():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MyDataItemFieldPatch()
def _fbthrift_metadata__struct_MyDataItemEnsureStruct():
    return test.fixtures.python_capi.module.thrift_metadata.gen_metadata_struct_MyDataItemEnsureStruct()

_fbthrift_all_structs = [
    MyStruct,
    MyDataItem,
    TransitiveDoubler,
    DoubledPair,
    StringPair,
    EmptyStruct,
    PrimitiveStruct,
    AdaptedFields,
    ListStruct,
    SetStruct,
    MapStruct,
    ComposeStruct,
    Onion,
    MyStructPatch,
    MyStructField4Patch,
    MyStructField6Patch,
    MyStructField7Patch,
    MyStructField8Patch,
    MyStructFieldPatch,
    MyStructEnsureStruct,
    MyDataItemPatch,
    MyDataItemFieldPatch,
    MyDataItemEnsureStruct,
]
_fbthrift_python_types.fill_specs(*_fbthrift_all_structs)

uint64 = int
ui64 = int
signed_byte = int
IOBuf = _fbthrift_iobuf.IOBuf
IOBufPtr = _fbthrift_iobuf.IOBuf
ListAlias = ListStruct
