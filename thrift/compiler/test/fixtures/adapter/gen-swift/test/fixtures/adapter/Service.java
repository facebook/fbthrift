/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.adapter;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.service.*;
import com.facebook.thrift.client.*;
import com.google.common.util.concurrent.ListenableFuture;
import java.io.*;
import java.util.*;

@SwiftGenerated
@com.facebook.swift.service.ThriftService("Service")
public interface Service extends java.io.Closeable {
    @com.facebook.swift.service.ThriftService("Service")
    public interface Async extends java.io.Closeable {
        @java.lang.Override void close();

        @ThriftMethod(value = "func")
        ListenableFuture<Integer> func(
            @com.facebook.swift.codec.ThriftField(value=1, name="arg1", requiredness=Requiredness.NONE) final String arg1,
            @com.facebook.swift.codec.ThriftField(value=2, name="arg2", requiredness=Requiredness.NONE) final test.fixtures.adapter.Foo arg2);

        default ListenableFuture<Integer> func(
            @com.facebook.swift.codec.ThriftField(value=1, name="arg1", requiredness=Requiredness.NONE) final String arg1,
            @com.facebook.swift.codec.ThriftField(value=2, name="arg2", requiredness=Requiredness.NONE) final test.fixtures.adapter.Foo arg2,
            RpcOptions rpcOptions) {
            throw new UnsupportedOperationException();
        }

        default ListenableFuture<ResponseWrapper<Integer>> funcWrapper(
            @com.facebook.swift.codec.ThriftField(value=1, name="arg1", requiredness=Requiredness.NONE) final String arg1,
            @com.facebook.swift.codec.ThriftField(value=2, name="arg2", requiredness=Requiredness.NONE) final test.fixtures.adapter.Foo arg2,
            RpcOptions rpcOptions) {
            throw new UnsupportedOperationException();
        }
    }
    @java.lang.Override void close();

    @ThriftMethod(value = "func")
    int func(
        @com.facebook.swift.codec.ThriftField(value=1, name="arg1", requiredness=Requiredness.NONE) final String arg1,
        @com.facebook.swift.codec.ThriftField(value=2, name="arg2", requiredness=Requiredness.NONE) final test.fixtures.adapter.Foo arg2) throws org.apache.thrift.TException;

    default int func(
        @com.facebook.swift.codec.ThriftField(value=1, name="arg1", requiredness=Requiredness.NONE) final String arg1,
        @com.facebook.swift.codec.ThriftField(value=2, name="arg2", requiredness=Requiredness.NONE) final test.fixtures.adapter.Foo arg2,
        RpcOptions rpcOptions) throws org.apache.thrift.TException {
        throw new UnsupportedOperationException();
    }

    default ResponseWrapper<Integer> funcWrapper(
        @com.facebook.swift.codec.ThriftField(value=1, name="arg1", requiredness=Requiredness.NONE) final String arg1,
        @com.facebook.swift.codec.ThriftField(value=2, name="arg2", requiredness=Requiredness.NONE) final test.fixtures.adapter.Foo arg2,
        RpcOptions rpcOptions) throws org.apache.thrift.TException {
        throw new UnsupportedOperationException();
    }

    @com.facebook.swift.service.ThriftService("Service")
    interface Reactive extends reactor.core.Disposable {
        @ThriftMethod(value = "func")
        reactor.core.publisher.Mono<Integer> func(final String arg1, final test.fixtures.adapter.Foo arg2);

        default reactor.core.publisher.Mono<Integer> func(final String arg1, final test.fixtures.adapter.Foo arg2, RpcOptions rpcOptions) {
            throw new UnsupportedOperationException();
        }

        default reactor.core.publisher.Mono<ResponseWrapper<Integer>> funcWrapper(final String arg1, final test.fixtures.adapter.Foo arg2, RpcOptions rpcOptions) {
            throw new UnsupportedOperationException();
        }

    }
}
