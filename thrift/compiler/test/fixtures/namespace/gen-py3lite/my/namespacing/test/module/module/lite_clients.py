#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

import typing as _typing

from thrift.py3lite.client import (
    AsyncClient as _fbthrift_py3lite_AsyncClient,
    SyncClient as _fbthrift_py3lite_SyncClient,
    Client as _fbthrift_py3lite_Client,
)
import thrift.py3lite.exceptions as _fbthrift_py3lite_exceptions
import thrift.py3lite.types as _fbthrift_py3lite_types
import my.namespacing.test.module.module.lite_types


class TestService(_fbthrift_py3lite_Client["TestService.Async", "TestService.Sync"]):
    class Async(_fbthrift_py3lite_AsyncClient):
        async def init(
            self,
            int1: int
        ) -> int:
            resp = await self._send_request(
                "TestService",
                "init",
                my.namespacing.test.module.module.lite_types._fbthrift_TestService_init_args(
                    int1=int1,),
                my.namespacing.test.module.module.lite_types._fbthrift_TestService_init_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )


    class Sync(_fbthrift_py3lite_SyncClient):
        def init(
            self,
            int1: int
        ) -> int:
            resp = self._send_request(
                "TestService",
                "init",
                my.namespacing.test.module.module.lite_types._fbthrift_TestService_init_args(
                    int1=int1,),
                my.namespacing.test.module.module.lite_types._fbthrift_TestService_init_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )


