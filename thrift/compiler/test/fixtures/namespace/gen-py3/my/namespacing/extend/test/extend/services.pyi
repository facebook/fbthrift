#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

import folly.iobuf as _fbthrift_iobuf
import typing as _typing
from thrift.py3.server import RequestContext, ServiceInterface
from abc import abstractmethod, ABCMeta

import my.namespacing.extend.test.extend.types as _my_namespacing_extend_test_extend_types
import hsmodule.services as _hsmodule_services
import hsmodule.types as _hsmodule_types

_ExtendTestServiceInterfaceT = _typing.TypeVar('_ExtendTestServiceInterfaceT', bound='ExtendTestServiceInterface')


class ExtendTestServiceInterface(
    _hsmodule_services.HsTestServiceInterface,
    metaclass=ABCMeta,
):

    @staticmethod
    def pass_context_check(
        fn: _typing.Callable[
                [_ExtendTestServiceInterfaceT, RequestContext, _hsmodule_types.HsFoo],
                _typing.Coroutine[_typing.Any, _typing.Any, bool]
        ]
    ) -> _typing.Callable[
        [_ExtendTestServiceInterfaceT, _hsmodule_types.HsFoo],
        _typing.Coroutine[_typing.Any, _typing.Any, bool]
    ]: ...

    @abstractmethod
    async def check(
        self,
        struct1: _hsmodule_types.HsFoo
    ) -> bool: ...
    pass


