# TODO(afuller): Fix equivelence check in GTestHarness.
cpp2/RoundTripTest/double/NaN.Compact
cpp2/RoundTripTest/double/NaN.SimpleJson
cpp2/RoundTripTest/double/NaN.Binary
cpp2/RoundTripTest/float/NaN.Compact
cpp2/RoundTripTest/float/NaN.Binary
cpp2/RoundTripTest/float/NaN.SimpleJson
cpp2/RoundTripTest/testset.float/NaN.Binary
cpp2/RoundTripTest/testset.float/NaN.Compact
cpp2/RoundTripTest/testset.double/NaN.Binary
cpp2/RoundTripTest/testset.double/NaN.Compact
cpp2/RoundTripTest/testset.Optional.float/NaN.Binary
cpp2/RoundTripTest/testset.Optional.float/NaN.Compact
cpp2/RoundTripTest/testset.Optional.double/NaN.Binary
cpp2/RoundTripTest/testset.Optional.double/NaN.Compact
cpp2/RoundTripTest/testset.Terse.float/NaN.Binary
cpp2/RoundTripTest/testset.Terse.float/NaN.Compact
cpp2/RoundTripTest/testset.Terse.double/NaN.Binary
cpp2/RoundTripTest/testset.Terse.double/NaN.Compact
cpp2/RoundTripTest/testset.Adapted.float/NaN.Binary
cpp2/RoundTripTest/testset.Adapted.float/NaN.Compact
cpp2/RoundTripTest/testset.Adapted.double/NaN.Binary
cpp2/RoundTripTest/testset.Adapted.double/NaN.Compact
cpp2/RoundTripTest/testset.FieldAdapted.float/NaN.Binary
cpp2/RoundTripTest/testset.FieldAdapted.float/NaN.Compact
cpp2/RoundTripTest/testset.FieldAdapted.double/NaN.Binary
cpp2/RoundTripTest/testset.FieldAdapted.double/NaN.Compact
cpp2/RoundTripTest/list<double>/all.Binary
cpp2/RoundTripTest/list<double>/all.Compact
cpp2/RoundTripTest/list<double>/duplicate.Binary
cpp2/RoundTripTest/list<double>/duplicate.Compact
cpp2/RoundTripTest/list<double>/reverse.Binary
cpp2/RoundTripTest/list<double>/reverse.Compact
cpp2/RoundTripTest/list<float>/all.Binary
cpp2/RoundTripTest/list<float>/all.Compact
cpp2/RoundTripTest/list<float>/duplicate.Binary
cpp2/RoundTripTest/list<float>/duplicate.Compact
cpp2/RoundTripTest/list<float>/reverse.Binary
cpp2/RoundTripTest/list<float>/reverse.Compact
cpp2/RoundTripTest/testset.Adapted.adapted<double>/NaN.Binary
cpp2/RoundTripTest/testset.Adapted.adapted<double>/NaN.Compact
cpp2/RoundTripTest/testset.Adapted.adapted<float>/NaN.Binary
cpp2/RoundTripTest/testset.Adapted.adapted<float>/NaN.Compact
cpp2/RoundTripTest/testset.Adapted.list<adapted<double>>/all.Binary
cpp2/RoundTripTest/testset.Adapted.list<adapted<double>>/all.Compact
cpp2/RoundTripTest/testset.Adapted.list<adapted<double>>/duplicate.Binary
cpp2/RoundTripTest/testset.Adapted.list<adapted<double>>/duplicate.Compact
cpp2/RoundTripTest/testset.Adapted.list<adapted<double>>/reverse.Binary
cpp2/RoundTripTest/testset.Adapted.list<adapted<double>>/reverse.Compact
cpp2/RoundTripTest/testset.Adapted.list<adapted<float>>/all.Binary
cpp2/RoundTripTest/testset.Adapted.list<adapted<float>>/all.Compact
cpp2/RoundTripTest/testset.Adapted.list<adapted<float>>/duplicate.Binary
cpp2/RoundTripTest/testset.Adapted.list<adapted<float>>/duplicate.Compact
cpp2/RoundTripTest/testset.Adapted.list<adapted<float>>/reverse.Binary
cpp2/RoundTripTest/testset.Adapted.list<adapted<float>>/reverse.Compact
cpp2/RoundTripTest/testset.Adapted.list<double>/all.Binary
cpp2/RoundTripTest/testset.Adapted.list<double>/all.Compact
cpp2/RoundTripTest/testset.Adapted.list<double>/duplicate.Binary
cpp2/RoundTripTest/testset.Adapted.list<double>/duplicate.Compact
cpp2/RoundTripTest/testset.Adapted.list<double>/reverse.Binary
cpp2/RoundTripTest/testset.Adapted.list<double>/reverse.Compact
cpp2/RoundTripTest/testset.Adapted.list<float>/all.Binary
cpp2/RoundTripTest/testset.Adapted.list<float>/all.Compact
cpp2/RoundTripTest/testset.Adapted.list<float>/duplicate.Binary
cpp2/RoundTripTest/testset.Adapted.list<float>/duplicate.Compact
cpp2/RoundTripTest/testset.Adapted.list<float>/reverse.Binary
cpp2/RoundTripTest/testset.Adapted.list<float>/reverse.Compact
cpp2/RoundTripTest/testset.FieldAdapted.adapted<double>/NaN.Binary
cpp2/RoundTripTest/testset.FieldAdapted.adapted<double>/NaN.Compact
cpp2/RoundTripTest/testset.FieldAdapted.adapted<float>/NaN.Binary
cpp2/RoundTripTest/testset.FieldAdapted.adapted<float>/NaN.Compact
cpp2/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/all.Binary
cpp2/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/all.Compact
cpp2/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/duplicate.Binary
cpp2/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/duplicate.Compact
cpp2/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/reverse.Binary
cpp2/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/reverse.Compact
cpp2/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/all.Binary
cpp2/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/all.Compact
cpp2/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/duplicate.Binary
cpp2/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/duplicate.Compact
cpp2/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/reverse.Binary
cpp2/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/reverse.Compact
cpp2/RoundTripTest/testset.FieldAdapted.list<double>/all.Binary
cpp2/RoundTripTest/testset.FieldAdapted.list<double>/all.Compact
cpp2/RoundTripTest/testset.FieldAdapted.list<double>/duplicate.Binary
cpp2/RoundTripTest/testset.FieldAdapted.list<double>/duplicate.Compact
cpp2/RoundTripTest/testset.FieldAdapted.list<double>/reverse.Binary
cpp2/RoundTripTest/testset.FieldAdapted.list<double>/reverse.Compact
cpp2/RoundTripTest/testset.FieldAdapted.list<float>/all.Binary
cpp2/RoundTripTest/testset.FieldAdapted.list<float>/all.Compact
cpp2/RoundTripTest/testset.FieldAdapted.list<float>/duplicate.Binary
cpp2/RoundTripTest/testset.FieldAdapted.list<float>/duplicate.Compact
cpp2/RoundTripTest/testset.FieldAdapted.list<float>/reverse.Binary
cpp2/RoundTripTest/testset.FieldAdapted.list<float>/reverse.Compact
cpp2/RoundTripTest/testset.Optional.list<double>/all.Binary
cpp2/RoundTripTest/testset.Optional.list<double>/all.Compact
cpp2/RoundTripTest/testset.Optional.list<double>/duplicate.Binary
cpp2/RoundTripTest/testset.Optional.list<double>/duplicate.Compact
cpp2/RoundTripTest/testset.Optional.list<double>/reverse.Binary
cpp2/RoundTripTest/testset.Optional.list<double>/reverse.Compact
cpp2/RoundTripTest/testset.Optional.list<float>/all.Binary
cpp2/RoundTripTest/testset.Optional.list<float>/all.Compact
cpp2/RoundTripTest/testset.Optional.list<float>/duplicate.Binary
cpp2/RoundTripTest/testset.Optional.list<float>/duplicate.Compact
cpp2/RoundTripTest/testset.Optional.list<float>/reverse.Binary
cpp2/RoundTripTest/testset.Optional.list<float>/reverse.Compact
cpp2/RoundTripTest/testset.Terse.list<double>/all.Binary
cpp2/RoundTripTest/testset.Terse.list<double>/all.Compact
cpp2/RoundTripTest/testset.Terse.list<double>/duplicate.Binary
cpp2/RoundTripTest/testset.Terse.list<double>/duplicate.Compact
cpp2/RoundTripTest/testset.Terse.list<double>/reverse.Binary
cpp2/RoundTripTest/testset.Terse.list<double>/reverse.Compact
cpp2/RoundTripTest/testset.Terse.list<float>/all.Binary
cpp2/RoundTripTest/testset.Terse.list<float>/all.Compact
cpp2/RoundTripTest/testset.Terse.list<float>/duplicate.Binary
cpp2/RoundTripTest/testset.Terse.list<float>/duplicate.Compact
cpp2/RoundTripTest/testset.Terse.list<float>/reverse.Binary
cpp2/RoundTripTest/testset.Terse.list<float>/reverse.Compact
cpp2/RoundTripTest/testset.adapted<double>/NaN.Binary
cpp2/RoundTripTest/testset.adapted<double>/NaN.Compact
cpp2/RoundTripTest/testset.adapted<float>/NaN.Binary
cpp2/RoundTripTest/testset.adapted<float>/NaN.Compact
cpp2/RoundTripTest/testset.list<adapted<double>>/all.Binary
cpp2/RoundTripTest/testset.list<adapted<double>>/all.Compact
cpp2/RoundTripTest/testset.list<adapted<double>>/duplicate.Binary
cpp2/RoundTripTest/testset.list<adapted<double>>/duplicate.Compact
cpp2/RoundTripTest/testset.list<adapted<double>>/reverse.Binary
cpp2/RoundTripTest/testset.list<adapted<double>>/reverse.Compact
cpp2/RoundTripTest/testset.list<adapted<float>>/all.Binary
cpp2/RoundTripTest/testset.list<adapted<float>>/all.Compact
cpp2/RoundTripTest/testset.list<adapted<float>>/duplicate.Binary
cpp2/RoundTripTest/testset.list<adapted<float>>/duplicate.Compact
cpp2/RoundTripTest/testset.list<adapted<float>>/reverse.Binary
cpp2/RoundTripTest/testset.list<adapted<float>>/reverse.Compact
cpp2/RoundTripTest/testset.list<double>/all.Binary
cpp2/RoundTripTest/testset.list<double>/all.Compact
cpp2/RoundTripTest/testset.list<double>/duplicate.Binary
cpp2/RoundTripTest/testset.list<double>/duplicate.Compact
cpp2/RoundTripTest/testset.list<double>/reverse.Binary
cpp2/RoundTripTest/testset.list<double>/reverse.Compact
cpp2/RoundTripTest/testset.list<float>/all.Binary
cpp2/RoundTripTest/testset.list<float>/all.Compact
cpp2/RoundTripTest/testset.list<float>/duplicate.Binary
cpp2/RoundTripTest/testset.list<float>/duplicate.Compact
cpp2/RoundTripTest/testset.list<float>/reverse.Binary
cpp2/RoundTripTest/testset.list<float>/reverse.Compact
cpp2/RoundTripTest/testset.union.adapted<double>/NaN.Binary
cpp2/RoundTripTest/testset.union.adapted<double>/NaN.Compact
cpp2/RoundTripTest/testset.union.adapted<float>/NaN.Binary
cpp2/RoundTripTest/testset.union.adapted<float>/NaN.Compact
cpp2/RoundTripTest/testset.union.double/NaN.Binary
cpp2/RoundTripTest/testset.union.double/NaN.Compact
cpp2/RoundTripTest/testset.union.float/NaN.Binary
cpp2/RoundTripTest/testset.union.float/NaN.Compact
cpp2/RoundTripTest/testset.union.list<adapted<double>>/all.Binary
cpp2/RoundTripTest/testset.union.list<adapted<double>>/all.Compact
cpp2/RoundTripTest/testset.union.list<adapted<double>>/duplicate.Binary
cpp2/RoundTripTest/testset.union.list<adapted<double>>/duplicate.Compact
cpp2/RoundTripTest/testset.union.list<adapted<double>>/reverse.Binary
cpp2/RoundTripTest/testset.union.list<adapted<double>>/reverse.Compact
cpp2/RoundTripTest/testset.union.list<adapted<float>>/all.Binary
cpp2/RoundTripTest/testset.union.list<adapted<float>>/all.Compact
cpp2/RoundTripTest/testset.union.list<adapted<float>>/duplicate.Binary
cpp2/RoundTripTest/testset.union.list<adapted<float>>/duplicate.Compact
cpp2/RoundTripTest/testset.union.list<adapted<float>>/reverse.Binary
cpp2/RoundTripTest/testset.union.list<adapted<float>>/reverse.Compact
cpp2/RoundTripTest/testset.union.list<double>/all.Binary
cpp2/RoundTripTest/testset.union.list<double>/all.Compact
cpp2/RoundTripTest/testset.union.list<double>/duplicate.Binary
cpp2/RoundTripTest/testset.union.list<double>/duplicate.Compact
cpp2/RoundTripTest/testset.union.list<double>/reverse.Binary
cpp2/RoundTripTest/testset.union.list<double>/reverse.Compact
cpp2/RoundTripTest/testset.union.list<float>/all.Binary
cpp2/RoundTripTest/testset.union.list<float>/all.Compact
cpp2/RoundTripTest/testset.union.list<float>/duplicate.Binary
cpp2/RoundTripTest/testset.union.list<float>/duplicate.Compact
cpp2/RoundTripTest/testset.union.list<float>/reverse.Binary
cpp2/RoundTripTest/testset.union.list<float>/reverse.Compact
cpp2/CompatibilityTest/testset.binary.string/ChangeFieldType/bad_utf8.Binary
cpp2/CompatibilityTest/testset.binary.string/ChangeFieldType/bad_utf8.Compact
cpp2/CompatibilityTest/testset.float/StructToUnion/NaN.Binary
cpp2/CompatibilityTest/testset.float/StructToUnion/NaN.Compact
cpp2/CompatibilityTest/testset.double/StructToUnion/NaN.Binary
cpp2/CompatibilityTest/testset.double/StructToUnion/NaN.Compact
cpp2/CompatibilityTest/testset.float/StructToException/NaN.Binary
cpp2/CompatibilityTest/testset.float/StructToException/NaN.Compact
cpp2/CompatibilityTest/testset.double/StructToException/NaN.Binary
cpp2/CompatibilityTest/testset.double/StructToException/NaN.Compact
cpp2/CompatibilityTest/testset.float/UnionToStruct/NaN.Binary
cpp2/CompatibilityTest/testset.float/UnionToStruct/NaN.Compact
cpp2/CompatibilityTest/testset.double/UnionToStruct/NaN.Binary
cpp2/CompatibilityTest/testset.double/UnionToStruct/NaN.Compact
cpp2/CompatibilityTest/testset.float/UnionToException/NaN.Binary
cpp2/CompatibilityTest/testset.float/UnionToException/NaN.Compact
cpp2/CompatibilityTest/testset.double/UnionToException/NaN.Binary
cpp2/CompatibilityTest/testset.double/UnionToException/NaN.Compact
cpp2/CompatibilityTest/testset.float/ExceptionToStruct/NaN.Binary
cpp2/CompatibilityTest/testset.float/ExceptionToStruct/NaN.Compact
cpp2/CompatibilityTest/testset.double/ExceptionToStruct/NaN.Binary
cpp2/CompatibilityTest/testset.double/ExceptionToStruct/NaN.Compact
cpp2/CompatibilityTest/testset.float/ExceptionToUnion/NaN.Binary
cpp2/CompatibilityTest/testset.float/ExceptionToUnion/NaN.Compact
cpp2/CompatibilityTest/testset.double/ExceptionToUnion/NaN.Binary
cpp2/CompatibilityTest/testset.double/ExceptionToUnion/NaN.Compact
cpp2/PatchTest/float/assign.NaN.Binary
cpp2/PatchTest/double/add.NaN.Compact
cpp2/PatchTest/double/assign.NaN.Compact
cpp2/PatchTest/float/add.NaN.Compact
cpp2/PatchTest/float/assign.NaN.Compact
cpp2/PatchTest/double/assign.NaN.Binary
cpp2/PatchTest/float/add.NaN.Binary
cpp2/PatchTest/double/add.NaN.Binary
cpp2/PatchTest/float/add.NaN_1.Binary
cpp2/PatchTest/double/add.NaN_1.Binary
cpp2/PatchTest/float/add.NaN_1.Compact
cpp2/PatchTest/double/add.NaN_1.Compact
cpp2/PatchTest/set<float>/assign.NaN.Binary
cpp2/PatchTest/list<float>/assign.NaN.Compact
cpp2/PatchTest/set<float>/assign.NaN.Compact
cpp2/PatchTest/set<double>/assign.NaN.Compact
cpp2/PatchTest/set<double>/assign.NaN.Binary
cpp2/PatchTest/list<float>/assign.NaN.Binary
cpp2/PatchTest/list<double>/assign.NaN.Binary
cpp2/PatchTest/list<double>/assign.NaN.Compact
cpp2/PatchTest/set<double>/prepend.NaN.Compact
cpp2/PatchTest/list<float>/prepend.NaN.Binary
cpp2/PatchTest/list<double>/prepend.NaN.Binary
cpp2/PatchTest/list<float>/prepend.NaN.Compact
cpp2/PatchTest/set<float>/prepend.NaN.Compact
cpp2/PatchTest/set<float>/prepend.NaN.Binary
cpp2/PatchTest/list<double>/prepend.NaN.Compact
cpp2/PatchTest/set<double>/prepend.NaN.Binary
cpp2/PatchTest/list<double>/prepend_set.NaN.Binary
cpp2/PatchTest/list<float>/prepend_set.NaN.Compact
cpp2/PatchTest/list<double>/prepend_set.NaN.Compact
cpp2/PatchTest/list<float>/prepend_set.NaN.Binary
cpp2/PatchTest/list<double>/append.NaN.Compact
cpp2/PatchTest/list<float>/append.NaN.Compact
cpp2/PatchTest/set<float>/append.NaN.Compact
cpp2/PatchTest/set<double>/append.NaN.Binary
cpp2/PatchTest/list<float>/append.NaN.Binary
cpp2/PatchTest/set<double>/append.NaN.Compact
cpp2/PatchTest/set<float>/append.NaN.Binary
cpp2/PatchTest/list<double>/append.NaN.Binary
# Thrift Patch stores elements to remove in a set.
# After changing protocol::Value::setValue to a hash set,
# we can no longer find NaN inside a hash set. Therefore,
# we can no longer remove NaN element in list and set.
cpp2/PatchTest/list<float>/remove.NaN.Binary
cpp2/PatchTest/list<float>/remove.NaN.Compact
cpp2/PatchTest/list<double>/remove.NaN.Binary
cpp2/PatchTest/list<double>/remove.NaN.Compact
cpp2/PatchTest/set<float>/remove.NaN.Binary
cpp2/PatchTest/set<float>/remove.NaN.Compact
cpp2/PatchTest/set<double>/remove.NaN.Binary
cpp2/PatchTest/set<double>/remove.NaN.Compact
#
#
# Python: NaN
#
python/RoundTripTest/double/NaN.Binary
python/RoundTripTest/double/NaN.Compact
python/RoundTripTest/float/NaN.Binary
python/RoundTripTest/float/NaN.Compact
python/RoundTripTest/testset.float/NaN.Binary
python/RoundTripTest/testset.float/NaN.Compact
python/RoundTripTest/testset.double/NaN.Binary
python/RoundTripTest/testset.double/NaN.Compact
python/RoundTripTest/testset.Optional.float/NaN.Binary
python/RoundTripTest/testset.Optional.float/NaN.Compact
python/RoundTripTest/testset.Optional.double/NaN.Binary
python/RoundTripTest/testset.Optional.double/NaN.Compact
python/RoundTripTest/testset.Terse.float/NaN.Binary
python/RoundTripTest/testset.Terse.float/NaN.Compact
python/RoundTripTest/testset.Terse.double/NaN.Binary
python/RoundTripTest/testset.Terse.double/NaN.Compact
python/RoundTripTest/testset.Terse.double/neg_zero.Binary
python/RoundTripTest/testset.Terse.double/neg_zero.Compact
python/RoundTripTest/testset.Terse.float/neg_zero.Binary
python/RoundTripTest/testset.Terse.float/neg_zero.Compact
python/RoundTripTest/testset.Adapted.float/NaN.Binary
python/RoundTripTest/testset.Adapted.float/NaN.Compact
python/RoundTripTest/testset.Adapted.double/NaN.Binary
python/RoundTripTest/testset.Adapted.double/NaN.Compact
python/RoundTripTest/testset.FieldAdapted.float/NaN.Binary
python/RoundTripTest/testset.FieldAdapted.float/NaN.Compact
python/RoundTripTest/testset.FieldAdapted.double/NaN.Binary
python/RoundTripTest/testset.FieldAdapted.double/NaN.Compact
python/RoundTripTest/testset.Adapted.adapted<double>/NaN.Binary
python/RoundTripTest/testset.Adapted.adapted<double>/NaN.Compact
python/RoundTripTest/testset.Adapted.adapted<float>/NaN.Binary
python/RoundTripTest/testset.Adapted.adapted<float>/NaN.Compact
python/RoundTripTest/testset.FieldAdapted.adapted<double>/NaN.Binary
python/RoundTripTest/testset.FieldAdapted.adapted<double>/NaN.Compact
python/RoundTripTest/testset.FieldAdapted.adapted<float>/NaN.Binary
python/RoundTripTest/testset.FieldAdapted.adapted<float>/NaN.Compact
python/RoundTripTest/testset.adapted<double>/NaN.Binary
python/RoundTripTest/testset.adapted<double>/NaN.Compact
python/RoundTripTest/testset.adapted<float>/NaN.Binary
python/RoundTripTest/testset.adapted<float>/NaN.Compact
python/RoundTripTest/testset.union.adapted<double>/NaN.Binary
python/RoundTripTest/testset.union.adapted<double>/NaN.Compact
python/RoundTripTest/testset.union.adapted<float>/NaN.Binary
python/RoundTripTest/testset.union.adapted<float>/NaN.Compact
python/RoundTripTest/testset.union.double/NaN.Binary
python/RoundTripTest/testset.union.double/NaN.Compact
python/RoundTripTest/testset.union.float/NaN.Binary
python/RoundTripTest/testset.union.float/NaN.Compact
python/CompatibilityTest/testset.binary.string/ChangeFieldType/bad_utf8.Binary
python/CompatibilityTest/testset.binary.string/ChangeFieldType/bad_utf8.Compact
python/CompatibilityTest/testset.float/StructToUnion/NaN.Binary
python/CompatibilityTest/testset.float/StructToUnion/NaN.Compact
python/CompatibilityTest/testset.double/StructToUnion/NaN.Binary
python/CompatibilityTest/testset.double/StructToUnion/NaN.Compact
python/CompatibilityTest/testset.float/StructToException/NaN.Binary
python/CompatibilityTest/testset.float/StructToException/NaN.Compact
python/CompatibilityTest/testset.double/StructToException/NaN.Binary
python/CompatibilityTest/testset.double/StructToException/NaN.Compact
python/CompatibilityTest/testset.float/UnionToStruct/NaN.Binary
python/CompatibilityTest/testset.float/UnionToStruct/NaN.Compact
python/CompatibilityTest/testset.double/UnionToStruct/NaN.Binary
python/CompatibilityTest/testset.double/UnionToStruct/NaN.Compact
python/CompatibilityTest/testset.float/UnionToException/NaN.Binary
python/CompatibilityTest/testset.float/UnionToException/NaN.Compact
python/CompatibilityTest/testset.double/UnionToException/NaN.Binary
python/CompatibilityTest/testset.double/UnionToException/NaN.Compact
python/CompatibilityTest/testset.float/ExceptionToStruct/NaN.Binary
python/CompatibilityTest/testset.float/ExceptionToStruct/NaN.Compact
python/CompatibilityTest/testset.double/ExceptionToStruct/NaN.Binary
python/CompatibilityTest/testset.double/ExceptionToStruct/NaN.Compact
python/CompatibilityTest/testset.float/ExceptionToUnion/NaN.Binary
python/CompatibilityTest/testset.float/ExceptionToUnion/NaN.Compact
python/CompatibilityTest/testset.double/ExceptionToUnion/NaN.Binary
python/CompatibilityTest/testset.double/ExceptionToUnion/NaN.Compact
#
#
# Python: containers of double (will fail since they contain NaN)
python/RoundTripTest/list<double>/all.Binary
python/RoundTripTest/list<double>/all.Compact
python/RoundTripTest/list<double>/duplicate.Binary
python/RoundTripTest/list<double>/duplicate.Compact
python/RoundTripTest/list<double>/reverse.Binary
python/RoundTripTest/list<double>/reverse.Compact
python/RoundTripTest/list<float>/all.Binary
python/RoundTripTest/list<float>/all.Compact
python/RoundTripTest/list<float>/duplicate.Binary
python/RoundTripTest/list<float>/duplicate.Compact
python/RoundTripTest/list<float>/reverse.Binary
python/RoundTripTest/list<float>/reverse.Compact
python/RoundTripTest/testset.Adapted.list<adapted<double>>/all.Binary
python/RoundTripTest/testset.Adapted.list<adapted<double>>/all.Compact
python/RoundTripTest/testset.Adapted.list<adapted<double>>/duplicate.Binary
python/RoundTripTest/testset.Adapted.list<adapted<double>>/duplicate.Compact
python/RoundTripTest/testset.Adapted.list<adapted<double>>/reverse.Binary
python/RoundTripTest/testset.Adapted.list<adapted<double>>/reverse.Compact
python/RoundTripTest/testset.Adapted.list<adapted<float>>/all.Binary
python/RoundTripTest/testset.Adapted.list<adapted<float>>/all.Compact
python/RoundTripTest/testset.Adapted.list<adapted<float>>/duplicate.Binary
python/RoundTripTest/testset.Adapted.list<adapted<float>>/duplicate.Compact
python/RoundTripTest/testset.Adapted.list<adapted<float>>/reverse.Binary
python/RoundTripTest/testset.Adapted.list<adapted<float>>/reverse.Compact
python/RoundTripTest/testset.Adapted.list<double>/all.Binary
python/RoundTripTest/testset.Adapted.list<double>/all.Compact
python/RoundTripTest/testset.Adapted.list<double>/duplicate.Binary
python/RoundTripTest/testset.Adapted.list<double>/duplicate.Compact
python/RoundTripTest/testset.Adapted.list<double>/reverse.Binary
python/RoundTripTest/testset.Adapted.list<double>/reverse.Compact
python/RoundTripTest/testset.Adapted.list<float>/all.Binary
python/RoundTripTest/testset.Adapted.list<float>/all.Compact
python/RoundTripTest/testset.Adapted.list<float>/duplicate.Binary
python/RoundTripTest/testset.Adapted.list<float>/duplicate.Compact
python/RoundTripTest/testset.Adapted.list<float>/reverse.Binary
python/RoundTripTest/testset.Adapted.list<float>/reverse.Compact
python/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/all.Binary
python/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/all.Compact
python/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/duplicate.Binary
python/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/duplicate.Compact
python/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/reverse.Binary
python/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/reverse.Compact
python/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/all.Binary
python/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/all.Compact
python/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/duplicate.Binary
python/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/duplicate.Compact
python/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/reverse.Binary
python/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/reverse.Compact
python/RoundTripTest/testset.FieldAdapted.list<double>/all.Binary
python/RoundTripTest/testset.FieldAdapted.list<double>/all.Compact
python/RoundTripTest/testset.FieldAdapted.list<double>/duplicate.Binary
python/RoundTripTest/testset.FieldAdapted.list<double>/duplicate.Compact
python/RoundTripTest/testset.FieldAdapted.list<double>/reverse.Binary
python/RoundTripTest/testset.FieldAdapted.list<double>/reverse.Compact
python/RoundTripTest/testset.FieldAdapted.list<float>/all.Binary
python/RoundTripTest/testset.FieldAdapted.list<float>/all.Compact
python/RoundTripTest/testset.FieldAdapted.list<float>/duplicate.Binary
python/RoundTripTest/testset.FieldAdapted.list<float>/duplicate.Compact
python/RoundTripTest/testset.FieldAdapted.list<float>/reverse.Binary
python/RoundTripTest/testset.FieldAdapted.list<float>/reverse.Compact
python/RoundTripTest/testset.Optional.list<double>/all.Binary
python/RoundTripTest/testset.Optional.list<double>/all.Compact
python/RoundTripTest/testset.Optional.list<double>/duplicate.Binary
python/RoundTripTest/testset.Optional.list<double>/duplicate.Compact
python/RoundTripTest/testset.Optional.list<double>/reverse.Binary
python/RoundTripTest/testset.Optional.list<double>/reverse.Compact
python/RoundTripTest/testset.Optional.list<float>/all.Binary
python/RoundTripTest/testset.Optional.list<float>/all.Compact
python/RoundTripTest/testset.Optional.list<float>/duplicate.Binary
python/RoundTripTest/testset.Optional.list<float>/duplicate.Compact
python/RoundTripTest/testset.Optional.list<float>/reverse.Binary
python/RoundTripTest/testset.Optional.list<float>/reverse.Compact
python/RoundTripTest/testset.Terse.list<double>/all.Binary
python/RoundTripTest/testset.Terse.list<double>/all.Compact
python/RoundTripTest/testset.Terse.list<double>/duplicate.Binary
python/RoundTripTest/testset.Terse.list<double>/duplicate.Compact
python/RoundTripTest/testset.Terse.list<double>/reverse.Binary
python/RoundTripTest/testset.Terse.list<double>/reverse.Compact
python/RoundTripTest/testset.Terse.list<float>/all.Binary
python/RoundTripTest/testset.Terse.list<float>/all.Compact
python/RoundTripTest/testset.Terse.list<float>/duplicate.Binary
python/RoundTripTest/testset.Terse.list<float>/duplicate.Compact
python/RoundTripTest/testset.Terse.list<float>/reverse.Binary
python/RoundTripTest/testset.Terse.list<float>/reverse.Compact
python/RoundTripTest/testset.list<adapted<double>>/all.Binary
python/RoundTripTest/testset.list<adapted<double>>/all.Compact
python/RoundTripTest/testset.list<adapted<double>>/duplicate.Binary
python/RoundTripTest/testset.list<adapted<double>>/duplicate.Compact
python/RoundTripTest/testset.list<adapted<double>>/reverse.Binary
python/RoundTripTest/testset.list<adapted<double>>/reverse.Compact
python/RoundTripTest/testset.list<adapted<float>>/all.Binary
python/RoundTripTest/testset.list<adapted<float>>/all.Compact
python/RoundTripTest/testset.list<adapted<float>>/duplicate.Binary
python/RoundTripTest/testset.list<adapted<float>>/duplicate.Compact
python/RoundTripTest/testset.list<adapted<float>>/reverse.Binary
python/RoundTripTest/testset.list<adapted<float>>/reverse.Compact
python/RoundTripTest/testset.list<double>/all.Binary
python/RoundTripTest/testset.list<double>/all.Compact
python/RoundTripTest/testset.list<double>/duplicate.Binary
python/RoundTripTest/testset.list<double>/duplicate.Compact
python/RoundTripTest/testset.list<double>/reverse.Binary
python/RoundTripTest/testset.list<double>/reverse.Compact
python/RoundTripTest/testset.list<float>/all.Binary
python/RoundTripTest/testset.list<float>/all.Compact
python/RoundTripTest/testset.list<float>/duplicate.Binary
python/RoundTripTest/testset.list<float>/duplicate.Compact
python/RoundTripTest/testset.list<float>/reverse.Binary
python/RoundTripTest/testset.list<float>/reverse.Compact
python/RoundTripTest/testset.union.list<adapted<double>>/all.Binary
python/RoundTripTest/testset.union.list<adapted<double>>/all.Compact
python/RoundTripTest/testset.union.list<adapted<double>>/duplicate.Binary
python/RoundTripTest/testset.union.list<adapted<double>>/duplicate.Compact
python/RoundTripTest/testset.union.list<adapted<double>>/reverse.Binary
python/RoundTripTest/testset.union.list<adapted<double>>/reverse.Compact
python/RoundTripTest/testset.union.list<adapted<float>>/all.Binary
python/RoundTripTest/testset.union.list<adapted<float>>/all.Compact
python/RoundTripTest/testset.union.list<adapted<float>>/duplicate.Binary
python/RoundTripTest/testset.union.list<adapted<float>>/duplicate.Compact
python/RoundTripTest/testset.union.list<adapted<float>>/reverse.Binary
python/RoundTripTest/testset.union.list<adapted<float>>/reverse.Compact
python/RoundTripTest/testset.union.list<double>/all.Binary
python/RoundTripTest/testset.union.list<double>/all.Compact
python/RoundTripTest/testset.union.list<double>/duplicate.Binary
python/RoundTripTest/testset.union.list<double>/duplicate.Compact
python/RoundTripTest/testset.union.list<double>/reverse.Binary
python/RoundTripTest/testset.union.list<double>/reverse.Compact
python/RoundTripTest/testset.union.list<float>/all.Binary
python/RoundTripTest/testset.union.list<float>/all.Compact
python/RoundTripTest/testset.union.list<float>/duplicate.Binary
python/RoundTripTest/testset.union.list<float>/duplicate.Compact
python/RoundTripTest/testset.union.list<float>/reverse.Binary
python/RoundTripTest/testset.union.list<float>/reverse.Compact
#
#
# Python RPC conformance client tests
python/ThriftRPCClientTest/SinkBasic/Success.SinkBasicTest
python/ThriftRPCClientTest/SinkFragmentation/Success.SinkFragmentationTest
python/ThriftRPCClientTest/SinkSubsequestCredits/Success.SinkSubsequentCreditsTest
python/ThriftRPCClientTest/StreamChunkTimeout/Success.StreamChunkTimeoutTest
python/ThriftRPCClientTest/InteractionConstructorTest/Success.InteractionConstructorTest
python/ThriftRPCClientTest/InteractionFactoryFunctionTest/Success.InteractionFactoryFunctionTest
python/ThriftRPCClientTest/InteractionConstructorPersistsStateTest/Success.InteractionConstructorPersistsStateTest
python/ThriftRPCClientTest/InteractionFactoryFunctionPersistsStateTest/Success.InteractionFactoryFunctionPersistsStateTest
python/ThriftRPCClientTest/InteractionConstructorTerminationTest/Success.InteractionConstructorTerminationTest
python/ThriftRPCClientTest/InteractionFactoryFunctionTerminationTest/Success.InteractionFactoryFunctionTerminationTest
python/ThriftRPCClientTest/StreamDeclaredException/Success.StreamDeclaredExceptionTest
python/ThriftRPCClientTest/StreamUndeclaredException/Success.StreamUndeclaredExceptionTest
python/ThriftRPCClientTest/StreamInitialDeclaredException/Success.StreamInitialDeclaredExceptionTest
python/ThriftRPCClientTest/StreamInitialUndeclaredException/Success.StreamInitialUndeclaredExceptionTest
python/ThriftRPCClientTest/StreamInitialTimeout/Success.StreamInitialTimeoutTest
# Python RPC conformance server tests
python/ThriftRPCServerTest/StreamSubsequentCredits/Success.StreamSubsequentCreditsTest
python/ThriftRPCServerTest/SinkBasic/Success.SinkBasicTest
python/ThriftRPCServerTest/SinkChunkTimeout/Success.SinkChunkTimeoutTest
python/ThriftRPCServerTest/StreamFragmentation/Success.StreamFragmentationTest
python/ThriftRPCServerTest/StreamInitialResponse/Success.StreamInitialResponseTest
python/ThriftRPCServerTest/StreamBasic/Success.StreamBasicTest
python/ThriftRPCServerTest/SinkSubsequestCredits/Success.SinkSubsequentCreditsTest
python/ThriftRPCServerTest/SinkFragmentation/Success.SinkFragmentationTest
python/ThriftRPCServerTest/InteractionConstructorTest/Success.InteractionConstructorTest
python/ThriftRPCServerTest/InteractionFactoryFunctionTest/Success.InteractionFactoryFunctionTest
python/ThriftRPCServerTest/InteractionConstructorPersistsStateTest/Success.InteractionConstructorPersistsStateTest
python/ThriftRPCServerTest/InteractionFactoryFunctionPersistsStateTest/Success.InteractionFactoryFunctionPersistsStateTest
python/ThriftRPCServerTest/InteractionFactoryFunctionTerminationTest/Success.InteractionFactoryFunctionTerminationTest
python/ThriftRPCServerTest/InteractionConstructorTerminationTest/Success.InteractionConstructorTerminationTest
python/ThriftRPCServerTest/StreamDeclaredException/Success.StreamDeclaredExceptionTest
python/ThriftRPCServerTest/StreamUndeclaredException/Success.StreamUndeclaredExceptionTest
python/ThriftRPCServerTest/StreamInitialDeclaredException/Success.StreamInitialDeclaredExceptionTest
python/ThriftRPCServerTest/StreamInitialUndeclaredException/Success.StreamInitialUndeclaredExceptionTest
#
#
#
# Java: NaN
#
java2/RoundTripTest/double/NaN.Binary
java2/RoundTripTest/double/NaN.Compact
java2/RoundTripTest/float/NaN.Binary
java2/RoundTripTest/float/NaN.Compact
java2/RoundTripTest/testset.float/NaN.Binary
java2/RoundTripTest/testset.float/NaN.Compact
java2/RoundTripTest/testset.double/NaN.Binary
java2/RoundTripTest/testset.double/NaN.Compact
java2/RoundTripTest/testset.Optional.float/NaN.Binary
java2/RoundTripTest/testset.Optional.float/NaN.Compact
java2/RoundTripTest/testset.Optional.double/NaN.Binary
java2/RoundTripTest/testset.Optional.double/NaN.Compact
java2/RoundTripTest/testset.Terse.float/NaN.Binary
java2/RoundTripTest/testset.Terse.float/NaN.Compact
java2/RoundTripTest/testset.Terse.double/NaN.Binary
java2/RoundTripTest/testset.Terse.double/NaN.Compact
java2/RoundTripTest/testset.Terse.double/neg_zero.Binary
java2/RoundTripTest/testset.Terse.double/neg_zero.Compact
java2/RoundTripTest/testset.Terse.float/neg_zero.Binary
java2/RoundTripTest/testset.Terse.float/neg_zero.Compact
java2/RoundTripTest/testset.Adapted.float/NaN.Binary
java2/RoundTripTest/testset.Adapted.float/NaN.Compact
java2/RoundTripTest/testset.Adapted.double/NaN.Binary
java2/RoundTripTest/testset.Adapted.double/NaN.Compact
java2/RoundTripTest/testset.FieldAdapted.float/NaN.Binary
java2/RoundTripTest/testset.FieldAdapted.float/NaN.Compact
java2/RoundTripTest/testset.FieldAdapted.double/NaN.Binary
java2/RoundTripTest/testset.FieldAdapted.double/NaN.Compact
java2/RoundTripTest/testset.Adapted.adapted<double>/NaN.Binary
java2/RoundTripTest/testset.Adapted.adapted<double>/NaN.Compact
java2/RoundTripTest/testset.Adapted.adapted<float>/NaN.Binary
java2/RoundTripTest/testset.Adapted.adapted<float>/NaN.Compact
java2/RoundTripTest/testset.FieldAdapted.adapted<double>/NaN.Binary
java2/RoundTripTest/testset.FieldAdapted.adapted<double>/NaN.Compact
java2/RoundTripTest/testset.FieldAdapted.adapted<float>/NaN.Binary
java2/RoundTripTest/testset.FieldAdapted.adapted<float>/NaN.Compact
java2/RoundTripTest/testset.adapted<double>/NaN.Binary
java2/RoundTripTest/testset.adapted<double>/NaN.Compact
java2/RoundTripTest/testset.adapted<float>/NaN.Binary
java2/RoundTripTest/testset.adapted<float>/NaN.Compact
java2/RoundTripTest/testset.union.adapted<double>/NaN.Binary
java2/RoundTripTest/testset.union.adapted<double>/NaN.Compact
java2/RoundTripTest/testset.union.adapted<float>/NaN.Binary
java2/RoundTripTest/testset.union.adapted<float>/NaN.Compact
java2/RoundTripTest/testset.union.double/NaN.Binary
java2/RoundTripTest/testset.union.double/NaN.Compact
java2/RoundTripTest/testset.union.float/NaN.Binary
java2/RoundTripTest/testset.union.float/NaN.Compact
java2/CompatibilityTest/testset.binary.string/ChangeFieldType/bad_utf8.Binary
java2/CompatibilityTest/testset.binary.string/ChangeFieldType/bad_utf8.Compact
java2/CompatibilityTest/testset.float/StructToUnion/NaN.Binary
java2/CompatibilityTest/testset.float/StructToUnion/NaN.Compact
java2/CompatibilityTest/testset.double/StructToUnion/NaN.Binary
java2/CompatibilityTest/testset.double/StructToUnion/NaN.Compact
java2/CompatibilityTest/testset.float/StructToException/NaN.Binary
java2/CompatibilityTest/testset.float/StructToException/NaN.Compact
java2/CompatibilityTest/testset.double/StructToException/NaN.Binary
java2/CompatibilityTest/testset.double/StructToException/NaN.Compact
java2/CompatibilityTest/testset.float/UnionToStruct/NaN.Binary
java2/CompatibilityTest/testset.float/UnionToStruct/NaN.Compact
java2/CompatibilityTest/testset.double/UnionToStruct/NaN.Binary
java2/CompatibilityTest/testset.double/UnionToStruct/NaN.Compact
java2/CompatibilityTest/testset.float/UnionToException/NaN.Binary
java2/CompatibilityTest/testset.float/UnionToException/NaN.Compact
java2/CompatibilityTest/testset.double/UnionToException/NaN.Binary
java2/CompatibilityTest/testset.double/UnionToException/NaN.Compact
java2/CompatibilityTest/testset.float/ExceptionToStruct/NaN.Binary
java2/CompatibilityTest/testset.float/ExceptionToStruct/NaN.Compact
java2/CompatibilityTest/testset.double/ExceptionToStruct/NaN.Binary
java2/CompatibilityTest/testset.double/ExceptionToStruct/NaN.Compact
java2/CompatibilityTest/testset.float/ExceptionToUnion/NaN.Binary
java2/CompatibilityTest/testset.float/ExceptionToUnion/NaN.Compact
java2/CompatibilityTest/testset.double/ExceptionToUnion/NaN.Binary
java2/CompatibilityTest/testset.double/ExceptionToUnion/NaN.Compact
java2/CompatibilityTest/testset.Terse.Unqualified/ChangeQualifier/empty.Binary
java2/CompatibilityTest/testset.Terse.Unqualified/ChangeQualifier/empty.Compact
#
#
# Java: containers of double (will fail since they contain NaN)
java2/RoundTripTest/list<double>/all.Binary
java2/RoundTripTest/list<double>/all.Compact
java2/RoundTripTest/list<double>/duplicate.Binary
java2/RoundTripTest/list<double>/duplicate.Compact
java2/RoundTripTest/list<double>/reverse.Binary
java2/RoundTripTest/list<double>/reverse.Compact
java2/RoundTripTest/list<float>/all.Binary
java2/RoundTripTest/list<float>/all.Compact
java2/RoundTripTest/list<float>/duplicate.Binary
java2/RoundTripTest/list<float>/duplicate.Compact
java2/RoundTripTest/list<float>/reverse.Binary
java2/RoundTripTest/list<float>/reverse.Compact
java2/RoundTripTest/testset.Adapted.list<adapted<binary>>/all.Binary
java2/RoundTripTest/testset.Adapted.list<adapted<binary>>/all.Compact
java2/RoundTripTest/testset.Adapted.list<adapted<binary>>/duplicate.Binary
java2/RoundTripTest/testset.Adapted.list<adapted<binary>>/duplicate.Compact
java2/RoundTripTest/testset.Adapted.list<adapted<binary>>/reverse.Binary
java2/RoundTripTest/testset.Adapted.list<adapted<binary>>/reverse.Compact
java2/RoundTripTest/testset.Adapted.list<adapted<double>>/all.Binary
java2/RoundTripTest/testset.Adapted.list<adapted<double>>/all.Compact
java2/RoundTripTest/testset.Adapted.list<adapted<double>>/duplicate.Binary
java2/RoundTripTest/testset.Adapted.list<adapted<double>>/duplicate.Compact
java2/RoundTripTest/testset.Adapted.list<adapted<double>>/reverse.Binary
java2/RoundTripTest/testset.Adapted.list<adapted<double>>/reverse.Compact
java2/RoundTripTest/testset.Adapted.list<adapted<float>>/all.Binary
java2/RoundTripTest/testset.Adapted.list<adapted<float>>/all.Compact
java2/RoundTripTest/testset.Adapted.list<adapted<float>>/duplicate.Binary
java2/RoundTripTest/testset.Adapted.list<adapted<float>>/duplicate.Compact
java2/RoundTripTest/testset.Adapted.list<adapted<float>>/reverse.Binary
java2/RoundTripTest/testset.Adapted.list<adapted<float>>/reverse.Compact
java2/RoundTripTest/testset.Adapted.list<binary>/all.Binary
java2/RoundTripTest/testset.Adapted.list<binary>/all.Compact
java2/RoundTripTest/testset.Adapted.list<binary>/duplicate.Binary
java2/RoundTripTest/testset.Adapted.list<binary>/duplicate.Compact
java2/RoundTripTest/testset.Adapted.list<binary>/reverse.Binary
java2/RoundTripTest/testset.Adapted.list<binary>/reverse.Compact
java2/RoundTripTest/testset.Adapted.list<double>/all.Binary
java2/RoundTripTest/testset.Adapted.list<double>/all.Compact
java2/RoundTripTest/testset.Adapted.list<double>/duplicate.Binary
java2/RoundTripTest/testset.Adapted.list<double>/duplicate.Compact
java2/RoundTripTest/testset.Adapted.list<double>/reverse.Binary
java2/RoundTripTest/testset.Adapted.list<double>/reverse.Compact
java2/RoundTripTest/testset.Adapted.list<float>/all.Binary
java2/RoundTripTest/testset.Adapted.list<float>/all.Compact
java2/RoundTripTest/testset.Adapted.list<float>/duplicate.Binary
java2/RoundTripTest/testset.Adapted.list<float>/duplicate.Compact
java2/RoundTripTest/testset.Adapted.list<float>/reverse.Binary
java2/RoundTripTest/testset.Adapted.list<float>/reverse.Compact
java2/RoundTripTest/testset.FieldAdapted.list<adapted<binary>>/all.Binary
java2/RoundTripTest/testset.FieldAdapted.list<adapted<binary>>/all.Compact
java2/RoundTripTest/testset.FieldAdapted.list<adapted<binary>>/duplicate.Binary
java2/RoundTripTest/testset.FieldAdapted.list<adapted<binary>>/duplicate.Compact
java2/RoundTripTest/testset.FieldAdapted.list<adapted<binary>>/reverse.Binary
java2/RoundTripTest/testset.FieldAdapted.list<adapted<binary>>/reverse.Compact
java2/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/all.Binary
java2/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/all.Compact
java2/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/duplicate.Binary
java2/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/duplicate.Compact
java2/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/reverse.Binary
java2/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/reverse.Compact
java2/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/all.Binary
java2/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/all.Compact
java2/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/duplicate.Binary
java2/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/duplicate.Compact
java2/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/reverse.Binary
java2/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/reverse.Compact
java2/RoundTripTest/testset.FieldAdapted.list<double>/all.Binary
java2/RoundTripTest/testset.FieldAdapted.list<double>/all.Compact
java2/RoundTripTest/testset.FieldAdapted.list<double>/duplicate.Binary
java2/RoundTripTest/testset.FieldAdapted.list<double>/duplicate.Compact
java2/RoundTripTest/testset.FieldAdapted.list<double>/reverse.Binary
java2/RoundTripTest/testset.FieldAdapted.list<double>/reverse.Compact
java2/RoundTripTest/testset.FieldAdapted.list<float>/all.Binary
java2/RoundTripTest/testset.FieldAdapted.list<float>/all.Compact
java2/RoundTripTest/testset.FieldAdapted.list<float>/duplicate.Binary
java2/RoundTripTest/testset.FieldAdapted.list<float>/duplicate.Compact
java2/RoundTripTest/testset.FieldAdapted.list<float>/reverse.Binary
java2/RoundTripTest/testset.FieldAdapted.list<float>/reverse.Compact
java2/RoundTripTest/testset.Optional.list<double>/all.Binary
java2/RoundTripTest/testset.Optional.list<double>/all.Compact
java2/RoundTripTest/testset.Optional.list<double>/duplicate.Binary
java2/RoundTripTest/testset.Optional.list<double>/duplicate.Compact
java2/RoundTripTest/testset.Optional.list<double>/reverse.Binary
java2/RoundTripTest/testset.Optional.list<double>/reverse.Compact
java2/RoundTripTest/testset.Optional.list<float>/all.Binary
java2/RoundTripTest/testset.Optional.list<float>/all.Compact
java2/RoundTripTest/testset.Optional.list<float>/duplicate.Binary
java2/RoundTripTest/testset.Optional.list<float>/duplicate.Compact
java2/RoundTripTest/testset.Optional.list<float>/reverse.Binary
java2/RoundTripTest/testset.Optional.list<float>/reverse.Compact
java2/RoundTripTest/testset.Terse.list<double>/all.Binary
java2/RoundTripTest/testset.Terse.list<double>/all.Compact
java2/RoundTripTest/testset.Terse.list<double>/duplicate.Binary
java2/RoundTripTest/testset.Terse.list<double>/duplicate.Compact
java2/RoundTripTest/testset.Terse.list<double>/reverse.Binary
java2/RoundTripTest/testset.Terse.list<double>/reverse.Compact
java2/RoundTripTest/testset.Terse.list<float>/all.Binary
java2/RoundTripTest/testset.Terse.list<float>/all.Compact
java2/RoundTripTest/testset.Terse.list<float>/duplicate.Binary
java2/RoundTripTest/testset.Terse.list<float>/duplicate.Compact
java2/RoundTripTest/testset.Terse.list<float>/reverse.Binary
java2/RoundTripTest/testset.Terse.list<float>/reverse.Compact
java2/RoundTripTest/testset.list<adapted<binary>>/all.Binary
java2/RoundTripTest/testset.list<adapted<binary>>/all.Compact
java2/RoundTripTest/testset.list<adapted<binary>>/duplicate.Binary
java2/RoundTripTest/testset.list<adapted<binary>>/duplicate.Compact
java2/RoundTripTest/testset.list<adapted<binary>>/reverse.Binary
java2/RoundTripTest/testset.list<adapted<binary>>/reverse.Compact
java2/RoundTripTest/testset.list<adapted<double>>/all.Binary
java2/RoundTripTest/testset.list<adapted<double>>/all.Compact
java2/RoundTripTest/testset.list<adapted<double>>/duplicate.Binary
java2/RoundTripTest/testset.list<adapted<double>>/duplicate.Compact
java2/RoundTripTest/testset.list<adapted<double>>/reverse.Binary
java2/RoundTripTest/testset.list<adapted<double>>/reverse.Compact
java2/RoundTripTest/testset.list<adapted<float>>/all.Binary
java2/RoundTripTest/testset.list<adapted<float>>/all.Compact
java2/RoundTripTest/testset.list<adapted<float>>/duplicate.Binary
java2/RoundTripTest/testset.list<adapted<float>>/duplicate.Compact
java2/RoundTripTest/testset.list<adapted<float>>/reverse.Binary
java2/RoundTripTest/testset.list<adapted<float>>/reverse.Compact
java2/RoundTripTest/testset.list<double>/all.Binary
java2/RoundTripTest/testset.list<double>/all.Compact
java2/RoundTripTest/testset.list<double>/duplicate.Binary
java2/RoundTripTest/testset.list<double>/duplicate.Compact
java2/RoundTripTest/testset.list<double>/reverse.Binary
java2/RoundTripTest/testset.list<double>/reverse.Compact
java2/RoundTripTest/testset.list<float>/all.Binary
java2/RoundTripTest/testset.list<float>/all.Compact
java2/RoundTripTest/testset.list<float>/duplicate.Binary
java2/RoundTripTest/testset.list<float>/duplicate.Compact
java2/RoundTripTest/testset.list<float>/reverse.Binary
java2/RoundTripTest/testset.list<float>/reverse.Compact
java2/RoundTripTest/testset.union.list<adapted<binary>>/all.Binary
java2/RoundTripTest/testset.union.list<adapted<binary>>/all.Compact
java2/RoundTripTest/testset.union.list<adapted<binary>>/duplicate.Binary
java2/RoundTripTest/testset.union.list<adapted<binary>>/duplicate.Compact
java2/RoundTripTest/testset.union.list<adapted<binary>>/reverse.Binary
java2/RoundTripTest/testset.union.list<adapted<binary>>/reverse.Compact
java2/RoundTripTest/testset.union.list<adapted<double>>/all.Binary
java2/RoundTripTest/testset.union.list<adapted<double>>/all.Compact
java2/RoundTripTest/testset.union.list<adapted<double>>/duplicate.Binary
java2/RoundTripTest/testset.union.list<adapted<double>>/duplicate.Compact
java2/RoundTripTest/testset.union.list<adapted<double>>/reverse.Binary
java2/RoundTripTest/testset.union.list<adapted<double>>/reverse.Compact
java2/RoundTripTest/testset.union.list<adapted<float>>/all.Binary
java2/RoundTripTest/testset.union.list<adapted<float>>/all.Compact
java2/RoundTripTest/testset.union.list<adapted<float>>/duplicate.Binary
java2/RoundTripTest/testset.union.list<adapted<float>>/duplicate.Compact
java2/RoundTripTest/testset.union.list<adapted<float>>/reverse.Binary
java2/RoundTripTest/testset.union.list<adapted<float>>/reverse.Compact
java2/RoundTripTest/testset.union.list<double>/all.Binary
java2/RoundTripTest/testset.union.list<double>/all.Compact
java2/RoundTripTest/testset.union.list<double>/duplicate.Binary
java2/RoundTripTest/testset.union.list<double>/duplicate.Compact
java2/RoundTripTest/testset.union.list<double>/reverse.Binary
java2/RoundTripTest/testset.union.list<double>/reverse.Compact
java2/RoundTripTest/testset.union.list<float>/all.Binary
java2/RoundTripTest/testset.union.list<float>/all.Compact
java2/RoundTripTest/testset.union.list<float>/duplicate.Binary
java2/RoundTripTest/testset.union.list<float>/duplicate.Compact
java2/RoundTripTest/testset.union.list<float>/reverse.Binary
java2/RoundTripTest/testset.union.list<float>/reverse.Compact
#
#
# Java: These compatibility tests are failing in Java.
# Client has an empty struct (v0) for StringStruct and BinaryStruct, server
# has one additional field (v1). Client is expecting an empty value for the
# additional field, as the field is defined as non optional (unqualified).
# Server is sending a null, missing the field.
#
java2/CompatibilityTest/testset.binary/AddField.Binary
java2/CompatibilityTest/testset.binary/AddField.Compact
java2/CompatibilityTest/testset.string/AddField.Compact
java2/CompatibilityTest/testset.string/AddField.Binary
#
#
# TODO(dokwon): Move this to rpc specific nonconforming.txt
java2/ThriftRPCClientTest/InteractionFactoryFunctionTest/Success.InteractionFactoryFunctionTest
java2/ThriftRPCClientTest/InteractionFactoryFunctionPersistsStateTest/Success.InteractionFactoryFunctionPersistsStateTest
java2/ThriftRPCClientTest/InteractionConstructorPersistsStateTest/Success.InteractionConstructorPersistsStateTest
java2/ThriftRPCClientTest/InteractionConstructorTerminationTest/Success.InteractionConstructorTerminationTest
java2/ThriftRPCClientTest/InteractionFactoryFunctionTerminationTest/Success.InteractionFactoryFunctionTerminationTest
java2/ThriftRPCClientTest/StreamChunkTimeout/Success.StreamChunkTimeoutTest
java2/ThriftRPCClientTest/StreamCreditTimeout/Success.StreamCreditTimeoutTest
java2/ThriftRPCClientTest/StreamInitialTimeout/Success.StreamInitialTimeoutTest
java2/ThriftRPCClientTest/SinkChunkTimeout/Success.SinkChunkTimeoutTest
#
java2/ThriftRPCServerTest/InteractionConstructorTest/Success.InteractionConstructorTest
java2/ThriftRPCServerTest/SinkBasic/Success.SinkBasicTest
java2/ThriftRPCServerTest/InteractionFactoryFunctionPersistsStateTest/Success.InteractionFactoryFunctionPersistsStateTest
java2/ThriftRPCServerTest/InteractionConstructorPersistsStateTest/Success.InteractionConstructorPersistsStateTest
java2/ThriftRPCServerTest/SinkSubsequestCredits/Success.SinkSubsequentCreditsTest
java2/ThriftRPCServerTest/SinkChunkTimeout/Success.SinkChunkTimeoutTest
java2/ThriftRPCServerTest/InteractionFactoryFunctionTerminationTest/Success.InteractionFactoryFunctionTerminationTest
java2/ThriftRPCServerTest/SinkFragmentation/Success.SinkFragmentationTest
java2/ThriftRPCServerTest/InteractionConstructorTerminationTest/Success.InteractionConstructorTerminationTest
java2/ThriftRPCServerTest/InteractionFactoryFunctionTest/Success.InteractionFactoryFunctionTest
#
#
# All type change tests are failing in Java
#
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/bad_utf8.Binary
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/bad_utf8.Compact
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/empty.Binary
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/empty.Compact
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/leading_space.Binary
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/leading_space.Compact
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/lower.Binary
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/lower.Compact
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/spaces.Binary
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/spaces.Compact
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/trailing_space.Binary
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/trailing_space.Compact
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/upper.Binary
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/upper.Compact
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/utf8.Binary
java2/CompatibilityTest/testset.binary/ChangeContainerToSingular/utf8.Compact
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/bad_utf8.Binary
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/bad_utf8.Compact
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/empty.Binary
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/empty.Compact
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/leading_space.Binary
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/leading_space.Compact
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/lower.Binary
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/lower.Compact
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/spaces.Binary
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/spaces.Compact
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/trailing_space.Binary
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/trailing_space.Compact
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/upper.Binary
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/upper.Compact
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/utf8.Binary
java2/CompatibilityTest/testset.binary/ChangeSingularToContainer/utf8.Compact
java2/CompatibilityTest/testset.bool/ChangeSingularToContainer/false.Binary
java2/CompatibilityTest/testset.bool/ChangeSingularToContainer/false.Compact
java2/CompatibilityTest/testset.bool/ChangeSingularToContainer/true.Binary
java2/CompatibilityTest/testset.bool/ChangeSingularToContainer/true.Compact
java2/CompatibilityTest/testset.byte/ChangeSingularToContainer/max.Binary
java2/CompatibilityTest/testset.byte/ChangeSingularToContainer/max.Compact
java2/CompatibilityTest/testset.byte/ChangeSingularToContainer/min.Binary
java2/CompatibilityTest/testset.byte/ChangeSingularToContainer/min.Compact
java2/CompatibilityTest/testset.byte/ChangeSingularToContainer/neg_one.Binary
java2/CompatibilityTest/testset.byte/ChangeSingularToContainer/neg_one.Compact
java2/CompatibilityTest/testset.byte/ChangeSingularToContainer/one.Binary
java2/CompatibilityTest/testset.byte/ChangeSingularToContainer/one.Compact
java2/CompatibilityTest/testset.byte/ChangeSingularToContainer/zero.Binary
java2/CompatibilityTest/testset.byte/ChangeSingularToContainer/zero.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/denorm_min.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/denorm_min.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/epsilon.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/epsilon.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/fmt_case_1.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/fmt_case_1.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/fmt_case_2.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/fmt_case_2.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/inf.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/inf.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/lowest.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/lowest.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/max.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/max.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/max_digits.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/max_digits.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/max_int.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/max_int.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/max_minus_ulp.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/max_minus_ulp.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/min.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/min.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/min_int.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/min_int.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/min_plus_ulp.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/min_plus_ulp.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/NaN.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/NaN.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_denorm_min.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_denorm_min.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_epsilon.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_epsilon.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_inf.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_inf.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_max_digits.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_max_digits.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_one.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_one.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_zero.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_zero.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/one.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/one.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/one_tenth.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/one_tenth.Compact
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/zero.Binary
java2/CompatibilityTest/testset.double/ChangeSingularToContainer/zero.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/denorm_min.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/denorm_min.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/epsilon.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/epsilon.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/inf.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/inf.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/lowest.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/lowest.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/max.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/max.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/max_digits.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/max_digits.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/max_int.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/max_int.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/max_minus_ulp.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/max_minus_ulp.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/min.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/min.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/min_int.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/min_int.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/min_plus_ulp.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/min_plus_ulp.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/NaN.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/NaN.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_denorm_min.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_denorm_min.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_epsilon.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_epsilon.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_inf.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_inf.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_max_digits.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_max_digits.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_one.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_one.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_zero.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_zero.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/one.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/one.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/one_tenth.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/one_tenth.Compact
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/zero.Binary
java2/CompatibilityTest/testset.float/ChangeSingularToContainer/zero.Compact
java2/CompatibilityTest/testset.i16/ChangeSingularToContainer/max.Binary
java2/CompatibilityTest/testset.i16/ChangeSingularToContainer/max.Compact
java2/CompatibilityTest/testset.i16/ChangeSingularToContainer/min.Binary
java2/CompatibilityTest/testset.i16/ChangeSingularToContainer/min.Compact
java2/CompatibilityTest/testset.i16/ChangeSingularToContainer/neg_one.Binary
java2/CompatibilityTest/testset.i16/ChangeSingularToContainer/neg_one.Compact
java2/CompatibilityTest/testset.i16/ChangeSingularToContainer/one.Binary
java2/CompatibilityTest/testset.i16/ChangeSingularToContainer/one.Compact
java2/CompatibilityTest/testset.i16/ChangeSingularToContainer/zero.Binary
java2/CompatibilityTest/testset.i16/ChangeSingularToContainer/zero.Compact
java2/CompatibilityTest/testset.i32/ChangeSingularToContainer/max.Binary
java2/CompatibilityTest/testset.i32/ChangeSingularToContainer/max.Compact
java2/CompatibilityTest/testset.i32/ChangeSingularToContainer/min.Binary
java2/CompatibilityTest/testset.i32/ChangeSingularToContainer/min.Compact
java2/CompatibilityTest/testset.i32/ChangeSingularToContainer/neg_one.Binary
java2/CompatibilityTest/testset.i32/ChangeSingularToContainer/neg_one.Compact
java2/CompatibilityTest/testset.i32/ChangeSingularToContainer/one.Binary
java2/CompatibilityTest/testset.i32/ChangeSingularToContainer/one.Compact
java2/CompatibilityTest/testset.i32/ChangeSingularToContainer/zero.Binary
java2/CompatibilityTest/testset.i32/ChangeSingularToContainer/zero.Compact
java2/CompatibilityTest/testset.i64/ChangeSingularToContainer/max.Binary
java2/CompatibilityTest/testset.i64/ChangeSingularToContainer/max.Compact
java2/CompatibilityTest/testset.i64/ChangeSingularToContainer/min.Binary
java2/CompatibilityTest/testset.i64/ChangeSingularToContainer/min.Compact
java2/CompatibilityTest/testset.i64/ChangeSingularToContainer/neg_one.Binary
java2/CompatibilityTest/testset.i64/ChangeSingularToContainer/neg_one.Compact
java2/CompatibilityTest/testset.i64/ChangeSingularToContainer/one.Binary
java2/CompatibilityTest/testset.i64/ChangeSingularToContainer/one.Compact
java2/CompatibilityTest/testset.i64/ChangeSingularToContainer/zero.Binary
java2/CompatibilityTest/testset.i64/ChangeSingularToContainer/zero.Compact
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/empty.Binary
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/empty.Compact
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/leading_space.Binary
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/leading_space.Compact
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/lower.Binary
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/lower.Compact
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/spaces.Binary
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/spaces.Compact
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/trailing_space.Binary
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/trailing_space.Compact
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/upper.Binary
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/upper.Compact
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/utf8.Binary
java2/CompatibilityTest/testset.string/ChangeContainerToSingular/utf8.Compact
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/empty.Binary
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/empty.Compact
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/leading_space.Binary
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/leading_space.Compact
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/lower.Binary
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/lower.Compact
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/spaces.Binary
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/spaces.Compact
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/trailing_space.Binary
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/trailing_space.Compact
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/upper.Binary
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/upper.Compact
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/utf8.Binary
java2/CompatibilityTest/testset.string/ChangeSingularToContainer/utf8.Compact
#
#
# Hack
#
hack/RoundTripTest/float/NaN.Binary
hack/RoundTripTest/testset.double/NaN.Binary
hack/RoundTripTest/testset.double/NaN.Compact
hack/RoundTripTest/double/NaN.Binary
hack/RoundTripTest/testset.float/NaN.Compact
hack/RoundTripTest/float/NaN.Compact
hack/RoundTripTest/testset.float/NaN.Binary
hack/RoundTripTest/double/NaN.Compact
hack/RoundTripTest/testset.Optional.float/NaN.Binary
hack/RoundTripTest/testset.Optional.float/NaN.Compact
hack/RoundTripTest/testset.Optional.double/NaN.Binary
hack/RoundTripTest/testset.Optional.double/NaN.Compact
hack/RoundTripTest/testset.Terse.float/NaN.Binary
hack/RoundTripTest/testset.Terse.float/NaN.Compact
hack/RoundTripTest/testset.Terse.double/NaN.Binary
hack/RoundTripTest/testset.Terse.double/NaN.Compact
hack/RoundTripTest/testset.Terse.double/neg_zero.Binary
hack/RoundTripTest/testset.Terse.double/neg_zero.Compact
hack/RoundTripTest/testset.Terse.float/neg_zero.Binary
hack/RoundTripTest/testset.Terse.float/neg_zero.Compact
hack/RoundTripTest/testset.Adapted.float/NaN.Binary
hack/RoundTripTest/testset.Adapted.float/NaN.Compact
hack/RoundTripTest/testset.Adapted.double/NaN.Binary
hack/RoundTripTest/testset.Adapted.double/NaN.Compact
hack/RoundTripTest/testset.FieldAdapted.float/NaN.Binary
hack/RoundTripTest/testset.FieldAdapted.float/NaN.Compact
hack/RoundTripTest/testset.FieldAdapted.double/NaN.Binary
hack/RoundTripTest/testset.FieldAdapted.double/NaN.Compact
hack/RoundTripTest/list<double>/all.Binary
hack/RoundTripTest/list<double>/all.Compact
hack/RoundTripTest/list<double>/duplicate.Binary
hack/RoundTripTest/list<double>/duplicate.Compact
hack/RoundTripTest/list<double>/reverse.Binary
hack/RoundTripTest/list<double>/reverse.Compact
hack/RoundTripTest/list<float>/all.Binary
hack/RoundTripTest/list<float>/all.Compact
hack/RoundTripTest/list<float>/duplicate.Binary
hack/RoundTripTest/list<float>/duplicate.Compact
hack/RoundTripTest/list<float>/reverse.Binary
hack/RoundTripTest/list<float>/reverse.Compact
hack/RoundTripTest/map<i64,binary>/empty.Binary
hack/RoundTripTest/map<i64,binary>/empty.Compact
hack/RoundTripTest/map<i64,bool>/empty.Binary
hack/RoundTripTest/map<i64,bool>/empty.Compact
hack/RoundTripTest/map<i64,byte>/empty.Binary
hack/RoundTripTest/map<i64,byte>/empty.Compact
hack/RoundTripTest/map<i64,double>/empty.Binary
hack/RoundTripTest/map<i64,double>/empty.Compact
hack/RoundTripTest/map<i64,float>/empty.Binary
hack/RoundTripTest/map<i64,float>/empty.Compact
hack/RoundTripTest/map<i64,i16>/empty.Binary
hack/RoundTripTest/map<i64,i16>/empty.Compact
hack/RoundTripTest/map<i64,i32>/empty.Binary
hack/RoundTripTest/map<i64,i32>/empty.Compact
hack/RoundTripTest/map<i64,i64>/empty.Binary
hack/RoundTripTest/map<i64,i64>/empty.Compact
hack/RoundTripTest/map<i64,string>/empty.Binary
hack/RoundTripTest/map<i64,string>/empty.Compact
hack/RoundTripTest/map<string,binary>/empty.Binary
hack/RoundTripTest/map<string,binary>/empty.Compact
hack/RoundTripTest/map<string,bool>/empty.Binary
hack/RoundTripTest/map<string,bool>/empty.Compact
hack/RoundTripTest/map<string,byte>/empty.Binary
hack/RoundTripTest/map<string,byte>/empty.Compact
hack/RoundTripTest/map<string,double>/empty.Binary
hack/RoundTripTest/map<string,double>/empty.Compact
hack/RoundTripTest/map<string,float>/empty.Binary
hack/RoundTripTest/map<string,float>/empty.Compact
hack/RoundTripTest/map<string,i16>/empty.Binary
hack/RoundTripTest/map<string,i16>/empty.Compact
hack/RoundTripTest/map<string,i32>/empty.Binary
hack/RoundTripTest/map<string,i32>/empty.Compact
hack/RoundTripTest/map<string,i64>/empty.Binary
hack/RoundTripTest/map<string,i64>/empty.Compact
hack/RoundTripTest/map<string,string>/empty.Binary
hack/RoundTripTest/map<string,string>/empty.Compact
hack/RoundTripTest/set<i64>/all.Binary
hack/RoundTripTest/set<i64>/all.Compact
hack/RoundTripTest/set<i64>/empty.Binary
hack/RoundTripTest/set<i64>/empty.Compact
hack/RoundTripTest/set<i64>/set(max).Binary
hack/RoundTripTest/set<i64>/set(max).Compact
hack/RoundTripTest/set<i64>/set(min).Binary
hack/RoundTripTest/set<i64>/set(min).Compact
hack/RoundTripTest/set<i64>/set(neg_one).Binary
hack/RoundTripTest/set<i64>/set(neg_one).Compact
hack/RoundTripTest/set<i64>/set(one).Binary
hack/RoundTripTest/set<i64>/set(one).Compact
hack/RoundTripTest/set<i64>/set(zero).Binary
hack/RoundTripTest/set<i64>/set(zero).Compact
hack/RoundTripTest/set<string>/all.Binary
hack/RoundTripTest/set<string>/all.Compact
hack/RoundTripTest/set<string>/empty.Binary
hack/RoundTripTest/set<string>/empty.Compact
hack/RoundTripTest/set<string>/set(empty).Binary
hack/RoundTripTest/set<string>/set(empty).Compact
hack/RoundTripTest/set<string>/set(leading_space).Binary
hack/RoundTripTest/set<string>/set(leading_space).Compact
hack/RoundTripTest/set<string>/set(lower).Binary
hack/RoundTripTest/set<string>/set(lower).Compact
hack/RoundTripTest/set<string>/set(spaces).Binary
hack/RoundTripTest/set<string>/set(spaces).Compact
hack/RoundTripTest/set<string>/set(trailing_space).Binary
hack/RoundTripTest/set<string>/set(trailing_space).Compact
hack/RoundTripTest/set<string>/set(upper).Binary
hack/RoundTripTest/set<string>/set(upper).Compact
hack/RoundTripTest/set<string>/set(utf8).Binary
hack/RoundTripTest/set<string>/set(utf8).Compact
hack/RoundTripTest/testset.Adapted.adapted<double>/NaN.Binary
hack/RoundTripTest/testset.Adapted.adapted<double>/NaN.Compact
hack/RoundTripTest/testset.Adapted.adapted<float>/NaN.Binary
hack/RoundTripTest/testset.Adapted.adapted<float>/NaN.Compact
hack/RoundTripTest/testset.Adapted.list<adapted<double>>/all.Binary
hack/RoundTripTest/testset.Adapted.list<adapted<double>>/all.Compact
hack/RoundTripTest/testset.Adapted.list<adapted<double>>/duplicate.Binary
hack/RoundTripTest/testset.Adapted.list<adapted<double>>/duplicate.Compact
hack/RoundTripTest/testset.Adapted.list<adapted<double>>/reverse.Binary
hack/RoundTripTest/testset.Adapted.list<adapted<double>>/reverse.Compact
hack/RoundTripTest/testset.Adapted.list<adapted<float>>/all.Binary
hack/RoundTripTest/testset.Adapted.list<adapted<float>>/all.Compact
hack/RoundTripTest/testset.Adapted.list<adapted<float>>/duplicate.Binary
hack/RoundTripTest/testset.Adapted.list<adapted<float>>/duplicate.Compact
hack/RoundTripTest/testset.Adapted.list<adapted<float>>/reverse.Binary
hack/RoundTripTest/testset.Adapted.list<adapted<float>>/reverse.Compact
hack/RoundTripTest/testset.Adapted.list<double>/all.Binary
hack/RoundTripTest/testset.Adapted.list<double>/all.Compact
hack/RoundTripTest/testset.Adapted.list<double>/duplicate.Binary
hack/RoundTripTest/testset.Adapted.list<double>/duplicate.Compact
hack/RoundTripTest/testset.Adapted.list<double>/reverse.Binary
hack/RoundTripTest/testset.Adapted.list<double>/reverse.Compact
hack/RoundTripTest/testset.Adapted.list<float>/all.Binary
hack/RoundTripTest/testset.Adapted.list<float>/all.Compact
hack/RoundTripTest/testset.Adapted.list<float>/duplicate.Binary
hack/RoundTripTest/testset.Adapted.list<float>/duplicate.Compact
hack/RoundTripTest/testset.Adapted.list<float>/reverse.Binary
hack/RoundTripTest/testset.Adapted.list<float>/reverse.Compact
hack/RoundTripTest/testset.FieldAdapted.adapted<double>/NaN.Binary
hack/RoundTripTest/testset.FieldAdapted.adapted<double>/NaN.Compact
hack/RoundTripTest/testset.FieldAdapted.adapted<float>/NaN.Binary
hack/RoundTripTest/testset.FieldAdapted.adapted<float>/NaN.Compact
hack/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/all.Binary
hack/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/all.Compact
hack/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/duplicate.Binary
hack/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/duplicate.Compact
hack/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/reverse.Binary
hack/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/reverse.Compact
hack/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/all.Binary
hack/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/all.Compact
hack/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/duplicate.Binary
hack/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/duplicate.Compact
hack/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/reverse.Binary
hack/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/reverse.Compact
hack/RoundTripTest/testset.FieldAdapted.list<double>/all.Binary
hack/RoundTripTest/testset.FieldAdapted.list<double>/all.Compact
hack/RoundTripTest/testset.FieldAdapted.list<double>/duplicate.Binary
hack/RoundTripTest/testset.FieldAdapted.list<double>/duplicate.Compact
hack/RoundTripTest/testset.FieldAdapted.list<double>/reverse.Binary
hack/RoundTripTest/testset.FieldAdapted.list<double>/reverse.Compact
hack/RoundTripTest/testset.FieldAdapted.list<float>/all.Binary
hack/RoundTripTest/testset.FieldAdapted.list<float>/all.Compact
hack/RoundTripTest/testset.FieldAdapted.list<float>/duplicate.Binary
hack/RoundTripTest/testset.FieldAdapted.list<float>/duplicate.Compact
hack/RoundTripTest/testset.FieldAdapted.list<float>/reverse.Binary
hack/RoundTripTest/testset.FieldAdapted.list<float>/reverse.Compact
hack/RoundTripTest/testset.Optional.list<double>/all.Binary
hack/RoundTripTest/testset.Optional.list<double>/all.Compact
hack/RoundTripTest/testset.Optional.list<double>/duplicate.Binary
hack/RoundTripTest/testset.Optional.list<double>/duplicate.Compact
hack/RoundTripTest/testset.Optional.list<double>/reverse.Binary
hack/RoundTripTest/testset.Optional.list<double>/reverse.Compact
hack/RoundTripTest/testset.Optional.list<float>/all.Binary
hack/RoundTripTest/testset.Optional.list<float>/all.Compact
hack/RoundTripTest/testset.Optional.list<float>/duplicate.Binary
hack/RoundTripTest/testset.Optional.list<float>/duplicate.Compact
hack/RoundTripTest/testset.Optional.list<float>/reverse.Binary
hack/RoundTripTest/testset.Optional.list<float>/reverse.Compact
hack/RoundTripTest/testset.Terse.list<double>/all.Binary
hack/RoundTripTest/testset.Terse.list<double>/all.Compact
hack/RoundTripTest/testset.Terse.list<double>/duplicate.Binary
hack/RoundTripTest/testset.Terse.list<double>/duplicate.Compact
hack/RoundTripTest/testset.Terse.list<double>/reverse.Binary
hack/RoundTripTest/testset.Terse.list<double>/reverse.Compact
hack/RoundTripTest/testset.Terse.list<float>/all.Binary
hack/RoundTripTest/testset.Terse.list<float>/all.Compact
hack/RoundTripTest/testset.Terse.list<float>/duplicate.Binary
hack/RoundTripTest/testset.Terse.list<float>/duplicate.Compact
hack/RoundTripTest/testset.Terse.list<float>/reverse.Binary
hack/RoundTripTest/testset.Terse.list<float>/reverse.Compact
hack/RoundTripTest/testset.adapted<double>/NaN.Binary
hack/RoundTripTest/testset.adapted<double>/NaN.Compact
hack/RoundTripTest/testset.adapted<float>/NaN.Binary
hack/RoundTripTest/testset.adapted<float>/NaN.Compact
hack/RoundTripTest/testset.list<adapted<double>>/all.Binary
hack/RoundTripTest/testset.list<adapted<double>>/all.Compact
hack/RoundTripTest/testset.list<adapted<double>>/duplicate.Binary
hack/RoundTripTest/testset.list<adapted<double>>/duplicate.Compact
hack/RoundTripTest/testset.list<adapted<double>>/reverse.Binary
hack/RoundTripTest/testset.list<adapted<double>>/reverse.Compact
hack/RoundTripTest/testset.list<adapted<float>>/all.Binary
hack/RoundTripTest/testset.list<adapted<float>>/all.Compact
hack/RoundTripTest/testset.list<adapted<float>>/duplicate.Binary
hack/RoundTripTest/testset.list<adapted<float>>/duplicate.Compact
hack/RoundTripTest/testset.list<adapted<float>>/reverse.Binary
hack/RoundTripTest/testset.list<adapted<float>>/reverse.Compact
hack/RoundTripTest/testset.list<double>/all.Binary
hack/RoundTripTest/testset.list<double>/all.Compact
hack/RoundTripTest/testset.list<double>/duplicate.Binary
hack/RoundTripTest/testset.list<double>/duplicate.Compact
hack/RoundTripTest/testset.list<double>/reverse.Binary
hack/RoundTripTest/testset.list<double>/reverse.Compact
hack/RoundTripTest/testset.list<float>/all.Binary
hack/RoundTripTest/testset.list<float>/all.Compact
hack/RoundTripTest/testset.list<float>/duplicate.Binary
hack/RoundTripTest/testset.list<float>/duplicate.Compact
hack/RoundTripTest/testset.list<float>/reverse.Binary
hack/RoundTripTest/testset.list<float>/reverse.Compact
hack/RoundTripTest/testset.union.adapted<double>/NaN.Binary
hack/RoundTripTest/testset.union.adapted<double>/NaN.Compact
hack/RoundTripTest/testset.union.adapted<float>/NaN.Binary
hack/RoundTripTest/testset.union.adapted<float>/NaN.Compact
hack/RoundTripTest/testset.union.double/NaN.Binary
hack/RoundTripTest/testset.union.double/NaN.Compact
hack/RoundTripTest/testset.union.float/NaN.Binary
hack/RoundTripTest/testset.union.float/NaN.Compact
hack/RoundTripTest/testset.union.list<adapted<double>>/all.Binary
hack/RoundTripTest/testset.union.list<adapted<double>>/all.Compact
hack/RoundTripTest/testset.union.list<adapted<double>>/duplicate.Binary
hack/RoundTripTest/testset.union.list<adapted<double>>/duplicate.Compact
hack/RoundTripTest/testset.union.list<adapted<double>>/reverse.Binary
hack/RoundTripTest/testset.union.list<adapted<double>>/reverse.Compact
hack/RoundTripTest/testset.union.list<adapted<float>>/all.Binary
hack/RoundTripTest/testset.union.list<adapted<float>>/all.Compact
hack/RoundTripTest/testset.union.list<adapted<float>>/duplicate.Binary
hack/RoundTripTest/testset.union.list<adapted<float>>/duplicate.Compact
hack/RoundTripTest/testset.union.list<adapted<float>>/reverse.Binary
hack/RoundTripTest/testset.union.list<adapted<float>>/reverse.Compact
hack/RoundTripTest/testset.union.list<double>/all.Binary
hack/RoundTripTest/testset.union.list<double>/all.Compact
hack/RoundTripTest/testset.union.list<double>/duplicate.Binary
hack/RoundTripTest/testset.union.list<double>/duplicate.Compact
hack/RoundTripTest/testset.union.list<double>/reverse.Binary
hack/RoundTripTest/testset.union.list<double>/reverse.Compact
hack/RoundTripTest/testset.union.list<float>/all.Binary
hack/RoundTripTest/testset.union.list<float>/all.Compact
hack/RoundTripTest/testset.union.list<float>/duplicate.Binary
hack/RoundTripTest/testset.union.list<float>/duplicate.Compact
hack/RoundTripTest/testset.union.list<float>/reverse.Binary
hack/RoundTripTest/testset.union.list<float>/reverse.Compact
hack/CompatibilityTest/testset.binary.string/ChangeFieldType/bad_utf8.Binary
hack/CompatibilityTest/testset.binary.string/ChangeFieldType/bad_utf8.Compact
hack/CompatibilityTest/testset.binary/AddOptionalFieldWithCustomDefault.Binary
hack/CompatibilityTest/testset.binary/AddOptionalFieldWithCustomDefault.Compact
hack/CompatibilityTest/testset.binary/ChangeOptionalFieldCustomDefault.Binary
hack/CompatibilityTest/testset.binary/ChangeOptionalFieldCustomDefault.Compact
hack/CompatibilityTest/testset.bool/AddOptionalFieldWithCustomDefault.Binary
hack/CompatibilityTest/testset.bool/AddOptionalFieldWithCustomDefault.Compact
hack/CompatibilityTest/testset.bool/ChangeOptionalFieldCustomDefault.Binary
hack/CompatibilityTest/testset.bool/ChangeOptionalFieldCustomDefault.Compact
hack/CompatibilityTest/testset.byte/AddOptionalFieldWithCustomDefault.Binary
hack/CompatibilityTest/testset.byte/AddOptionalFieldWithCustomDefault.Compact
hack/CompatibilityTest/testset.byte/ChangeOptionalFieldCustomDefault.Binary
hack/CompatibilityTest/testset.byte/ChangeOptionalFieldCustomDefault.Compact
hack/CompatibilityTest/testset.double/AddOptionalFieldWithCustomDefault.Binary
hack/CompatibilityTest/testset.double/AddOptionalFieldWithCustomDefault.Compact
hack/CompatibilityTest/testset.double/ChangeOptionalFieldCustomDefault.Binary
hack/CompatibilityTest/testset.double/ChangeOptionalFieldCustomDefault.Compact
hack/CompatibilityTest/testset.double/ExceptionToStruct/NaN.Binary
hack/CompatibilityTest/testset.double/ExceptionToStruct/NaN.Compact
hack/CompatibilityTest/testset.double/ExceptionToUnion/NaN.Binary
hack/CompatibilityTest/testset.double/ExceptionToUnion/NaN.Compact
hack/CompatibilityTest/testset.double/StructToException/NaN.Binary
hack/CompatibilityTest/testset.double/StructToException/NaN.Compact
hack/CompatibilityTest/testset.double/StructToUnion/NaN.Binary
hack/CompatibilityTest/testset.double/StructToUnion/NaN.Compact
hack/CompatibilityTest/testset.double/UnionToException/NaN.Binary
hack/CompatibilityTest/testset.double/UnionToException/NaN.Compact
hack/CompatibilityTest/testset.double/UnionToStruct/NaN.Binary
hack/CompatibilityTest/testset.double/UnionToStruct/NaN.Compact
hack/CompatibilityTest/testset.float/AddOptionalFieldWithCustomDefault.Binary
hack/CompatibilityTest/testset.float/AddOptionalFieldWithCustomDefault.Compact
hack/CompatibilityTest/testset.float/ChangeOptionalFieldCustomDefault.Binary
hack/CompatibilityTest/testset.float/ChangeOptionalFieldCustomDefault.Compact
hack/CompatibilityTest/testset.float/ExceptionToStruct/NaN.Binary
hack/CompatibilityTest/testset.float/ExceptionToStruct/NaN.Compact
hack/CompatibilityTest/testset.float/ExceptionToUnion/NaN.Binary
hack/CompatibilityTest/testset.float/ExceptionToUnion/NaN.Compact
hack/CompatibilityTest/testset.float/StructToException/NaN.Binary
hack/CompatibilityTest/testset.float/StructToException/NaN.Compact
hack/CompatibilityTest/testset.float/StructToUnion/NaN.Binary
hack/CompatibilityTest/testset.float/StructToUnion/NaN.Compact
hack/CompatibilityTest/testset.float/UnionToException/NaN.Binary
hack/CompatibilityTest/testset.float/UnionToException/NaN.Compact
hack/CompatibilityTest/testset.float/UnionToStruct/NaN.Binary
hack/CompatibilityTest/testset.float/UnionToStruct/NaN.Compact
hack/CompatibilityTest/testset.i16/AddOptionalFieldWithCustomDefault.Binary
hack/CompatibilityTest/testset.i16/AddOptionalFieldWithCustomDefault.Compact
hack/CompatibilityTest/testset.i16/ChangeOptionalFieldCustomDefault.Binary
hack/CompatibilityTest/testset.i16/ChangeOptionalFieldCustomDefault.Compact
hack/CompatibilityTest/testset.i32.i16/ChangeFieldType/max.Binary
hack/CompatibilityTest/testset.i32.i16/ChangeFieldType/max.Compact
hack/CompatibilityTest/testset.i32.i16/ChangeFieldType/min.Binary
hack/CompatibilityTest/testset.i32.i16/ChangeFieldType/min.Compact
hack/CompatibilityTest/testset.i32.i16/ChangeFieldType/neg_one.Binary
hack/CompatibilityTest/testset.i32.i16/ChangeFieldType/neg_one.Compact
hack/CompatibilityTest/testset.i32.i16/ChangeFieldType/one.Binary
hack/CompatibilityTest/testset.i32.i16/ChangeFieldType/one.Compact
hack/CompatibilityTest/testset.i32.i16/ChangeFieldType/zero.Binary
hack/CompatibilityTest/testset.i32.i16/ChangeFieldType/zero.Compact
hack/CompatibilityTest/testset.i32.i64/ChangeFieldType/max.Binary
hack/CompatibilityTest/testset.i32.i64/ChangeFieldType/max.Compact
hack/CompatibilityTest/testset.i32.i64/ChangeFieldType/min.Binary
hack/CompatibilityTest/testset.i32.i64/ChangeFieldType/min.Compact
hack/CompatibilityTest/testset.i32.i64/ChangeFieldType/neg_one.Binary
hack/CompatibilityTest/testset.i32.i64/ChangeFieldType/neg_one.Compact
hack/CompatibilityTest/testset.i32.i64/ChangeFieldType/one.Binary
hack/CompatibilityTest/testset.i32.i64/ChangeFieldType/one.Compact
hack/CompatibilityTest/testset.i32.i64/ChangeFieldType/zero.Binary
hack/CompatibilityTest/testset.i32.i64/ChangeFieldType/zero.Compact
hack/CompatibilityTest/testset.i32/AddOptionalFieldWithCustomDefault.Binary
hack/CompatibilityTest/testset.i32/AddOptionalFieldWithCustomDefault.Compact
hack/CompatibilityTest/testset.i32/ChangeOptionalFieldCustomDefault.Binary
hack/CompatibilityTest/testset.i32/ChangeOptionalFieldCustomDefault.Compact
hack/CompatibilityTest/testset.string/AddOptionalFieldWithCustomDefault.Binary
hack/CompatibilityTest/testset.string/AddOptionalFieldWithCustomDefault.Compact
hack/CompatibilityTest/testset.string/ChangeOptionalFieldCustomDefault.Binary
hack/CompatibilityTest/testset.string/ChangeOptionalFieldCustomDefault.Compact
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.0.MissingField.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.0.MissingField.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.0.NameMismatch.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.0.NameMismatch.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.0.NoZero.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.0.NoZero.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.0.Standard.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.0.Standard.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.0.ValueMismatch.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.0.ValueMismatch.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.1.MissingField.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.1.MissingField.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.1.NameMismatch.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.1.NameMismatch.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.1.NoZero.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.1.NoZero.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.1.Standard.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.1.Standard.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.1.ValueMismatch.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/MissingField.1.ValueMismatch.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.0.MissingField.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.0.MissingField.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.0.NameMismatch.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.0.NameMismatch.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.0.NoZero.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.0.NoZero.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.0.Standard.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.0.Standard.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.0.ValueMismatch.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.0.ValueMismatch.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.1.MissingField.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.1.MissingField.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.1.NameMismatch.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.1.NameMismatch.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.1.NoZero.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.1.NoZero.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.1.Standard.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.1.Standard.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.1.ValueMismatch.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NameMismatch.1.ValueMismatch.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.0.MissingField.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.0.MissingField.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.0.NameMismatch.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.0.NameMismatch.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.0.NoZero.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.0.NoZero.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.0.Standard.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.0.Standard.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.0.ValueMismatch.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.0.ValueMismatch.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.1.MissingField.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.1.MissingField.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.1.NameMismatch.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.1.NameMismatch.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.1.NoZero.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.1.NoZero.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.1.Standard.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.1.Standard.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.1.ValueMismatch.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/NoZero.1.ValueMismatch.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.0.MissingField.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.0.MissingField.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.0.NameMismatch.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.0.NameMismatch.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.0.NoZero.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.0.NoZero.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.0.Standard.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.0.Standard.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.0.ValueMismatch.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.0.ValueMismatch.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.1.MissingField.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.1.MissingField.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.1.NameMismatch.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.1.NameMismatch.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.1.NoZero.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.1.NoZero.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.1.Standard.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.1.Standard.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.1.ValueMismatch.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.1.ValueMismatch.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.2.MissingField.2.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.2.MissingField.2.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.2.NameMismatch.2.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.2.NameMismatch.2.Compact
hack/CompatibilityTest/testset/ChangeEnumType/Standard.2.ValueMismatch.2.Binary
hack/CompatibilityTest/testset/ChangeEnumType/Standard.2.ValueMismatch.2.Compact
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.0.MissingField.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.0.MissingField.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.0.NameMismatch.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.0.NameMismatch.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.0.NoZero.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.0.NoZero.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.0.Standard.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.0.Standard.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.0.ValueMismatch.0.Binary
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.0.ValueMismatch.0.Compact
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.1.MissingField.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.1.MissingField.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.1.NameMismatch.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.1.NameMismatch.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.1.NoZero.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.1.NoZero.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.1.Standard.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.1.Standard.1.Compact
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.1.ValueMismatch.1.Binary
hack/CompatibilityTest/testset/ChangeEnumType/ValueMismatch.1.ValueMismatch.1.Compact
hack/CompatibilityTest/testset.i64/ChangeOptionalFieldCustomDefault.Compact
hack/CompatibilityTest/testset.i64/ChangeOptionalFieldCustomDefault.Binary
hack/CompatibilityTest/testset.i64/AddOptionalFieldWithCustomDefault.Binary
hack/CompatibilityTest/testset.i64/AddOptionalFieldWithCustomDefault.Compact
hack/ThriftRPCClientTest/StreamFragmentation/Success.StreamFragmentationTest
hack/ThriftRPCClientTest/SinkFragmentation/Success.SinkFragmentationTest
hack/ThriftRPCClientTest/RequestResponseFragmentation/Success.RequestResponseFragmentationTest
hack/ThriftRPCClientTest/InteractionFactoryFunctionTest/Success.InteractionFactoryFunctionTest
#
#
# Hack: set<adapted> and map<adapted> aren't supported in the language itself
# since only int/string keys are allowed
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/empty.Compact
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/empty.Binary
hack/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/empty.Compact
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/all.Binary
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/all.Compact
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/empty.Binary
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/empty.Compact
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/set(max).Binary
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/set(max).Compact
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/set(min).Binary
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/set(min).Compact
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/set(neg_one).Binary
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/set(neg_one).Compact
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/set(one).Binary
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/set(one).Compact
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/set(zero).Binary
hack/RoundTripTest/testset.Adapted.set<adapted<i64>>/set(zero).Compact
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/all.Binary
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/all.Compact
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/empty.Binary
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/empty.Compact
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(empty).Binary
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(empty).Compact
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(leading_space).Binary
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(leading_space).Compact
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(lower).Binary
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(lower).Compact
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(spaces).Binary
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(spaces).Compact
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(trailing_space).Binary
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(trailing_space).Compact
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(upper).Binary
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(upper).Compact
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(utf8).Binary
hack/RoundTripTest/testset.Adapted.set<adapted<string>>/set(utf8).Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/all.Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/all.Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/set(max).Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/set(max).Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/set(min).Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/set(min).Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/set(neg_one).Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/set(neg_one).Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/set(one).Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/set(one).Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/set(zero).Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<i64>>/set(zero).Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/all.Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/all.Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/empty.Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/empty.Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(empty).Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(empty).Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(leading_space).Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(leading_space).Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(lower).Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(lower).Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(spaces).Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(spaces).Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(trailing_space).Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(trailing_space).Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(upper).Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(upper).Compact
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(utf8).Binary
hack/RoundTripTest/testset.FieldAdapted.set<adapted<string>>/set(utf8).Compact
hack/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<string>,adapted<double>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<string>,adapted<double>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<string>,adapted<float>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<string>,adapted<float>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/empty.Compact
hack/RoundTripTest/testset.map<adapted<string>,adapted<string>>/empty.Binary
hack/RoundTripTest/testset.map<adapted<string>,adapted<string>>/empty.Compact
hack/RoundTripTest/testset.set<adapted<i64>>/all.Binary
hack/RoundTripTest/testset.set<adapted<i64>>/all.Compact
hack/RoundTripTest/testset.set<adapted<i64>>/empty.Binary
hack/RoundTripTest/testset.set<adapted<i64>>/empty.Compact
hack/RoundTripTest/testset.set<adapted<i64>>/set(max).Binary
hack/RoundTripTest/testset.set<adapted<i64>>/set(max).Compact
hack/RoundTripTest/testset.set<adapted<i64>>/set(min).Binary
hack/RoundTripTest/testset.set<adapted<i64>>/set(min).Compact
hack/RoundTripTest/testset.set<adapted<i64>>/set(neg_one).Binary
hack/RoundTripTest/testset.set<adapted<i64>>/set(neg_one).Compact
hack/RoundTripTest/testset.set<adapted<i64>>/set(one).Binary
hack/RoundTripTest/testset.set<adapted<i64>>/set(one).Compact
hack/RoundTripTest/testset.set<adapted<i64>>/set(zero).Binary
hack/RoundTripTest/testset.set<adapted<i64>>/set(zero).Compact
hack/RoundTripTest/testset.set<adapted<string>>/all.Binary
hack/RoundTripTest/testset.set<adapted<string>>/all.Compact
hack/RoundTripTest/testset.set<adapted<string>>/empty.Binary
hack/RoundTripTest/testset.set<adapted<string>>/empty.Compact
hack/RoundTripTest/testset.set<adapted<string>>/set(empty).Binary
hack/RoundTripTest/testset.set<adapted<string>>/set(empty).Compact
hack/RoundTripTest/testset.set<adapted<string>>/set(leading_space).Binary
hack/RoundTripTest/testset.set<adapted<string>>/set(leading_space).Compact
hack/RoundTripTest/testset.set<adapted<string>>/set(lower).Binary
hack/RoundTripTest/testset.set<adapted<string>>/set(lower).Compact
hack/RoundTripTest/testset.set<adapted<string>>/set(spaces).Binary
hack/RoundTripTest/testset.set<adapted<string>>/set(spaces).Compact
hack/RoundTripTest/testset.set<adapted<string>>/set(trailing_space).Binary
hack/RoundTripTest/testset.set<adapted<string>>/set(trailing_space).Compact
hack/RoundTripTest/testset.set<adapted<string>>/set(upper).Binary
hack/RoundTripTest/testset.set<adapted<string>>/set(upper).Compact
hack/RoundTripTest/testset.set<adapted<string>>/set(utf8).Binary
hack/RoundTripTest/testset.set<adapted<string>>/set(utf8).Compact
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/empty.Compact
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/empty.Binary
hack/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/empty.Compact
hack/RoundTripTest/testset.union.set<adapted<i64>>/all.Binary
hack/RoundTripTest/testset.union.set<adapted<i64>>/all.Compact
hack/RoundTripTest/testset.union.set<adapted<i64>>/empty.Binary
hack/RoundTripTest/testset.union.set<adapted<i64>>/empty.Compact
hack/RoundTripTest/testset.union.set<adapted<i64>>/set(max).Binary
hack/RoundTripTest/testset.union.set<adapted<i64>>/set(max).Compact
hack/RoundTripTest/testset.union.set<adapted<i64>>/set(min).Binary
hack/RoundTripTest/testset.union.set<adapted<i64>>/set(min).Compact
hack/RoundTripTest/testset.union.set<adapted<i64>>/set(neg_one).Binary
hack/RoundTripTest/testset.union.set<adapted<i64>>/set(neg_one).Compact
hack/RoundTripTest/testset.union.set<adapted<i64>>/set(one).Binary
hack/RoundTripTest/testset.union.set<adapted<i64>>/set(one).Compact
hack/RoundTripTest/testset.union.set<adapted<i64>>/set(zero).Binary
hack/RoundTripTest/testset.union.set<adapted<i64>>/set(zero).Compact
hack/RoundTripTest/testset.union.set<adapted<string>>/all.Binary
hack/RoundTripTest/testset.union.set<adapted<string>>/all.Compact
hack/RoundTripTest/testset.union.set<adapted<string>>/empty.Binary
hack/RoundTripTest/testset.union.set<adapted<string>>/empty.Compact
hack/RoundTripTest/testset.union.set<adapted<string>>/set(empty).Binary
hack/RoundTripTest/testset.union.set<adapted<string>>/set(empty).Compact
hack/RoundTripTest/testset.union.set<adapted<string>>/set(leading_space).Binary
hack/RoundTripTest/testset.union.set<adapted<string>>/set(leading_space).Compact
hack/RoundTripTest/testset.union.set<adapted<string>>/set(lower).Binary
hack/RoundTripTest/testset.union.set<adapted<string>>/set(lower).Compact
hack/RoundTripTest/testset.union.set<adapted<string>>/set(spaces).Binary
hack/RoundTripTest/testset.union.set<adapted<string>>/set(spaces).Compact
hack/RoundTripTest/testset.union.set<adapted<string>>/set(trailing_space).Binary
hack/RoundTripTest/testset.union.set<adapted<string>>/set(trailing_space).Compact
hack/RoundTripTest/testset.union.set<adapted<string>>/set(upper).Binary
hack/RoundTripTest/testset.union.set<adapted<string>>/set(upper).Compact
hack/RoundTripTest/testset.union.set<adapted<string>>/set(utf8).Binary
hack/RoundTripTest/testset.union.set<adapted<string>>/set(utf8).Compact

#
#
# Hack: Protected unions are not rolled out 100%.
# Thus multiple fields can be set in the union.

hack/ThriftToleranceTest/testset.byte/MultipleFieldsInUnion/max.Binary
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/empty.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/NaN.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/neg_max_digits.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/neg_denorm_min.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/min_plus_ulp.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/max_minus_ulp.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/min_int.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/max.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/fmt_case_1.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/fmt_case_2.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/max.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/one.Binary
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/utf8.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/max_digits.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/NaN.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/denorm_min.Compact
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/lower.Compact
hack/ThriftToleranceTest/testset.byte/MultipleFieldsInUnion/zero.Binary
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/spaces.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/epsilon.Binary
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/utf8.Compact
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/trailing_space.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/NaN.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/zero.Compact
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/spaces.Compact
hack/ThriftToleranceTest/testset.i32/MultipleFieldsInUnion/max.Compact
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/upper.Binary
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/lower.Compact
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/leading_space.Compact
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/empty.Compact
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/empty.Binary
hack/ThriftToleranceTest/testset.i64/MultipleFieldsInUnion/min.Binary
hack/ThriftToleranceTest/testset.i64/MultipleFieldsInUnion/zero.Compact
hack/ThriftToleranceTest/testset.i32/MultipleFieldsInUnion/one.Compact
hack/ThriftToleranceTest/testset.i32/MultipleFieldsInUnion/neg_one.Binary
hack/ThriftToleranceTest/testset.i16/MultipleFieldsInUnion/one.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/lowest.Compact
hack/ThriftToleranceTest/testset.i16/MultipleFieldsInUnion/min.Compact
hack/ThriftToleranceTest/testset.i16/MultipleFieldsInUnion/zero.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/one.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/zero.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/neg_max_digits.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/min_int.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/min.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/max_int.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/max.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/inf.Compact
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/spaces.Binary
hack/ThriftToleranceTest/testset.i64/MultipleFieldsInUnion/one.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/fmt_case_1.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/max_int.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/neg_one.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/one.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/neg_zero.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/neg_epsilon.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/one_tenth.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/neg_max_digits.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/neg_denorm_min.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/min.Compact
hack/ThriftToleranceTest/testset.bool/MultipleFieldsInUnion/false.Compact
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/bad_utf8.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/denorm_min.Compact
hack/ThriftToleranceTest/testset.byte/MultipleFieldsInUnion/zero.Compact
hack/ThriftToleranceTest/testset.byte/MultipleFieldsInUnion/neg_one.Compact
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/upper.Binary
hack/ThriftToleranceTest/testset.byte/MultipleFieldsInUnion/neg_one.Binary
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/spaces.Binary
hack/ThriftToleranceTest/testset.byte/MultipleFieldsInUnion/one.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/inf.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/max_digits.Compact
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/bad_utf8.Compact
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/leading_space.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/lowest.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/epsilon.Binary
hack/ThriftToleranceTest/testset.i64/MultipleFieldsInUnion/one.Binary
hack/ThriftToleranceTest/testset.i16/MultipleFieldsInUnion/zero.Binary
hack/ThriftToleranceTest/testset.i64/MultipleFieldsInUnion/neg_one.Binary
hack/ThriftToleranceTest/testset.i64/MultipleFieldsInUnion/neg_one.Compact
hack/ThriftToleranceTest/testset.i64/MultipleFieldsInUnion/min.Compact
hack/ThriftToleranceTest/testset.i64/MultipleFieldsInUnion/max.Binary
hack/ThriftToleranceTest/testset.i64/MultipleFieldsInUnion/max.Compact
hack/ThriftToleranceTest/testset.i32/MultipleFieldsInUnion/neg_one.Compact
hack/ThriftToleranceTest/testset.i32/MultipleFieldsInUnion/one.Binary
hack/ThriftToleranceTest/testset.i32/MultipleFieldsInUnion/min.Binary
hack/ThriftToleranceTest/testset.i32/MultipleFieldsInUnion/min.Compact
hack/ThriftToleranceTest/testset.i16/MultipleFieldsInUnion/one.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/one_tenth.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/max_int.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/zero.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/neg_one.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/neg_zero.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/neg_zero.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/neg_max_digits.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/neg_inf.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/neg_denorm_min.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/min_int.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/min.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/inf.Binary
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/upper.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/lowest.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/neg_inf.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/min.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/min_plus_ulp.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/max_minus_ulp.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/min_int.Compact
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/leading_space.Compact
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/trailing_space.Binary
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/utf8.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/lowest.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/NaN.Compact
hack/ThriftToleranceTest/testset.byte/MultipleFieldsInUnion/max.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/inf.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/neg_one.Binary
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/empty.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/denorm_min.Binary
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/lower.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/max_int.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/epsilon.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/neg_epsilon.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/neg_zero.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/one_tenth.Binary
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/upper.Compact
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/trailing_space.Compact
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/leading_space.Binary
hack/ThriftToleranceTest/testset.i64/MultipleFieldsInUnion/zero.Binary
hack/ThriftToleranceTest/testset.i32/MultipleFieldsInUnion/zero.Binary
hack/ThriftToleranceTest/testset.i32/MultipleFieldsInUnion/max.Binary
hack/ThriftToleranceTest/testset.i16/MultipleFieldsInUnion/max.Compact
hack/ThriftToleranceTest/testset.i16/MultipleFieldsInUnion/neg_one.Binary
hack/ThriftToleranceTest/testset.i16/MultipleFieldsInUnion/neg_one.Compact
hack/ThriftToleranceTest/testset.i16/MultipleFieldsInUnion/min.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/one.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/neg_one.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/one_tenth.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/neg_epsilon.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/neg_denorm_min.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/neg_inf.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/neg_epsilon.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/min_plus_ulp.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/min_plus_ulp.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/max_minus_ulp.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/max.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/max_digits.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/epsilon.Compact
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/denorm_min.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/zero.Binary
hack/ThriftToleranceTest/testset.i32/MultipleFieldsInUnion/zero.Compact
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/utf8.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/max_digits.Compact
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/neg_inf.Compact
hack/ThriftToleranceTest/testset.bool/MultipleFieldsInUnion/true.Compact
hack/ThriftToleranceTest/testset.byte/MultipleFieldsInUnion/min.Binary
hack/ThriftToleranceTest/testset.byte/MultipleFieldsInUnion/min.Compact
hack/ThriftToleranceTest/testset.byte/MultipleFieldsInUnion/one.Binary
hack/ThriftToleranceTest/testset.binary/MultipleFieldsInUnion/trailing_space.Compact
hack/ThriftToleranceTest/testset.bool/MultipleFieldsInUnion/false.Binary
hack/ThriftToleranceTest/testset.float/MultipleFieldsInUnion/max_minus_ulp.Binary
hack/ThriftToleranceTest/testset.string/MultipleFieldsInUnion/lower.Binary
hack/ThriftToleranceTest/testset.double/MultipleFieldsInUnion/fmt_case_2.Compact
hack/ThriftToleranceTest/testset.i16/MultipleFieldsInUnion/max.Binary
hack/ThriftToleranceTest/testset.bool/MultipleFieldsInUnion/true.Binary

#
#
# Erlang. Only basic client RPC is supported in conformance test framework.
#
erlang/ThriftRPCClientTest/StreamBasic/Success.StreamBasicTest
erlang/ThriftRPCClientTest/StreamFragmentation/Success.StreamFragmentationTest
erlang/ThriftRPCClientTest/StreamInitialResponse/Success.StreamInitialResponseTest
erlang/ThriftRPCClientTest/StreamSubsequentCredits/Success.StreamSubsequentCreditsTest
erlang/ThriftRPCClientTest/StreamDeclaredException/Success.StreamDeclaredExceptionTest
erlang/ThriftRPCClientTest/StreamUndeclaredException/Success.StreamUndeclaredExceptionTest
erlang/ThriftRPCClientTest/StreamInitialDeclaredException/Success.StreamInitialDeclaredExceptionTest
erlang/ThriftRPCClientTest/StreamInitialUndeclaredException/Success.StreamInitialUndeclaredExceptionTest
erlang/ThriftRPCClientTest/SinkBasic/Success.SinkBasicTest
erlang/ThriftRPCClientTest/SinkFragmentation/Success.SinkFragmentationTest
erlang/ThriftRPCClientTest/SinkSubsequestCredits/Success.SinkSubsequentCreditsTest
erlang/ThriftRPCClientTest/InteractionConstructorTest/Success.InteractionConstructorTest
erlang/ThriftRPCClientTest/InteractionFactoryFunctionTest/Success.InteractionFactoryFunctionTest
erlang/ThriftRPCClientTest/InteractionConstructorPersistsStateTest/Success.InteractionConstructorPersistsStateTest
erlang/ThriftRPCClientTest/InteractionFactoryFunctionPersistsStateTest/Success.InteractionFactoryFunctionPersistsStateTest
erlang/ThriftRPCClientTest/InteractionConstructorTerminationTest/Success.InteractionConstructorTerminationTest
erlang/ThriftRPCClientTest/InteractionFactoryFunctionTerminationTest/Success.InteractionFactoryFunctionTerminationTest
erlang/ThriftRPCClientTest/StreamChunkTimeout/Success.StreamChunkTimeoutTest
erlang/ThriftRPCClientTest/StreamCreditTimeout/Success.StreamCreditTimeoutTest
erlang/ThriftRPCClientTest/StreamInitialTimeout/Success.StreamInitialTimeoutTest

# Go
#
# Go Data conformance roundtrip tests [FAILED]
go/RoundTripTest/testset.Terse.bool/false.Binary
go/RoundTripTest/testset.Terse.bool/false.Compact
go/RoundTripTest/testset.Optional.map<i64,bool>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<i64,bool>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<string,bool>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<string,bool>/empty_optional.Compact
go/RoundTripTest/testset.Terse.byte/zero.Binary
go/RoundTripTest/testset.Terse.byte/zero.Compact
go/RoundTripTest/testset.Optional.list<byte>/empty_optional.Binary
go/RoundTripTest/testset.Optional.list<byte>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<i64,byte>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<i64,byte>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<string,byte>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<string,byte>/empty_optional.Compact
go/RoundTripTest/testset.Terse.i16/zero.Binary
go/RoundTripTest/testset.Terse.i16/zero.Compact
go/RoundTripTest/testset.Optional.list<i16>/empty_optional.Binary
go/RoundTripTest/testset.Optional.list<i16>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<i64,i16>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<i64,i16>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<string,i16>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<string,i16>/empty_optional.Compact
go/RoundTripTest/testset.Terse.i32/zero.Binary
go/RoundTripTest/testset.Terse.i32/zero.Compact
go/RoundTripTest/testset.Optional.list<i32>/empty_optional.Binary
go/RoundTripTest/testset.Optional.list<i32>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<i64,i32>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<i64,i32>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<string,i32>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<string,i32>/empty_optional.Compact
go/RoundTripTest/testset.Terse.i64/zero.Binary
go/RoundTripTest/testset.Terse.i64/zero.Compact
go/RoundTripTest/testset.Optional.list<i64>/empty_optional.Binary
go/RoundTripTest/testset.Optional.list<i64>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<i64,i64>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<i64,i64>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<string,i64>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<string,i64>/empty_optional.Compact
go/RoundTripTest/testset.Terse.float/zero.Binary
go/RoundTripTest/testset.Terse.float/zero.Compact
go/RoundTripTest/testset.Optional.list<float>/empty_optional.Binary
go/RoundTripTest/testset.Optional.list<float>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<i64,float>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<i64,float>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<string,float>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<string,float>/empty_optional.Compact
go/RoundTripTest/testset.Terse.double/zero.Binary
go/RoundTripTest/testset.Terse.double/zero.Compact
go/RoundTripTest/testset.Optional.list<double>/empty_optional.Binary
go/RoundTripTest/testset.Optional.list<double>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<i64,double>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<i64,double>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<string,double>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<string,double>/empty_optional.Compact
go/RoundTripTest/testset.Optional.string/empty_optional.Binary
go/RoundTripTest/testset.Optional.string/empty_optional.Compact
go/RoundTripTest/testset.Terse.string/empty.Binary
go/RoundTripTest/testset.Terse.string/empty.Compact
go/RoundTripTest/testset.Optional.list<string>/empty_optional.Binary
go/RoundTripTest/testset.Optional.list<string>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<i64,string>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<i64,string>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<string,string>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<string,string>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<i64,binary>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<i64,binary>/empty_optional.Compact
go/RoundTripTest/testset.Optional.map<string,binary>/empty_optional.Binary
go/RoundTripTest/testset.Optional.map<string,binary>/empty_optional.Compact
go/RoundTripTest/testset.Optional.set<i64>/empty_optional.Binary
go/RoundTripTest/testset.Optional.set<i64>/empty_optional.Compact
go/RoundTripTest/testset.Optional.set<string>/empty_optional.Binary
go/RoundTripTest/testset.Optional.set<string>/empty_optional.Compact
go/RoundTripTest/testset.Optional.float/empty_optional.Binary
go/RoundTripTest/testset.Optional.float/empty_optional.Compact
go/RoundTripTest/testset.Optional.double/empty_optional.Binary
go/RoundTripTest/testset.Optional.double/empty_optional.Compact
go/RoundTripTest/testset.Optional.list<binary>/empty_optional.Binary
go/RoundTripTest/testset.Optional.list<binary>/empty_optional.Compact
go/RoundTripTest/testset.Optional.byte/empty_optional.Binary
go/RoundTripTest/testset.Optional.byte/empty_optional.Compact
go/RoundTripTest/testset.Optional.binary/empty_optional.Binary
go/RoundTripTest/testset.Optional.binary/empty_optional.Compact
go/RoundTripTest/testset.Optional.bool/empty_optional.Binary
go/RoundTripTest/testset.Optional.bool/empty_optional.Compact
go/RoundTripTest/testset.Optional.i16/empty_optional.Binary
go/RoundTripTest/testset.Optional.i16/empty_optional.Compact
go/RoundTripTest/testset.Optional.i32/empty_optional.Binary
go/RoundTripTest/testset.Optional.i32/empty_optional.Compact
go/RoundTripTest/testset.Optional.i64/empty_optional.Binary
go/RoundTripTest/testset.Optional.i64/empty_optional.Compact
go/RoundTripTest/bool/true.Binary
go/RoundTripTest/bool/true.Compact
go/RoundTripTest/bool/false.Binary
go/RoundTripTest/bool/false.Compact
go/RoundTripTest/map<i64,bool>/empty.Binary
go/RoundTripTest/map<i64,bool>/empty.Compact
go/RoundTripTest/map<string,bool>/empty.Binary
go/RoundTripTest/map<string,bool>/empty.Compact
go/RoundTripTest/byte/zero.Binary
go/RoundTripTest/byte/zero.Compact
go/RoundTripTest/byte/min.Binary
go/RoundTripTest/byte/min.Compact
go/RoundTripTest/byte/max.Binary
go/RoundTripTest/byte/max.Compact
go/RoundTripTest/byte/one.Binary
go/RoundTripTest/byte/one.Compact
go/RoundTripTest/byte/neg_one.Binary
go/RoundTripTest/byte/neg_one.Compact
go/RoundTripTest/list<byte>/empty.Binary
go/RoundTripTest/list<byte>/empty.Compact
go/RoundTripTest/list<byte>/all.Binary
go/RoundTripTest/list<byte>/all.Compact
go/RoundTripTest/list<byte>/duplicate.Binary
go/RoundTripTest/list<byte>/duplicate.Compact
go/RoundTripTest/list<byte>/reverse.Binary
go/RoundTripTest/list<byte>/reverse.Compact
go/RoundTripTest/map<i64,byte>/empty.Binary
go/RoundTripTest/map<i64,byte>/empty.Compact
go/RoundTripTest/map<string,byte>/empty.Binary
go/RoundTripTest/map<string,byte>/empty.Compact
go/RoundTripTest/i16/zero.Binary
go/RoundTripTest/i16/zero.Compact
go/RoundTripTest/i16/min.Binary
go/RoundTripTest/i16/min.Compact
go/RoundTripTest/i16/max.Binary
go/RoundTripTest/i16/max.Compact
go/RoundTripTest/i16/one.Binary
go/RoundTripTest/i16/one.Compact
go/RoundTripTest/i16/neg_one.Binary
go/RoundTripTest/i16/neg_one.Compact
go/RoundTripTest/list<i16>/empty.Binary
go/RoundTripTest/list<i16>/empty.Compact
go/RoundTripTest/list<i16>/all.Binary
go/RoundTripTest/list<i16>/all.Compact
go/RoundTripTest/list<i16>/duplicate.Binary
go/RoundTripTest/list<i16>/duplicate.Compact
go/RoundTripTest/list<i16>/reverse.Binary
go/RoundTripTest/list<i16>/reverse.Compact
go/RoundTripTest/map<i64,i16>/empty.Binary
go/RoundTripTest/map<i64,i16>/empty.Compact
go/RoundTripTest/map<string,i16>/empty.Binary
go/RoundTripTest/map<string,i16>/empty.Compact
go/RoundTripTest/i32/zero.Binary
go/RoundTripTest/i32/zero.Compact
go/RoundTripTest/i32/min.Binary
go/RoundTripTest/i32/min.Compact
go/RoundTripTest/i32/max.Binary
go/RoundTripTest/i32/max.Compact
go/RoundTripTest/i32/one.Binary
go/RoundTripTest/i32/one.Compact
go/RoundTripTest/i32/neg_one.Binary
go/RoundTripTest/i32/neg_one.Compact
go/RoundTripTest/list<i32>/empty.Binary
go/RoundTripTest/list<i32>/empty.Compact
go/RoundTripTest/list<i32>/all.Binary
go/RoundTripTest/list<i32>/all.Compact
go/RoundTripTest/list<i32>/duplicate.Binary
go/RoundTripTest/list<i32>/duplicate.Compact
go/RoundTripTest/list<i32>/reverse.Binary
go/RoundTripTest/list<i32>/reverse.Compact
go/RoundTripTest/map<i64,i32>/empty.Binary
go/RoundTripTest/map<i64,i32>/empty.Compact
go/RoundTripTest/map<string,i32>/empty.Binary
go/RoundTripTest/map<string,i32>/empty.Compact
go/RoundTripTest/i64/zero.Binary
go/RoundTripTest/i64/zero.Compact
go/RoundTripTest/i64/min.Binary
go/RoundTripTest/i64/min.Compact
go/RoundTripTest/i64/max.Binary
go/RoundTripTest/i64/max.Compact
go/RoundTripTest/i64/one.Binary
go/RoundTripTest/i64/one.Compact
go/RoundTripTest/i64/neg_one.Binary
go/RoundTripTest/i64/neg_one.Compact
go/RoundTripTest/list<i64>/empty.Binary
go/RoundTripTest/list<i64>/empty.Compact
go/RoundTripTest/list<i64>/all.Binary
go/RoundTripTest/list<i64>/all.Compact
go/RoundTripTest/list<i64>/duplicate.Binary
go/RoundTripTest/list<i64>/duplicate.Compact
go/RoundTripTest/list<i64>/reverse.Binary
go/RoundTripTest/list<i64>/reverse.Compact
go/RoundTripTest/map<i64,i64>/empty.Binary
go/RoundTripTest/map<i64,i64>/empty.Compact
go/RoundTripTest/map<string,i64>/empty.Binary
go/RoundTripTest/map<string,i64>/empty.Compact
go/RoundTripTest/float/zero.Binary
go/RoundTripTest/float/zero.Compact
go/RoundTripTest/float/lowest.Binary
go/RoundTripTest/float/lowest.Compact
go/RoundTripTest/float/min.Binary
go/RoundTripTest/float/min.Compact
go/RoundTripTest/float/max.Binary
go/RoundTripTest/float/max.Compact
go/RoundTripTest/float/max_int.Binary
go/RoundTripTest/float/max_int.Compact
go/RoundTripTest/float/min_int.Binary
go/RoundTripTest/float/min_int.Compact
go/RoundTripTest/float/max_digits.Binary
go/RoundTripTest/float/max_digits.Compact
go/RoundTripTest/float/neg_max_digits.Binary
go/RoundTripTest/float/neg_max_digits.Compact
go/RoundTripTest/float/one_tenth.Binary
go/RoundTripTest/float/one_tenth.Compact
go/RoundTripTest/float/min_plus_ulp.Binary
go/RoundTripTest/float/min_plus_ulp.Compact
go/RoundTripTest/float/max_minus_ulp.Binary
go/RoundTripTest/float/max_minus_ulp.Compact
go/RoundTripTest/float/inf.Binary
go/RoundTripTest/float/inf.Compact
go/RoundTripTest/float/neg_inf.Binary
go/RoundTripTest/float/neg_inf.Compact
go/RoundTripTest/float/one.Binary
go/RoundTripTest/float/one.Compact
go/RoundTripTest/float/neg_one.Binary
go/RoundTripTest/float/neg_one.Compact
go/RoundTripTest/float/epsilon.Binary
go/RoundTripTest/float/epsilon.Compact
go/RoundTripTest/float/neg_epsilon.Binary
go/RoundTripTest/float/neg_epsilon.Compact
go/RoundTripTest/float/denorm_min.Binary
go/RoundTripTest/float/denorm_min.Compact
go/RoundTripTest/float/neg_denorm_min.Binary
go/RoundTripTest/float/neg_denorm_min.Compact
go/RoundTripTest/float/neg_zero.Binary
go/RoundTripTest/float/neg_zero.Compact
go/RoundTripTest/list<float>/empty.Binary
go/RoundTripTest/list<float>/empty.Compact
go/RoundTripTest/map<i64,float>/empty.Binary
go/RoundTripTest/map<i64,float>/empty.Compact
go/RoundTripTest/map<string,float>/empty.Binary
go/RoundTripTest/map<string,float>/empty.Compact
go/RoundTripTest/double/zero.Binary
go/RoundTripTest/double/zero.Compact
go/RoundTripTest/double/lowest.Binary
go/RoundTripTest/double/lowest.Compact
go/RoundTripTest/double/min.Binary
go/RoundTripTest/double/min.Compact
go/RoundTripTest/double/max.Binary
go/RoundTripTest/double/max.Compact
go/RoundTripTest/double/max_int.Binary
go/RoundTripTest/double/max_int.Compact
go/RoundTripTest/double/min_int.Binary
go/RoundTripTest/double/min_int.Compact
go/RoundTripTest/double/max_digits.Binary
go/RoundTripTest/double/max_digits.Compact
go/RoundTripTest/double/neg_max_digits.Binary
go/RoundTripTest/double/neg_max_digits.Compact
go/RoundTripTest/double/one_tenth.Binary
go/RoundTripTest/double/one_tenth.Compact
go/RoundTripTest/double/min_plus_ulp.Binary
go/RoundTripTest/double/min_plus_ulp.Compact
go/RoundTripTest/double/max_minus_ulp.Binary
go/RoundTripTest/double/max_minus_ulp.Compact
go/RoundTripTest/double/inf.Binary
go/RoundTripTest/double/inf.Compact
go/RoundTripTest/double/neg_inf.Binary
go/RoundTripTest/double/neg_inf.Compact
go/RoundTripTest/double/one.Binary
go/RoundTripTest/double/one.Compact
go/RoundTripTest/double/neg_one.Binary
go/RoundTripTest/double/neg_one.Compact
go/RoundTripTest/double/epsilon.Binary
go/RoundTripTest/double/epsilon.Compact
go/RoundTripTest/double/neg_epsilon.Binary
go/RoundTripTest/double/neg_epsilon.Compact
go/RoundTripTest/double/denorm_min.Binary
go/RoundTripTest/double/denorm_min.Compact
go/RoundTripTest/double/neg_denorm_min.Binary
go/RoundTripTest/double/neg_denorm_min.Compact
go/RoundTripTest/double/fmt_case_1.Binary
go/RoundTripTest/double/fmt_case_1.Compact
go/RoundTripTest/double/fmt_case_2.Binary
go/RoundTripTest/double/fmt_case_2.Compact
go/RoundTripTest/double/neg_zero.Binary
go/RoundTripTest/double/neg_zero.Compact
go/RoundTripTest/list<double>/empty.Binary
go/RoundTripTest/list<double>/empty.Compact
go/RoundTripTest/map<i64,double>/empty.Binary
go/RoundTripTest/map<i64,double>/empty.Compact
go/RoundTripTest/map<string,double>/empty.Binary
go/RoundTripTest/map<string,double>/empty.Compact
go/RoundTripTest/string/empty.Binary
go/RoundTripTest/string/empty.Compact
go/RoundTripTest/string/lower.Binary
go/RoundTripTest/string/lower.Compact
go/RoundTripTest/string/upper.Binary
go/RoundTripTest/string/upper.Compact
go/RoundTripTest/string/spaces.Binary
go/RoundTripTest/string/spaces.Compact
go/RoundTripTest/string/leading_space.Binary
go/RoundTripTest/string/leading_space.Compact
go/RoundTripTest/string/trailing_space.Binary
go/RoundTripTest/string/trailing_space.Compact
go/RoundTripTest/string/utf8.Binary
go/RoundTripTest/string/utf8.Compact
go/RoundTripTest/list<string>/empty.Binary
go/RoundTripTest/list<string>/empty.Compact
go/RoundTripTest/list<string>/all.Binary
go/RoundTripTest/list<string>/all.Compact
go/RoundTripTest/list<string>/duplicate.Binary
go/RoundTripTest/list<string>/duplicate.Compact
go/RoundTripTest/list<string>/reverse.Binary
go/RoundTripTest/list<string>/reverse.Compact
go/RoundTripTest/map<i64,string>/empty.Binary
go/RoundTripTest/map<i64,string>/empty.Compact
go/RoundTripTest/map<string,string>/empty.Binary
go/RoundTripTest/map<string,string>/empty.Compact
go/RoundTripTest/binary/empty.Binary
go/RoundTripTest/binary/empty.Compact
go/RoundTripTest/binary/lower.Binary
go/RoundTripTest/binary/lower.Compact
go/RoundTripTest/binary/upper.Binary
go/RoundTripTest/binary/upper.Compact
go/RoundTripTest/binary/spaces.Binary
go/RoundTripTest/binary/spaces.Compact
go/RoundTripTest/binary/leading_space.Binary
go/RoundTripTest/binary/leading_space.Compact
go/RoundTripTest/binary/trailing_space.Binary
go/RoundTripTest/binary/trailing_space.Compact
go/RoundTripTest/binary/utf8.Binary
go/RoundTripTest/binary/utf8.Compact
go/RoundTripTest/binary/bad_utf8.Binary
go/RoundTripTest/binary/bad_utf8.Compact
go/RoundTripTest/list<binary>/empty.Binary
go/RoundTripTest/list<binary>/empty.Compact
go/RoundTripTest/list<binary>/all.Binary
go/RoundTripTest/list<binary>/all.Compact
go/RoundTripTest/list<binary>/duplicate.Binary
go/RoundTripTest/list<binary>/duplicate.Compact
go/RoundTripTest/list<binary>/reverse.Binary
go/RoundTripTest/list<binary>/reverse.Compact
go/RoundTripTest/map<i64,binary>/empty.Binary
go/RoundTripTest/map<i64,binary>/empty.Compact
go/RoundTripTest/map<string,binary>/empty.Binary
go/RoundTripTest/map<string,binary>/empty.Compact
go/RoundTripTest/set<i64>/empty.Binary
go/RoundTripTest/set<i64>/empty.Compact
go/RoundTripTest/set<i64>/all.Binary
go/RoundTripTest/set<i64>/all.Compact
go/RoundTripTest/set<i64>/set(zero).Binary
go/RoundTripTest/set<i64>/set(zero).Compact
go/RoundTripTest/set<i64>/set(min).Binary
go/RoundTripTest/set<i64>/set(min).Compact
go/RoundTripTest/set<i64>/set(max).Binary
go/RoundTripTest/set<i64>/set(max).Compact
go/RoundTripTest/set<i64>/set(one).Binary
go/RoundTripTest/set<i64>/set(one).Compact
go/RoundTripTest/set<i64>/set(neg_one).Binary
go/RoundTripTest/set<i64>/set(neg_one).Compact
go/RoundTripTest/set<string>/empty.Binary
go/RoundTripTest/set<string>/empty.Compact
go/RoundTripTest/set<string>/all.Binary
go/RoundTripTest/set<string>/all.Compact
go/RoundTripTest/set<string>/set(empty).Binary
go/RoundTripTest/set<string>/set(empty).Compact
go/RoundTripTest/set<string>/set(lower).Binary
go/RoundTripTest/set<string>/set(lower).Compact
go/RoundTripTest/set<string>/set(upper).Binary
go/RoundTripTest/set<string>/set(upper).Compact
go/RoundTripTest/set<string>/set(spaces).Binary
go/RoundTripTest/set<string>/set(spaces).Compact
go/RoundTripTest/set<string>/set(leading_space).Binary
go/RoundTripTest/set<string>/set(leading_space).Compact
go/RoundTripTest/set<string>/set(trailing_space).Binary
go/RoundTripTest/set<string>/set(trailing_space).Compact
go/RoundTripTest/set<string>/set(utf8).Binary
go/RoundTripTest/set<string>/set(utf8).Compact

#
# NaN Go Data conformance roundtrip tests [FAILED]
# NaN is broken in test harness and not a Go specific issue
# list<float> and list<double> tests also contain NaN

go/RoundTripTest/testset.FieldAdapted.float/NaN.Binary
go/RoundTripTest/testset.FieldAdapted.float/NaN.Compact
go/RoundTripTest/testset.FieldAdapted.double/NaN.Binary
go/RoundTripTest/testset.FieldAdapted.double/NaN.Compact
go/RoundTripTest/testset.FieldAdapted.adapted<float>/NaN.Binary
go/RoundTripTest/testset.FieldAdapted.adapted<float>/NaN.Compact
go/RoundTripTest/testset.FieldAdapted.adapted<double>/NaN.Binary
go/RoundTripTest/testset.FieldAdapted.adapted<double>/NaN.Compact
go/RoundTripTest/testset.float/NaN.Binary
go/RoundTripTest/testset.float/NaN.Compact
go/RoundTripTest/testset.adapted<float>/NaN.Binary
go/RoundTripTest/testset.adapted<float>/NaN.Compact
go/RoundTripTest/testset.double/NaN.Binary
go/RoundTripTest/testset.double/NaN.Compact
go/RoundTripTest/testset.adapted<double>/NaN.Binary
go/RoundTripTest/testset.adapted<double>/NaN.Compact
go/RoundTripTest/testset.Terse.float/NaN.Binary
go/RoundTripTest/testset.Terse.float/NaN.Compact
go/RoundTripTest/testset.Terse.double/NaN.Binary
go/RoundTripTest/testset.Terse.double/NaN.Compact
go/RoundTripTest/testset.Optional.float/NaN.Binary
go/RoundTripTest/testset.Optional.float/NaN.Compact
go/RoundTripTest/testset.Optional.double/NaN.Binary
go/RoundTripTest/testset.Optional.double/NaN.Compact
go/RoundTripTest/float/NaN.Binary
go/RoundTripTest/float/NaN.Compact
go/RoundTripTest/testset.Adapted.float/NaN.Binary
go/RoundTripTest/testset.Adapted.float/NaN.Compact
go/RoundTripTest/testset.Adapted.adapted<float>/NaN.Binary
go/RoundTripTest/testset.Adapted.adapted<float>/NaN.Compact
go/RoundTripTest/double/NaN.Binary
go/RoundTripTest/double/NaN.Compact
go/RoundTripTest/testset.Adapted.double/NaN.Binary
go/RoundTripTest/testset.Adapted.double/NaN.Compact
go/RoundTripTest/testset.Adapted.adapted<double>/NaN.Binary
go/RoundTripTest/testset.Adapted.adapted<double>/NaN.Compact
go/RoundTripTest/testset.union.float/NaN.Binary
go/RoundTripTest/testset.union.float/NaN.Compact
go/RoundTripTest/testset.union.adapted<float>/NaN.Binary
go/RoundTripTest/testset.union.adapted<float>/NaN.Compact
go/RoundTripTest/testset.union.double/NaN.Binary
go/RoundTripTest/testset.union.double/NaN.Compact
go/RoundTripTest/testset.union.adapted<double>/NaN.Binary
go/RoundTripTest/testset.union.adapted<double>/NaN.Compact
go/RoundTripTest/testset.list<float>/all.Binary
go/RoundTripTest/testset.list<float>/all.Compact
go/RoundTripTest/testset.list<float>/duplicate.Binary
go/RoundTripTest/testset.list<float>/duplicate.Compact
go/RoundTripTest/testset.list<float>/reverse.Binary
go/RoundTripTest/testset.list<float>/reverse.Compact
go/RoundTripTest/testset.list<adapted<float>>/all.Binary
go/RoundTripTest/testset.list<adapted<float>>/all.Compact
go/RoundTripTest/testset.list<adapted<float>>/duplicate.Binary
go/RoundTripTest/testset.list<adapted<float>>/duplicate.Compact
go/RoundTripTest/testset.list<adapted<float>>/reverse.Binary
go/RoundTripTest/testset.list<adapted<float>>/reverse.Compact
go/RoundTripTest/testset.list<double>/all.Binary
go/RoundTripTest/testset.list<double>/all.Compact
go/RoundTripTest/testset.list<double>/duplicate.Binary
go/RoundTripTest/testset.list<double>/duplicate.Compact
go/RoundTripTest/testset.list<double>/reverse.Binary
go/RoundTripTest/testset.list<double>/reverse.Compact
go/RoundTripTest/testset.list<adapted<double>>/all.Binary
go/RoundTripTest/testset.list<adapted<double>>/all.Compact
go/RoundTripTest/testset.list<adapted<double>>/duplicate.Binary
go/RoundTripTest/testset.list<adapted<double>>/duplicate.Compact
go/RoundTripTest/testset.list<adapted<double>>/reverse.Binary
go/RoundTripTest/testset.list<adapted<double>>/reverse.Compact
go/RoundTripTest/testset.union.list<float>/all.Binary
go/RoundTripTest/testset.union.list<float>/all.Compact
go/RoundTripTest/testset.union.list<float>/duplicate.Binary
go/RoundTripTest/testset.union.list<float>/duplicate.Compact
go/RoundTripTest/testset.union.list<float>/reverse.Binary
go/RoundTripTest/testset.union.list<float>/reverse.Compact
go/RoundTripTest/testset.union.list<adapted<float>>/all.Binary
go/RoundTripTest/testset.union.list<adapted<float>>/all.Compact
go/RoundTripTest/testset.union.list<adapted<float>>/duplicate.Binary
go/RoundTripTest/testset.union.list<adapted<float>>/duplicate.Compact
go/RoundTripTest/testset.union.list<adapted<float>>/reverse.Binary
go/RoundTripTest/testset.union.list<adapted<float>>/reverse.Compact
go/RoundTripTest/testset.union.list<double>/all.Binary
go/RoundTripTest/testset.union.list<double>/all.Compact
go/RoundTripTest/testset.union.list<double>/duplicate.Binary
go/RoundTripTest/testset.union.list<double>/duplicate.Compact
go/RoundTripTest/testset.union.list<double>/reverse.Binary
go/RoundTripTest/testset.union.list<double>/reverse.Compact
go/RoundTripTest/testset.union.list<adapted<double>>/all.Binary
go/RoundTripTest/testset.union.list<adapted<double>>/all.Compact
go/RoundTripTest/testset.union.list<adapted<double>>/duplicate.Binary
go/RoundTripTest/testset.union.list<adapted<double>>/duplicate.Compact
go/RoundTripTest/testset.union.list<adapted<double>>/reverse.Binary
go/RoundTripTest/testset.union.list<adapted<double>>/reverse.Compact
go/RoundTripTest/testset.Adapted.list<double>/all.Binary
go/RoundTripTest/testset.Adapted.list<double>/all.Compact
go/RoundTripTest/testset.Adapted.list<double>/duplicate.Binary
go/RoundTripTest/testset.Adapted.list<double>/duplicate.Compact
go/RoundTripTest/testset.Adapted.list<double>/reverse.Binary
go/RoundTripTest/testset.Adapted.list<double>/reverse.Compact
go/RoundTripTest/testset.Adapted.list<adapted<double>>/all.Binary
go/RoundTripTest/testset.Adapted.list<adapted<double>>/all.Compact
go/RoundTripTest/testset.Adapted.list<adapted<double>>/duplicate.Binary
go/RoundTripTest/testset.Adapted.list<adapted<double>>/duplicate.Compact
go/RoundTripTest/testset.Adapted.list<adapted<double>>/reverse.Binary
go/RoundTripTest/testset.Adapted.list<adapted<double>>/reverse.Compact
go/RoundTripTest/testset.Optional.list<double>/all.Binary
go/RoundTripTest/testset.Optional.list<double>/all.Compact
go/RoundTripTest/testset.FieldAdapted.list<double>/all.Binary
go/RoundTripTest/testset.FieldAdapted.list<double>/all.Compact
go/RoundTripTest/testset.FieldAdapted.list<double>/duplicate.Binary
go/RoundTripTest/testset.FieldAdapted.list<double>/duplicate.Compact
go/RoundTripTest/testset.FieldAdapted.list<double>/reverse.Binary
go/RoundTripTest/testset.FieldAdapted.list<double>/reverse.Compact
go/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/all.Binary
go/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/all.Compact
go/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/duplicate.Binary
go/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/duplicate.Compact
go/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/reverse.Binary
go/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/reverse.Compact
go/RoundTripTest/testset.FieldAdapted.list<float>/all.Binary
go/RoundTripTest/testset.FieldAdapted.list<float>/all.Compact
go/RoundTripTest/testset.FieldAdapted.list<float>/duplicate.Binary
go/RoundTripTest/testset.FieldAdapted.list<float>/duplicate.Compact
go/RoundTripTest/testset.FieldAdapted.list<float>/reverse.Binary
go/RoundTripTest/testset.FieldAdapted.list<float>/reverse.Compact
go/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/all.Binary
go/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/all.Compact
go/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/duplicate.Binary
go/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/duplicate.Compact
go/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/reverse.Binary
go/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/reverse.Compact
go/RoundTripTest/testset.Terse.list<double>/all.Binary
go/RoundTripTest/testset.Terse.list<double>/all.Compact
go/RoundTripTest/testset.Optional.list<double>/duplicate.Binary
go/RoundTripTest/testset.Optional.list<double>/duplicate.Compact
go/RoundTripTest/testset.Terse.list<double>/duplicate.Binary
go/RoundTripTest/testset.Terse.list<double>/duplicate.Compact
go/RoundTripTest/testset.Optional.list<double>/reverse.Binary
go/RoundTripTest/testset.Optional.list<double>/reverse.Compact
go/RoundTripTest/testset.Terse.list<double>/reverse.Binary
go/RoundTripTest/testset.Terse.list<double>/reverse.Compact
go/RoundTripTest/list<float>/all.Binary
go/RoundTripTest/list<float>/all.Compact
go/RoundTripTest/testset.Adapted.list<float>/all.Binary
go/RoundTripTest/testset.Adapted.list<float>/all.Compact
go/RoundTripTest/list<float>/duplicate.Binary
go/RoundTripTest/list<float>/duplicate.Compact
go/RoundTripTest/testset.Adapted.list<float>/duplicate.Binary
go/RoundTripTest/testset.Adapted.list<float>/duplicate.Compact
go/RoundTripTest/list<float>/reverse.Binary
go/RoundTripTest/list<float>/reverse.Compact
go/RoundTripTest/testset.Adapted.list<float>/reverse.Binary
go/RoundTripTest/testset.Adapted.list<float>/reverse.Compact
go/RoundTripTest/testset.Adapted.list<adapted<float>>/all.Binary
go/RoundTripTest/testset.Adapted.list<adapted<float>>/all.Compact
go/RoundTripTest/testset.Adapted.list<adapted<float>>/duplicate.Binary
go/RoundTripTest/testset.Adapted.list<adapted<float>>/duplicate.Compact
go/RoundTripTest/testset.Adapted.list<adapted<float>>/reverse.Binary
go/RoundTripTest/testset.Adapted.list<adapted<float>>/reverse.Compact
go/RoundTripTest/list<double>/all.Binary
go/RoundTripTest/list<double>/all.Compact
go/RoundTripTest/list<double>/duplicate.Binary
go/RoundTripTest/list<double>/duplicate.Compact
go/RoundTripTest/list<double>/reverse.Binary
go/RoundTripTest/list<double>/reverse.Compact
go/RoundTripTest/testset.Optional.list<float>/all.Binary
go/RoundTripTest/testset.Optional.list<float>/all.Compact
go/RoundTripTest/testset.Terse.list<float>/all.Binary
go/RoundTripTest/testset.Terse.list<float>/all.Compact
go/RoundTripTest/testset.Optional.list<float>/duplicate.Binary
go/RoundTripTest/testset.Optional.list<float>/duplicate.Compact
go/RoundTripTest/testset.Terse.list<float>/duplicate.Binary
go/RoundTripTest/testset.Terse.list<float>/duplicate.Compact
go/RoundTripTest/testset.Optional.list<float>/reverse.Binary
go/RoundTripTest/testset.Optional.list<float>/reverse.Compact
go/RoundTripTest/testset.Terse.list<float>/reverse.Binary
go/RoundTripTest/testset.Terse.list<float>/reverse.Compact

#
# Go Data conformance roundtrip tests [SKIPPED]
go/RoundTripTest/testset.map<string,i32>/leading_spaceBinary
go/RoundTripTest/testset.Terse.map<i64,double>/zeroBinary
go/RoundTripTest/testset.Adapted.map<i64,i32>/minCompact
go/RoundTripTest/testset.Optional.map<string,float>/lowerCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/oneCompact
go/RoundTripTest/testset.FieldAdapted.list<adapted<byte>>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/zeroCompact
go/RoundTripTest/testset.Adapted.map<string,i16>/trailing_spaceBinary
go/RoundTripTest/testset.map<string,i32>/allBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/upperCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/lowerCompact
go/RoundTripTest/testset.map<i64,bool>/zeroCompact
go/RoundTripTest/testset.union.map<i64,i16>/maxCompact
go/RoundTripTest/map<i64,double>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<string,string>/upperBinary
go/RoundTripTest/testset.union.map<string,double>/spacesCompact
go/RoundTripTest/testset.union.map<string,double>/utf8Compact
go/RoundTripTest/testset.union.map<string,byte>/allBinary
go/RoundTripTest/testset.union.map<string,i64>/allBinary
go/RoundTripTest/testset.union.map<string,i64>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/allBinary
go/RoundTripTest/testset.Terse.map<string,float>/allBinary
go/RoundTripTest/testset.Optional.map<i64,i16>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,byte>/maxBinary
go/RoundTripTest/testset.Adapted.map<string,binary>/trailing_spaceCompact
go/RoundTripTest/testset.Optional.map<i64,double>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/allBinary
go/RoundTripTest/testset.union.map<i64,i16>/oneBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/zeroCompact
go/RoundTripTest/testset.Adapted.list<byte>/frontBinary
go/RoundTripTest/testset.list<byte>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/leading_spaceBinary
go/RoundTripTest/testset.map<string,bool>/spacesCompact
go/RoundTripTest/map<string,i32>/allCompact
go/RoundTripTest/testset.Optional.map<i64,byte>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,double>/minCompact
go/RoundTripTest/testset.map<string,i16>/leading_spaceBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/oneBinary
go/RoundTripTest/testset.Adapted.map<string,string>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.list<adapted<byte>>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/allBinary
go/RoundTripTest/testset.map<i64,i16>/zeroBinary
go/RoundTripTest/map<string,float>/spacesBinary
go/RoundTripTest/map<string,binary>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/minBinary
go/RoundTripTest/testset.Optional.map<string,string>/utf8Binary
go/RoundTripTest/testset.Optional.map<string,byte>/leading_spaceCompact
go/RoundTripTest/testset.Optional.map<string,binary>/spacesBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/minCompact
go/RoundTripTest/testset.FieldAdapted.list<i32>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/spacesBinary
go/RoundTripTest/testset.Terse.map<string,binary>/emptyBinary
go/RoundTripTest/map<string,string>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<string,float>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i16>/neg_oneBinary
go/RoundTripTest/testset.union.map<string,i16>/spacesCompact
go/RoundTripTest/testset.Optional.map<string,i64>/allCompact
go/RoundTripTest/testset.Adapted.map<string,i16>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/maxCompact
go/RoundTripTest/testset.Adapted.map<i64,byte>/maxCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/oneCompact
go/RoundTripTest/testset.Terse.map<i64,i32>/minBinary
go/RoundTripTest/testset.Optional.map<string,bool>/utf8Binary
go/RoundTripTest/testset.Terse.map<string,i32>/leading_spaceBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/minCompact
go/RoundTripTest/testset.Terse.map<i64,byte>/zeroCompact
go/RoundTripTest/testset.map<i64,double>/allCompact
go/RoundTripTest/map<string,i32>/leading_spaceCompact
go/RoundTripTest/testset.Optional.map<string,i64>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i16>/zeroBinary
go/RoundTripTest/map<string,string>/allBinary
go/RoundTripTest/testset.union.map<string,string>/utf8Compact
go/RoundTripTest/testset.Adapted.map<string,bool>/emptyCompact
go/RoundTripTest/map<i64,i64>/neg_oneBinary
go/RoundTripTest/testset.Adapted.map<string,i64>/utf8Binary
go/RoundTripTest/testset.map<string,byte>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/allCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/minCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/lowerCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/oneBinary
go/RoundTripTest/list<binary>/frontCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/emptyBinary
go/RoundTripTest/testset.Adapted.map<i64,binary>/minCompact
go/RoundTripTest/testset.union.list<i64>/frontBinary
go/RoundTripTest/testset.union.map<i64,byte>/minBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/allBinary
go/RoundTripTest/testset.Adapted.map<i64,i16>/zeroCompact
go/RoundTripTest/testset.Optional.map<i64,i64>/maxBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/oneBinary
go/RoundTripTest/testset.Optional.map<string,float>/spacesCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/upperBinary
go/RoundTripTest/testset.union.map<string,byte>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.list<string>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/leading_spaceBinary
go/RoundTripTest/testset.map<i64,double>/oneCompact
go/RoundTripTest/testset.Adapted.map<i64,i16>/maxCompact
go/RoundTripTest/map<string,i16>/allCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/allBinary
go/RoundTripTest/map<string,bool>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/zeroCompact
go/RoundTripTest/testset.Adapted.map<i64,byte>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/allCompact
go/RoundTripTest/testset.Adapted.map<i64,string>/oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/allBinary
go/RoundTripTest/testset.Terse.map<i64,byte>/allBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/maxBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/allCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/oneCompact
go/RoundTripTest/testset.Terse.map<i64,i64>/zeroCompact
go/RoundTripTest/testset.union.map<i64,string>/neg_oneCompact
go/RoundTripTest/testset.map<string,double>/leading_spaceCompact
go/RoundTripTest/testset.union.map<string,bool>/utf8Binary
go/RoundTripTest/testset.union.map<i64,i16>/maxBinary
go/RoundTripTest/testset.Adapted.map<string,float>/lowerCompact
go/RoundTripTest/testset.Terse.map<string,bool>/allCompact
go/RoundTripTest/testset.FieldAdapted.list<float>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/allCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/allCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<string,double>/leading_spaceBinary
go/RoundTripTest/testset.list<adapted<i64>>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/lowerBinary
go/RoundTripTest/testset.Terse.map<string,binary>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/neg_oneBinary
go/RoundTripTest/testset.Adapted.map<string,binary>/utf8Binary
go/RoundTripTest/testset.Adapted.map<string,byte>/allCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/leading_spaceCompact
go/RoundTripTest/map<string,string>/leading_spaceCompact
go/RoundTripTest/testset.map<i64,binary>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<string,string>/lowerBinary
go/RoundTripTest/map<i64,i16>/oneBinary
go/RoundTripTest/testset.Adapted.map<string,double>/utf8Binary
go/RoundTripTest/testset.Optional.list<float>/frontBinary
go/RoundTripTest/testset.list<adapted<float>>/frontBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/upperBinary
go/RoundTripTest/testset.map<i64,float>/oneCompact
go/RoundTripTest/map<string,float>/upperBinary
go/RoundTripTest/map<string,i32>/emptyCompact
go/RoundTripTest/testset.union.map<i64,i32>/minBinary
go/RoundTripTest/testset.map<string,bool>/utf8Compact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/trailing_spaceCompact
go/RoundTripTest/testset.Optional.map<string,i16>/emptyBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/allBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/emptyBinary
go/RoundTripTest/testset.Adapted.map<i64,byte>/minBinary
go/RoundTripTest/testset.map<i64,i64>/zeroCompact
go/RoundTripTest/testset.union.map<string,bool>/spacesBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/upperBinary
go/RoundTripTest/testset.map<string,i16>/allBinary
go/RoundTripTest/testset.Optional.map<i64,i32>/zeroBinary
go/RoundTripTest/testset.Optional.map<i64,binary>/minBinary
go/RoundTripTest/testset.Terse.map<string,byte>/utf8Binary
go/RoundTripTest/testset.Adapted.map<i64,i32>/zeroBinary
go/RoundTripTest/testset.Optional.map<string,double>/utf8Binary
go/RoundTripTest/map<i64,i16>/maxCompact
go/RoundTripTest/map<string,double>/utf8Compact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/neg_oneCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/zeroCompact
go/RoundTripTest/testset.union.map<i64,string>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/allCompact
go/RoundTripTest/testset.union.map<i64,binary>/allCompact
go/RoundTripTest/testset.Terse.map<i64,double>/oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/frontCompact
go/RoundTripTest/testset.Terse.map<string,i32>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<i64,float>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<string,float>/allBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/allBinary
go/RoundTripTest/testset.map<i64,bool>/oneCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/allBinary
go/RoundTripTest/testset.map<i64,i32>/minCompact
go/RoundTripTest/testset.union.map<i64,binary>/zeroCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/spacesCompact
go/RoundTripTest/map<string,byte>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/spacesCompact
go/RoundTripTest/testset.Terse.map<string,double>/utf8Compact
go/RoundTripTest/testset.Adapted.map<string,float>/lowerBinary
go/RoundTripTest/map<i64,i64>/oneBinary
go/RoundTripTest/testset.Terse.list<i16>/frontCompact
go/RoundTripTest/testset.Terse.map<string,bool>/lowerCompact
go/RoundTripTest/testset.Terse.map<string,string>/utf8Binary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<string,byte>/upperCompact
go/RoundTripTest/testset.Terse.map<string,float>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/upperCompact
go/RoundTripTest/testset.Adapted.map<i64,string>/zeroBinary
go/RoundTripTest/testset.Adapted.map<string,double>/lowerBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/lowerBinary
go/RoundTripTest/testset.map<i64,float>/neg_oneBinary
go/RoundTripTest/testset.Terse.map<string,binary>/utf8Binary
go/RoundTripTest/map<i64,float>/neg_oneBinary
go/RoundTripTest/testset.Adapted.map<i64,i32>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i16>/neg_oneCompact
go/RoundTripTest/testset.Terse.map<i64,i64>/maxBinary
go/RoundTripTest/testset.map<string,string>/allBinary
go/RoundTripTest/testset.map<i64,double>/maxCompact
go/RoundTripTest/testset.Adapted.map<i64,byte>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/allCompact
go/RoundTripTest/testset.Optional.map<i64,byte>/maxBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/utf8Compact
go/RoundTripTest/testset.union.map<i64,string>/minBinary
go/RoundTripTest/testset.Optional.map<i64,float>/zeroCompact
go/RoundTripTest/testset.Terse.map<i64,string>/maxCompact
go/RoundTripTest/testset.union.map<string,double>/emptyBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/oneCompact
go/RoundTripTest/testset.FieldAdapted.list<i64>/frontCompact
go/RoundTripTest/list<byte>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/allBinary
go/RoundTripTest/testset.Adapted.map<i64,double>/allBinary
go/RoundTripTest/map<i64,binary>/zeroCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/neg_oneBinary
go/RoundTripTest/testset.union.list<adapted<string>>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,float>/allBinary
go/RoundTripTest/testset.Terse.map<i64,i64>/allBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/leading_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/utf8Binary
go/RoundTripTest/testset.Terse.map<i64,byte>/zeroBinary
go/RoundTripTest/testset.union.map<string,binary>/spacesCompact
go/RoundTripTest/map<i64,i64>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/utf8Compact
go/RoundTripTest/testset.Optional.map<i64,i32>/maxBinary
go/RoundTripTest/testset.Adapted.map<string,bool>/leading_spaceBinary
go/RoundTripTest/map<string,byte>/emptyBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/emptyCompact
go/RoundTripTest/map<string,binary>/allBinary
go/RoundTripTest/map<i64,binary>/maxCompact
go/RoundTripTest/testset.map<string,float>/leading_spaceBinary
go/RoundTripTest/testset.union.map<i64,binary>/neg_oneCompact
go/RoundTripTest/testset.union.map<i64,double>/oneBinary
go/RoundTripTest/testset.Adapted.map<string,binary>/emptyBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/lowerBinary
go/RoundTripTest/map<i64,byte>/allBinary
go/RoundTripTest/testset.map<string,float>/emptyBinary
go/RoundTripTest/testset.Optional.map<string,string>/lowerBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<string,double>/utf8Compact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/spacesCompact
go/RoundTripTest/map<string,binary>/emptyBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<string,float>/trailing_spaceCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/oneCompact
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/utf8Binary
go/RoundTripTest/testset.Optional.map<string,i32>/lowerBinary
go/RoundTripTest/testset.Terse.map<string,byte>/emptyBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/leading_spaceCompact
go/RoundTripTest/testset.map<string,binary>/spacesBinary
go/RoundTripTest/testset.Terse.map<i64,string>/maxBinary
go/RoundTripTest/testset.map<string,binary>/lowerCompact
go/RoundTripTest/testset.Terse.list<double>/frontBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/upperCompact
go/RoundTripTest/testset.Optional.map<i64,bool>/oneCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/allCompact
go/RoundTripTest/testset.map<i64,string>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/lowerCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/spacesCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/leading_spaceBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/utf8Compact
go/RoundTripTest/testset.union.map<string,i16>/lowerCompact
go/RoundTripTest/testset.Optional.map<string,byte>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/emptyBinary
go/RoundTripTest/testset.union.map<i64,bool>/oneBinary
go/RoundTripTest/testset.union.map<string,binary>/leading_spaceCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/upperBinary
go/RoundTripTest/testset.Adapted.map<string,bool>/lowerBinary
go/RoundTripTest/map<i64,string>/neg_oneBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/zeroBinary
go/RoundTripTest/testset.Optional.map<i64,bool>/allBinary
go/RoundTripTest/testset.Optional.map<string,float>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/maxBinary
go/RoundTripTest/testset.Optional.map<i64,float>/maxCompact
go/RoundTripTest/map<string,bool>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/leading_spaceCompact
go/RoundTripTest/testset.Terse.map<string,bool>/spacesCompact
go/RoundTripTest/testset.Terse.map<string,string>/upperBinary
go/RoundTripTest/testset.union.map<string,bool>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.list<adapted<i32>>/frontCompact
go/RoundTripTest/testset.union.map<string,byte>/emptyCompact
go/RoundTripTest/testset.Adapted.map<i64,byte>/oneBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/upperCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/trailing_spaceBinary
go/RoundTripTest/testset.map<string,byte>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i64>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/leading_spaceCompact
go/RoundTripTest/testset.Terse.map<string,binary>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,string>/minCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/utf8Binary
go/RoundTripTest/testset.map<string,binary>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<i64,bool>/maxCompact
go/RoundTripTest/testset.Optional.map<i64,binary>/allCompact
go/RoundTripTest/testset.Adapted.map<i64,i16>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/upperCompact
go/RoundTripTest/testset.Terse.list<i32>/frontCompact
go/RoundTripTest/testset.Optional.map<i64,string>/minBinary
go/RoundTripTest/testset.Adapted.map<string,i16>/spacesBinary
go/RoundTripTest/testset.Optional.map<i64,bool>/neg_oneCompact
go/RoundTripTest/testset.union.map<i64,bool>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,string>/maxCompact
go/RoundTripTest/testset.Adapted.map<string,i64>/allBinary
go/RoundTripTest/testset.list<i32>/frontBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/leading_spaceCompact
go/RoundTripTest/testset.Terse.map<i64,byte>/maxBinary
go/RoundTripTest/testset.Adapted.list<adapted<i64>>/frontCompact
go/RoundTripTest/map<i64,bool>/oneBinary
go/RoundTripTest/map<string,i64>/lowerBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/trailing_spaceBinary
go/RoundTripTest/map<string,i16>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<string,float>/lowerCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/trailing_spaceCompact
go/RoundTripTest/map<string,binary>/utf8Binary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.list<string>/frontBinary
go/RoundTripTest/map<string,i16>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/upperBinary
go/RoundTripTest/testset.Terse.map<string,string>/emptyCompact
go/RoundTripTest/testset.union.map<i64,byte>/allCompact
go/RoundTripTest/testset.Adapted.list<i16>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/emptyCompact
go/RoundTripTest/testset.Optional.map<string,i16>/spacesBinary
go/RoundTripTest/testset.map<i64,bool>/allCompact
go/RoundTripTest/testset.map<string,bool>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/allCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/maxBinary
go/RoundTripTest/testset.Optional.map<string,i16>/upperBinary
go/RoundTripTest/testset.Adapted.map<string,i16>/upperBinary
go/RoundTripTest/testset.Adapted.map<i64,binary>/neg_oneCompact
go/RoundTripTest/testset.Optional.map<string,bool>/emptyCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/allBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/upperCompact
go/RoundTripTest/testset.Optional.map<string,byte>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,float>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i64>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<string,string>/lowerBinary
go/RoundTripTest/testset.Optional.map<i64,float>/minCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/allBinary
go/RoundTripTest/testset.Terse.map<string,i32>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<i64,float>/neg_oneBinary
go/RoundTripTest/testset.Adapted.list<i16>/frontBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/oneBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/allCompact
go/RoundTripTest/testset.Adapted.map<string,byte>/trailing_spaceCompact
go/RoundTripTest/map<i64,float>/maxCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/leading_spaceCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/allCompact
go/RoundTripTest/testset.Adapted.list<i32>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/spacesCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/trailing_spaceBinary
go/RoundTripTest/testset.map<i64,i64>/minBinary
go/RoundTripTest/testset.Adapted.map<i64,string>/maxBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/emptyCompact
go/RoundTripTest/map<string,binary>/upperCompact
go/RoundTripTest/map<string,bool>/allBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/minCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/leading_spaceBinary
go/RoundTripTest/map<string,i64>/utf8Binary
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/maxCompact
go/RoundTripTest/testset.Adapted.map<string,binary>/spacesCompact
go/RoundTripTest/map<string,double>/spacesBinary
go/RoundTripTest/testset.Terse.map<i64,binary>/minBinary
go/RoundTripTest/testset.Optional.map<string,bool>/trailing_spaceBinary
go/RoundTripTest/testset.map<string,bool>/upperBinary
go/RoundTripTest/testset.Optional.list<i64>/frontCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/allBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/trailing_spaceBinary
go/RoundTripTest/testset.list<double>/frontBinary
go/RoundTripTest/testset.map<i64,i16>/allBinary
go/RoundTripTest/testset.map<string,string>/spacesCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/utf8Binary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/trailing_spaceBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/emptyCompact
go/RoundTripTest/testset.map<string,bool>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/allBinary
go/RoundTripTest/testset.Adapted.map<string,float>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i16>/allBinary
go/RoundTripTest/testset.map<i64,float>/oneBinary
go/RoundTripTest/map<string,double>/emptyBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/neg_oneCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/allCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/leading_spaceBinary
go/RoundTripTest/testset.FieldAdapted.list<double>/frontCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/minCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/utf8Compact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/oneBinary
go/RoundTripTest/testset.Optional.map<i64,float>/neg_oneBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/allBinary
go/RoundTripTest/testset.Optional.map<string,binary>/utf8Compact
go/RoundTripTest/testset.map<string,i32>/spacesCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/utf8Binary
go/RoundTripTest/testset.union.list<adapted<float>>/frontBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/oneBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/lowerCompact
go/RoundTripTest/testset.map<i64,i32>/neg_oneBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/lowerCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/oneCompact
go/RoundTripTest/testset.union.map<i64,i64>/neg_oneCompact
go/RoundTripTest/map<string,bool>/emptyBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/oneBinary
go/RoundTripTest/testset.union.map<string,i32>/emptyCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<i64,i64>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/trailing_spaceBinary
go/RoundTripTest/testset.Optional.map<string,double>/lowerCompact
go/RoundTripTest/testset.union.map<i64,bool>/minBinary
go/RoundTripTest/testset.Optional.map<i64,i16>/neg_oneBinary
go/RoundTripTest/testset.union.map<string,binary>/allBinary
go/RoundTripTest/testset.Terse.map<i64,bool>/zeroCompact
go/RoundTripTest/map<string,float>/utf8Binary
go/RoundTripTest/testset.list<adapted<double>>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/neg_oneBinary
go/RoundTripTest/testset.map<string,string>/upperCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,byte>/oneBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/emptyBinary
go/RoundTripTest/testset.map<string,string>/leading_spaceBinary
go/RoundTripTest/testset.Optional.map<string,bool>/trailing_spaceCompact
go/RoundTripTest/map<string,i32>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/minCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/allCompact
go/RoundTripTest/testset.Optional.map<i64,i16>/neg_oneCompact
go/RoundTripTest/testset.map<string,byte>/leading_spaceCompact
go/RoundTripTest/testset.union.map<string,float>/lowerCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/allCompact
go/RoundTripTest/testset.Optional.map<i64,byte>/maxCompact
go/RoundTripTest/map<string,bool>/upperBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,byte>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/utf8Compact
go/RoundTripTest/testset.Terse.map<string,byte>/spacesBinary
go/RoundTripTest/testset.map<i64,string>/maxCompact
go/RoundTripTest/list<string>/frontCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.list<adapted<double>>/frontBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/upperBinary
go/RoundTripTest/testset.union.map<i64,i64>/maxCompact
go/RoundTripTest/testset.union.map<string,i16>/emptyBinary
go/RoundTripTest/map<i64,i64>/oneCompact
go/RoundTripTest/map<string,byte>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/allBinary
go/RoundTripTest/testset.Terse.map<i64,string>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/allBinary
go/RoundTripTest/testset.union.map<string,double>/leading_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/spacesCompact
go/RoundTripTest/map<string,bool>/upperCompact
go/RoundTripTest/testset.Optional.map<i64,string>/neg_oneBinary
go/RoundTripTest/testset.union.list<double>/frontCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/zeroBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/spacesBinary
go/RoundTripTest/testset.map<string,string>/emptyCompact
go/RoundTripTest/testset.union.map<string,binary>/trailing_spaceCompact
go/RoundTripTest/map<i64,i16>/zeroCompact
go/RoundTripTest/testset.map<string,byte>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/lowerCompact
go/RoundTripTest/testset.Adapted.map<i64,i32>/zeroCompact
go/RoundTripTest/testset.Optional.map<string,i64>/lowerCompact
go/RoundTripTest/testset.Adapted.list<adapted<i64>>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/allCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<string,double>/spacesBinary
go/RoundTripTest/testset.Optional.map<i64,i64>/oneCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/spacesBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/lowerCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/upperCompact
go/RoundTripTest/testset.map<i64,float>/neg_oneCompact
go/RoundTripTest/testset.Optional.map<string,i32>/allCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/neg_oneCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/allCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/maxCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/allCompact
go/RoundTripTest/testset.FieldAdapted.list<binary>/frontCompact
go/RoundTripTest/testset.map<i64,i32>/minBinary
go/RoundTripTest/testset.Optional.map<string,binary>/allBinary
go/RoundTripTest/testset.map<string,string>/lowerBinary
go/RoundTripTest/testset.Terse.map<string,double>/utf8Binary
go/RoundTripTest/testset.Adapted.map<i64,double>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,string>/allBinary
go/RoundTripTest/testset.Terse.map<string,i64>/allBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/neg_oneBinary
go/RoundTripTest/testset.map<i64,i32>/maxBinary
go/RoundTripTest/testset.union.map<i64,double>/allBinary
go/RoundTripTest/testset.union.map<string,string>/spacesBinary
go/RoundTripTest/testset.list<adapted<float>>/frontCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/trailing_spaceCompact
go/RoundTripTest/map<string,binary>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<string,float>/emptyBinary
go/RoundTripTest/map<string,double>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/oneCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/allCompact
go/RoundTripTest/map<i64,float>/oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/emptyBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/minCompact
go/RoundTripTest/testset.map<i64,byte>/maxCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/zeroCompact
go/RoundTripTest/testset.map<i64,string>/minCompact
go/RoundTripTest/map<string,string>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/zeroBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/utf8Compact
go/RoundTripTest/testset.Adapted.list<adapted<double>>/frontCompact
go/RoundTripTest/testset.union.map<i64,i32>/zeroCompact
go/RoundTripTest/testset.union.map<string,float>/utf8Compact
go/RoundTripTest/testset.Adapted.map<string,i32>/spacesBinary
go/RoundTripTest/testset.Optional.map<string,double>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/leading_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<i64,byte>/zeroBinary
go/RoundTripTest/map<i64,i32>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/spacesBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/maxCompact
go/RoundTripTest/testset.Adapted.map<string,byte>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i16>/allCompact
go/RoundTripTest/testset.Terse.map<i64,binary>/maxCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/allCompact
go/RoundTripTest/testset.map<i64,bool>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,double>/oneBinary
go/RoundTripTest/testset.Adapted.list<adapted<binary>>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<string,string>/utf8Binary
go/RoundTripTest/testset.Adapted.map<string,binary>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/leading_spaceCompact
go/RoundTripTest/map<i64,binary>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/utf8Binary
go/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/maxCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/utf8Compact
go/RoundTripTest/testset.Adapted.map<i64,i16>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/zeroCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/zeroCompact
go/RoundTripTest/testset.Optional.map<string,byte>/leading_spaceBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/minBinary
go/RoundTripTest/testset.Terse.map<string,double>/leading_spaceCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/leading_spaceCompact
go/RoundTripTest/testset.Optional.map<string,binary>/upperCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/utf8Compact
go/RoundTripTest/testset.Terse.map<string,byte>/spacesCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/zeroCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/leading_spaceCompact
go/RoundTripTest/testset.Optional.map<i64,binary>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,string>/zeroCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/minBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/oneCompact
go/RoundTripTest/testset.Adapted.map<string,string>/leading_spaceCompact
go/RoundTripTest/testset.map<string,i32>/upperBinary
go/RoundTripTest/testset.Adapted.map<string,i64>/spacesBinary
go/RoundTripTest/map<i64,byte>/oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,binary>/maxBinary
go/RoundTripTest/testset.union.map<i64,double>/zeroCompact
go/RoundTripTest/testset.union.map<string,bool>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<string,i32>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/upperCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/utf8Compact
go/RoundTripTest/testset.map<string,binary>/emptyCompact
go/RoundTripTest/testset.Optional.map<string,i16>/allBinary
go/RoundTripTest/testset.Terse.map<i64,i16>/maxCompact
go/RoundTripTest/testset.Terse.map<i64,i16>/zeroCompact
go/RoundTripTest/map<string,double>/allCompact
go/RoundTripTest/testset.Adapted.map<string,i32>/trailing_spaceCompact
go/RoundTripTest/testset.Terse.map<i64,binary>/maxBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/allCompact
go/RoundTripTest/testset.union.list<string>/frontCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/spacesCompact
go/RoundTripTest/testset.union.map<i64,bool>/oneCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/allBinary
go/RoundTripTest/testset.map<i64,double>/neg_oneBinary
go/RoundTripTest/testset.map<string,float>/emptyCompact
go/RoundTripTest/map<string,float>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/allBinary
go/RoundTripTest/list<i64>/frontCompact
go/RoundTripTest/testset.list<string>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/lowerCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/zeroCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/trailing_spaceCompact
go/RoundTripTest/testset.Terse.map<string,i64>/trailing_spaceCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/maxBinary
go/RoundTripTest/testset.Adapted.map<string,string>/utf8Binary
go/RoundTripTest/testset.map<string,float>/upperBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/minCompact
go/RoundTripTest/testset.Adapted.map<i64,i32>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/minCompact
go/RoundTripTest/testset.Optional.map<string,i64>/spacesBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/allBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/trailing_spaceBinary
go/RoundTripTest/testset.map<i64,binary>/oneCompact
go/RoundTripTest/testset.union.map<i64,double>/maxBinary
go/RoundTripTest/testset.union.map<string,float>/spacesBinary
go/RoundTripTest/testset.union.map<string,string>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/maxCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/allCompact
go/RoundTripTest/testset.union.map<string,binary>/lowerBinary
go/RoundTripTest/map<string,binary>/spacesCompact
go/RoundTripTest/testset.map<i64,bool>/maxCompact
go/RoundTripTest/testset.Adapted.map<string,float>/allCompact
go/RoundTripTest/testset.list<adapted<byte>>/frontCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/minBinary
go/RoundTripTest/testset.union.map<i64,byte>/minCompact
go/RoundTripTest/map<string,double>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<i64,bool>/allBinary
go/RoundTripTest/testset.union.list<i32>/frontCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/maxBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/neg_oneCompact
go/RoundTripTest/testset.Optional.map<string,double>/emptyBinary
go/RoundTripTest/testset.Optional.map<string,i64>/upperCompact
go/RoundTripTest/testset.Adapted.map<string,binary>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/zeroBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<string,string>/spacesCompact
go/RoundTripTest/testset.Adapted.map<i64,byte>/minCompact
go/RoundTripTest/testset.Adapted.map<string,i32>/emptyBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/utf8Binary
go/RoundTripTest/map<i64,bool>/allCompact
go/RoundTripTest/testset.union.list<i16>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/utf8Compact
go/RoundTripTest/testset.map<i64,binary>/minCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/upperBinary
go/RoundTripTest/testset.union.map<string,byte>/lowerCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<string,string>/emptyCompact
go/RoundTripTest/map<string,double>/upperCompact
go/RoundTripTest/map<i64,i64>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/spacesCompact
go/RoundTripTest/map<i64,byte>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,float>/maxBinary
go/RoundTripTest/testset.Terse.map<string,float>/utf8Binary
go/RoundTripTest/testset.list<i64>/frontCompact
go/RoundTripTest/map<i64,i16>/allBinary
go/RoundTripTest/testset.Adapted.map<string,binary>/emptyCompact
go/RoundTripTest/testset.Optional.list<byte>/frontBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/spacesCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/allBinary
go/RoundTripTest/testset.union.list<adapted<i64>>/frontBinary
go/RoundTripTest/testset.union.map<i64,bool>/maxBinary
go/RoundTripTest/testset.Terse.map<string,i64>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/emptyBinary
go/RoundTripTest/testset.Optional.map<string,float>/emptyBinary
go/RoundTripTest/testset.union.map<i64,i16>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,binary>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/spacesBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/leading_spaceBinary
go/RoundTripTest/testset.Terse.map<string,binary>/lowerBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,binary>/oneCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,bool>/zeroBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/leading_spaceCompact
go/RoundTripTest/testset.Terse.map<i64,i64>/neg_oneBinary
go/RoundTripTest/testset.union.map<i64,bool>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<string,string>/trailing_spaceCompact
go/RoundTripTest/testset.Optional.map<string,float>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/neg_oneBinary
go/RoundTripTest/testset.map<i64,binary>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/neg_oneCompact
go/RoundTripTest/testset.map<i64,byte>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,double>/allCompact
go/RoundTripTest/testset.Optional.map<string,binary>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/lowerCompact
go/RoundTripTest/testset.list<adapted<double>>/frontBinary
go/RoundTripTest/testset.map<string,double>/upperBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,byte>/maxCompact
go/RoundTripTest/testset.union.map<i64,binary>/maxBinary
go/RoundTripTest/testset.union.map<i64,i16>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/lowerBinary
go/RoundTripTest/testset.union.map<i64,i32>/allBinary
go/RoundTripTest/map<i64,byte>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,bool>/neg_oneCompact
go/RoundTripTest/map<string,i16>/leading_spaceBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/maxCompact
go/RoundTripTest/map<i64,i64>/neg_oneCompact
go/RoundTripTest/map<string,double>/lowerBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/minCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/minCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/emptyBinary
go/RoundTripTest/testset.map<i64,i32>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i32>/maxCompact
go/RoundTripTest/map<i64,float>/allCompact
go/RoundTripTest/testset.union.list<byte>/frontCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/allBinary
go/RoundTripTest/map<string,byte>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/spacesBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/leading_spaceBinary
go/RoundTripTest/map<i64,i32>/zeroCompact
go/RoundTripTest/testset.Optional.map<string,byte>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.list<double>/frontBinary
go/RoundTripTest/list<float>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i32>/neg_oneCompact
go/RoundTripTest/map<i64,i64>/zeroCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/minBinary
go/RoundTripTest/testset.Terse.map<string,i32>/allCompact
go/RoundTripTest/testset.union.map<string,byte>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/lowerCompact
go/RoundTripTest/testset.Adapted.map<string,double>/utf8Compact
go/RoundTripTest/testset.map<i64,i16>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/upperCompact
go/RoundTripTest/testset.map<string,double>/emptyBinary
go/RoundTripTest/testset.union.map<i64,i16>/zeroBinary
go/RoundTripTest/testset.Optional.map<string,i16>/trailing_spaceBinary
go/RoundTripTest/testset.Optional.map<i64,byte>/allBinary
go/RoundTripTest/testset.Terse.map<string,float>/emptyBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i16>/maxBinary
go/RoundTripTest/testset.Terse.map<i64,i64>/oneBinary
go/RoundTripTest/testset.map<string,byte>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.list<float>/frontBinary
go/RoundTripTest/testset.map<string,string>/utf8Binary
go/RoundTripTest/testset.map<i64,i64>/minCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/neg_oneBinary
go/RoundTripTest/testset.Terse.map<i64,i16>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,bool>/zeroCompact
go/RoundTripTest/testset.Adapted.map<i64,string>/allBinary
go/RoundTripTest/testset.Adapted.map<i64,binary>/maxBinary
go/RoundTripTest/testset.map<i64,i16>/oneBinary
go/RoundTripTest/map<i64,i16>/neg_oneCompact
go/RoundTripTest/testset.Terse.map<string,double>/trailing_spaceBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/emptyBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/zeroCompact
go/RoundTripTest/testset.Adapted.list<binary>/frontCompact
go/RoundTripTest/testset.union.map<string,bool>/emptyBinary
go/RoundTripTest/testset.Terse.map<i64,bool>/oneCompact
go/RoundTripTest/testset.Terse.map<i64,binary>/neg_oneBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/oneCompact
go/RoundTripTest/testset.map<string,binary>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/allCompact
go/RoundTripTest/testset.map<i64,i64>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/neg_oneCompact
go/RoundTripTest/testset.Terse.map<i64,byte>/neg_oneCompact
go/RoundTripTest/testset.map<string,i64>/upperCompact
go/RoundTripTest/testset.Adapted.map<i64,double>/oneBinary
go/RoundTripTest/testset.Terse.map<i64,binary>/oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i16>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/oneBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/spacesCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/maxCompact
go/RoundTripTest/map<string,byte>/allBinary
go/RoundTripTest/testset.Adapted.list<adapted<byte>>/frontCompact
go/RoundTripTest/testset.Optional.map<i64,string>/minCompact
go/RoundTripTest/testset.Terse.map<string,string>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<i64,i64>/neg_oneCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<string,string>/allCompact
go/RoundTripTest/testset.Terse.map<string,binary>/allCompact
go/RoundTripTest/testset.list<byte>/frontCompact
go/RoundTripTest/testset.Optional.map<i64,i32>/neg_oneBinary
go/RoundTripTest/testset.Terse.map<i64,float>/oneBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<string,float>/allCompact
go/RoundTripTest/testset.map<i64,bool>/maxBinary
go/RoundTripTest/testset.map<string,bool>/lowerCompact
go/RoundTripTest/testset.Adapted.map<i64,i64>/neg_oneBinary
go/RoundTripTest/testset.Adapted.map<i64,binary>/allBinary
go/RoundTripTest/testset.Adapted.map<i64,i16>/zeroBinary
go/RoundTripTest/testset.Terse.map<i64,float>/neg_oneCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/maxCompact
go/RoundTripTest/testset.map<i64,bool>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,bool>/allBinary
go/RoundTripTest/testset.Adapted.map<i64,binary>/maxCompact
go/RoundTripTest/testset.Optional.map<i64,byte>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/trailing_spaceBinary
go/RoundTripTest/testset.Optional.map<i64,double>/minCompact
go/RoundTripTest/testset.union.map<i64,i64>/zeroBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/upperCompact
go/RoundTripTest/testset.union.map<string,byte>/trailing_spaceBinary
go/RoundTripTest/testset.Terse.map<string,bool>/emptyCompact
go/RoundTripTest/testset.Optional.list<float>/frontCompact
go/RoundTripTest/testset.Terse.map<string,float>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/minCompact
go/RoundTripTest/testset.Terse.map<string,i64>/lowerBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/minBinary
go/RoundTripTest/testset.union.map<i64,string>/maxBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/emptyCompact
go/RoundTripTest/testset.union.map<string,i32>/leading_spaceCompact
go/RoundTripTest/testset.map<i64,i32>/allCompact
go/RoundTripTest/testset.Optional.map<i64,float>/oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/leading_spaceBinary
go/RoundTripTest/testset.Optional.map<string,double>/allBinary
go/RoundTripTest/map<i64,float>/minBinary
go/RoundTripTest/testset.union.map<i64,binary>/maxCompact
go/RoundTripTest/testset.map<string,string>/allCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/emptyBinary
go/RoundTripTest/map<string,i32>/lowerCompact
go/RoundTripTest/testset.Optional.map<i64,double>/neg_oneBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/emptyCompact
go/RoundTripTest/testset.Terse.map<string,byte>/lowerCompact
go/RoundTripTest/testset.Adapted.map<string,float>/trailing_spaceBinary
go/RoundTripTest/map<string,i32>/lowerBinary
go/RoundTripTest/testset.Terse.map<i64,float>/minCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/utf8Compact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/allBinary
go/RoundTripTest/testset.Terse.map<i64,i16>/minCompact
go/RoundTripTest/map<i64,byte>/allCompact
go/RoundTripTest/testset.Optional.map<string,float>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/allCompact
go/RoundTripTest/testset.union.list<adapted<i32>>/frontCompact
go/RoundTripTest/testset.union.map<i64,byte>/maxBinary
go/RoundTripTest/testset.Terse.map<string,i64>/leading_spaceCompact
go/RoundTripTest/map<string,bool>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/minBinary
go/RoundTripTest/testset.Optional.map<string,float>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/oneCompact
go/RoundTripTest/testset.Adapted.map<string,bool>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/upperBinary
go/RoundTripTest/testset.Optional.map<i64,string>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<string,i16>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<i64,i16>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/spacesCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/spacesCompact
go/RoundTripTest/testset.Adapted.map<i64,string>/oneBinary
go/RoundTripTest/testset.Adapted.map<string,i32>/allBinary
go/RoundTripTest/testset.Terse.map<i64,bool>/oneBinary
go/RoundTripTest/testset.Terse.map<string,i64>/upperCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/leading_spaceCompact
go/RoundTripTest/testset.map<i64,byte>/minCompact
go/RoundTripTest/testset.map<string,i16>/allCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/spacesBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/lowerBinary
go/RoundTripTest/testset.union.map<i64,binary>/minCompact
go/RoundTripTest/testset.Terse.map<string,binary>/utf8Compact
go/RoundTripTest/testset.Optional.map<i64,double>/zeroBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/oneBinary
go/RoundTripTest/testset.Terse.map<i64,i16>/zeroBinary
go/RoundTripTest/testset.map<string,double>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/allCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/upperBinary
go/RoundTripTest/testset.Adapted.map<string,bool>/spacesCompact
go/RoundTripTest/map<string,i32>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/neg_oneBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/minBinary
go/RoundTripTest/testset.map<i64,string>/neg_oneCompact
go/RoundTripTest/testset.union.map<string,bool>/lowerBinary
go/RoundTripTest/testset.Optional.list<binary>/frontCompact
go/RoundTripTest/testset.union.map<string,bool>/allCompact
go/RoundTripTest/testset.Terse.map<string,double>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/emptyBinary
go/RoundTripTest/testset.Optional.map<i64,byte>/minCompact
go/RoundTripTest/testset.Terse.map<string,bool>/emptyBinary
go/RoundTripTest/testset.union.map<string,double>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i64>/maxCompact
go/RoundTripTest/testset.Optional.map<string,float>/upperBinary
go/RoundTripTest/testset.Terse.map<string,i16>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/allBinary
go/RoundTripTest/testset.Adapted.map<i64,binary>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/allCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/allCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,float>/zeroBinary
go/RoundTripTest/testset.Optional.map<i64,string>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/trailing_spaceBinary
go/RoundTripTest/testset.Optional.map<string,i32>/emptyBinary
go/RoundTripTest/testset.Optional.map<string,i64>/leading_spaceCompact
go/RoundTripTest/testset.map<i64,i16>/minCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/lowerBinary
go/RoundTripTest/map<i64,byte>/minBinary
go/RoundTripTest/testset.Optional.map<i64,binary>/oneBinary
go/RoundTripTest/testset.map<string,string>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/allCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/emptyBinary
go/RoundTripTest/testset.Terse.map<string,byte>/leading_spaceBinary
go/RoundTripTest/map<i64,binary>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,string>/oneCompact
go/RoundTripTest/testset.Optional.map<string,bool>/lowerBinary
go/RoundTripTest/testset.map<string,i64>/allCompact
go/RoundTripTest/testset.Adapted.map<string,i16>/allBinary
go/RoundTripTest/map<i64,float>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<string,float>/leading_spaceCompact
go/RoundTripTest/testset.Optional.map<i64,i64>/allBinary
go/RoundTripTest/testset.union.map<string,i32>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/leading_spaceBinary
go/RoundTripTest/testset.Terse.map<i64,double>/neg_oneBinary
go/RoundTripTest/map<i64,i32>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/oneCompact
go/RoundTripTest/testset.Optional.map<i64,i32>/allCompact
go/RoundTripTest/testset.Terse.map<i64,byte>/minBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/zeroBinary
go/RoundTripTest/map<i64,i64>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/emptyBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/utf8Binary
go/RoundTripTest/testset.map<i64,byte>/minBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/zeroCompact
go/RoundTripTest/testset.union.map<i64,byte>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/zeroCompact
go/RoundTripTest/map<string,i32>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i16>/oneCompact
go/RoundTripTest/testset.map<string,i16>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/spacesBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/minBinary
go/RoundTripTest/testset.union.map<string,double>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/utf8Binary
go/RoundTripTest/testset.map<string,string>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<string,bool>/utf8Compact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,binary>/neg_oneBinary
go/RoundTripTest/testset.Terse.map<i64,binary>/minCompact
go/RoundTripTest/testset.map<string,i32>/trailing_spaceCompact
go/RoundTripTest/testset.map<string,byte>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/oneBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/lowerBinary
go/RoundTripTest/testset.union.map<i64,bool>/maxCompact
go/RoundTripTest/testset.Terse.map<i64,binary>/neg_oneCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/upperCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/spacesBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/minBinary
go/RoundTripTest/map<string,i64>/allBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/upperCompact
go/RoundTripTest/map<string,string>/spacesBinary
go/RoundTripTest/testset.map<string,byte>/upperBinary
go/RoundTripTest/testset.Optional.map<i64,bool>/zeroCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/trailing_spaceBinary
go/RoundTripTest/testset.Optional.map<i64,float>/minBinary
go/RoundTripTest/testset.Terse.map<string,string>/spacesCompact
go/RoundTripTest/list<i16>/frontCompact
go/RoundTripTest/map<string,i64>/spacesBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/leading_spaceBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/leading_spaceCompact
go/RoundTripTest/map<string,i16>/spacesBinary
go/RoundTripTest/testset.map<i64,i32>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/spacesBinary
go/RoundTripTest/testset.Adapted.map<string,i64>/trailing_spaceBinary
go/RoundTripTest/testset.map<i64,float>/allBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/utf8Binary
go/RoundTripTest/testset.union.map<string,i32>/spacesCompact
go/RoundTripTest/map<string,byte>/leading_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/spacesCompact
go/RoundTripTest/testset.map<i64,double>/maxBinary
go/RoundTripTest/map<string,float>/emptyCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/allCompact
go/RoundTripTest/testset.Optional.map<i64,double>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/oneCompact
go/RoundTripTest/testset.Terse.map<string,string>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/leading_spaceCompact
go/RoundTripTest/testset.Optional.map<string,i64>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<i64,i64>/maxCompact
go/RoundTripTest/testset.Optional.map<i64,binary>/neg_oneBinary
go/RoundTripTest/testset.Optional.list<i32>/frontCompact
go/RoundTripTest/testset.Adapted.map<i64,binary>/zeroCompact
go/RoundTripTest/testset.map<i64,byte>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/allCompact
go/RoundTripTest/testset.Optional.map<string,i64>/utf8Compact
go/RoundTripTest/map<string,binary>/allCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/minCompact
go/RoundTripTest/testset.union.map<string,binary>/leading_spaceBinary
go/RoundTripTest/testset.union.map<string,i16>/lowerBinary
go/RoundTripTest/testset.union.map<string,i64>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/lowerBinary
go/RoundTripTest/map<i64,double>/oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/minBinary
go/RoundTripTest/testset.Adapted.map<string,byte>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/leading_spaceBinary
go/RoundTripTest/testset.map<string,i32>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/minBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/zeroBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,double>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/utf8Binary
go/RoundTripTest/testset.Adapted.map<i64,byte>/neg_oneCompact
go/RoundTripTest/testset.union.map<string,binary>/spacesBinary
go/RoundTripTest/testset.Terse.map<i64,i32>/allBinary
go/RoundTripTest/map<i64,bool>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/emptyBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<i64,string>/oneBinary
go/RoundTripTest/map<i64,string>/maxCompact
go/RoundTripTest/testset.Adapted.map<string,double>/leading_spaceBinary
go/RoundTripTest/testset.Optional.map<i64,byte>/oneCompact
go/RoundTripTest/testset.union.list<adapted<float>>/frontCompact
go/RoundTripTest/testset.Optional.map<i64,float>/maxBinary
go/RoundTripTest/testset.map<i64,i16>/minBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/maxCompact
go/RoundTripTest/testset.Adapted.map<i64,float>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/utf8Compact
go/RoundTripTest/testset.Adapted.map<string,double>/upperCompact
go/RoundTripTest/testset.Terse.map<i64,i16>/maxBinary
go/RoundTripTest/testset.Terse.map<string,float>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/maxCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/leading_spaceCompact
go/RoundTripTest/testset.union.map<string,string>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<string,byte>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/utf8Compact
go/RoundTripTest/testset.union.map<i64,i64>/maxBinary
go/RoundTripTest/testset.Optional.map<string,binary>/upperBinary
go/RoundTripTest/testset.Terse.map<string,float>/emptyCompact
go/RoundTripTest/testset.Optional.map<string,i32>/utf8Compact
go/RoundTripTest/testset.Adapted.map<string,i16>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/lowerBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/oneCompact
go/RoundTripTest/map<string,i16>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/upperBinary
go/RoundTripTest/map<i64,double>/allBinary
go/RoundTripTest/map<i64,i32>/oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<i64,bool>/minBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i32>/oneBinary
go/RoundTripTest/testset.union.map<i64,i32>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/upperCompact
go/RoundTripTest/testset.map<i64,binary>/maxCompact
go/RoundTripTest/map<string,float>/allBinary
go/RoundTripTest/testset.map<i64,byte>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/maxBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/zeroCompact
go/RoundTripTest/testset.Adapted.map<i64,double>/maxBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/upperBinary
go/RoundTripTest/testset.Terse.map<i64,bool>/maxBinary
go/RoundTripTest/map<string,binary>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/leading_spaceBinary
go/RoundTripTest/testset.Terse.map<string,string>/spacesBinary
go/RoundTripTest/map<i64,double>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<i64,bool>/oneBinary
go/RoundTripTest/testset.map<string,binary>/upperCompact
go/RoundTripTest/testset.Optional.map<string,double>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/allBinary
go/RoundTripTest/testset.Optional.map<i64,i16>/maxBinary
go/RoundTripTest/testset.list<adapted<i16>>/frontBinary
go/RoundTripTest/testset.Adapted.map<string,string>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<i64,binary>/maxCompact
go/RoundTripTest/testset.map<i64,i64>/zeroBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/allBinary
go/RoundTripTest/testset.Adapted.map<i64,bool>/zeroCompact
go/RoundTripTest/testset.map<i64,i64>/neg_oneCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<string,string>/utf8Compact
go/RoundTripTest/testset.Optional.map<string,i32>/utf8Binary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/utf8Compact
go/RoundTripTest/map<i64,bool>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,float>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i64>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/trailing_spaceBinary
go/RoundTripTest/testset.Optional.map<i64,bool>/minCompact
go/RoundTripTest/testset.union.map<string,i32>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,bool>/maxBinary
go/RoundTripTest/testset.map<string,binary>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<string,double>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,float>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<i64,double>/oneCompact
go/RoundTripTest/map<i64,i16>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,binary>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/emptyCompact
go/RoundTripTest/testset.Optional.map<string,i32>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/emptyCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/lowerBinary
go/RoundTripTest/testset.Terse.map<string,i32>/upperBinary
go/RoundTripTest/testset.map<string,i64>/utf8Binary
go/RoundTripTest/testset.union.map<i64,byte>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/utf8Binary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/oneCompact
go/RoundTripTest/testset.Terse.map<string,bool>/upperBinary
go/RoundTripTest/testset.Terse.map<string,binary>/emptyCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/allBinary
go/RoundTripTest/testset.Optional.map<string,double>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/upperCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/spacesBinary
go/RoundTripTest/testset.Adapted.map<i64,string>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/minBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<i64,double>/oneCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<string,binary>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/minBinary
go/RoundTripTest/testset.union.map<i64,string>/oneBinary
go/RoundTripTest/testset.union.map<string,float>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<string,double>/lowerCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/lowerBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/oneBinary
go/RoundTripTest/testset.Terse.map<string,i64>/utf8Compact
go/RoundTripTest/testset.map<string,string>/utf8Compact
go/RoundTripTest/testset.Optional.map<i64,double>/oneBinary
go/RoundTripTest/testset.map<string,i32>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,bool>/allCompact
go/RoundTripTest/testset.union.map<i64,string>/zeroCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/emptyBinary
go/RoundTripTest/testset.Optional.map<string,bool>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/utf8Binary
go/RoundTripTest/testset.union.map<string,float>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/upperBinary
go/RoundTripTest/testset.Terse.map<i64,i32>/maxBinary
go/RoundTripTest/testset.Adapted.list<i64>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/leading_spaceCompact
go/RoundTripTest/testset.Optional.map<string,double>/spacesBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/allCompact
go/RoundTripTest/testset.union.map<i64,binary>/minBinary
go/RoundTripTest/map<i64,bool>/minBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/neg_oneCompact
go/RoundTripTest/testset.Terse.map<string,i32>/utf8Compact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/neg_oneBinary
go/RoundTripTest/testset.Terse.map<string,float>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<i64,bool>/zeroBinary
go/RoundTripTest/map<i64,double>/minBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/leading_spaceBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/minBinary
go/RoundTripTest/testset.map<string,binary>/emptyBinary
go/RoundTripTest/testset.map<string,i64>/leading_spaceCompact
go/RoundTripTest/testset.union.map<i64,binary>/oneCompact
go/RoundTripTest/testset.union.map<i64,double>/zeroBinary
go/RoundTripTest/testset.union.map<string,i64>/emptyCompact
go/RoundTripTest/testset.Adapted.map<string,bool>/allBinary
go/RoundTripTest/map<i64,double>/maxCompact
go/RoundTripTest/list<byte>/frontBinary
go/RoundTripTest/testset.map<string,i32>/utf8Compact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/upperCompact
go/RoundTripTest/testset.union.map<string,double>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/emptyBinary
go/RoundTripTest/map<string,float>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/oneBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/spacesBinary
go/RoundTripTest/testset.Terse.map<i64,binary>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,byte>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<string,double>/allCompact
go/RoundTripTest/testset.Optional.map<string,binary>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/maxBinary
go/RoundTripTest/testset.union.map<string,i64>/spacesCompact
go/RoundTripTest/testset.Terse.map<string,float>/leading_spaceCompact
go/RoundTripTest/map<i64,i16>/neg_oneBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/neg_oneCompact
go/RoundTripTest/testset.map<string,double>/spacesCompact
go/RoundTripTest/testset.union.map<i64,string>/maxCompact
go/RoundTripTest/testset.map<string,i16>/utf8Compact
go/RoundTripTest/testset.Terse.map<i64,string>/allBinary
go/RoundTripTest/testset.Terse.map<string,bool>/lowerBinary
go/RoundTripTest/map<string,i32>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.list<adapted<string>>/frontBinary
go/RoundTripTest/testset.Adapted.map<string,byte>/utf8Compact
go/RoundTripTest/testset.Terse.map<i64,byte>/oneBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/spacesBinary
go/RoundTripTest/testset.Optional.map<i64,i64>/zeroBinary
go/RoundTripTest/testset.list<string>/frontBinary
go/RoundTripTest/testset.Optional.map<i64,float>/allCompact
go/RoundTripTest/testset.Terse.list<float>/frontCompact
go/RoundTripTest/map<i64,binary>/allBinary
go/RoundTripTest/testset.union.list<i64>/frontCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/upperCompact
go/RoundTripTest/testset.FieldAdapted.list<adapted<i16>>/frontCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/spacesBinary
go/RoundTripTest/testset.map<string,float>/utf8Binary
go/RoundTripTest/testset.union.map<string,i32>/lowerBinary
go/RoundTripTest/testset.Adapted.map<string,double>/spacesCompact
go/RoundTripTest/testset.union.list<adapted<binary>>/frontCompact
go/RoundTripTest/testset.Adapted.list<i32>/frontBinary
go/RoundTripTest/testset.Terse.map<string,i64>/allCompact
go/RoundTripTest/testset.Terse.map<string,bool>/leading_spaceCompact
go/RoundTripTest/map<string,i16>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/trailing_spaceCompact
go/RoundTripTest/testset.Optional.map<string,i32>/upperCompact
go/RoundTripTest/testset.union.map<i64,string>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/allBinary
go/RoundTripTest/testset.union.map<i64,i16>/neg_oneBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/upperBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/emptyBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/minBinary
go/RoundTripTest/testset.map<string,i32>/emptyBinary
go/RoundTripTest/testset.union.list<string>/frontBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<string,string>/upperCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<string,binary>/trailing_spaceCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/leading_spaceBinary
go/RoundTripTest/testset.union.map<i64,float>/oneCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/allCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.list<byte>/frontCompact
go/RoundTripTest/testset.union.map<i64,float>/maxCompact
go/RoundTripTest/testset.Terse.map<i64,double>/minCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/upperCompact
go/RoundTripTest/testset.map<i64,binary>/minBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/spacesCompact
go/RoundTripTest/testset.Terse.map<i64,float>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/spacesBinary
go/RoundTripTest/testset.map<string,float>/upperCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/utf8Compact
go/RoundTripTest/testset.union.map<string,bool>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<string,string>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/minBinary
go/RoundTripTest/testset.Optional.map<string,bool>/utf8Compact
go/RoundTripTest/testset.Adapted.map<i64,binary>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<string,byte>/utf8Compact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/zeroCompact
go/RoundTripTest/testset.Adapted.list<double>/frontCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/allCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/spacesCompact
go/RoundTripTest/testset.Optional.map<string,byte>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/lowerBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/zeroBinary
go/RoundTripTest/testset.map<i64,binary>/neg_oneBinary
go/RoundTripTest/testset.union.list<adapted<i16>>/frontCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/spacesBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/oneBinary
go/RoundTripTest/map<string,binary>/utf8Compact
go/RoundTripTest/map<string,i32>/spacesCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/spacesBinary
go/RoundTripTest/testset.union.list<adapted<byte>>/frontBinary
go/RoundTripTest/testset.Adapted.map<string,float>/spacesCompact
go/RoundTripTest/testset.map<string,i64>/emptyBinary
go/RoundTripTest/map<string,bool>/trailing_spaceBinary
go/RoundTripTest/map<i64,i32>/neg_oneBinary
go/RoundTripTest/testset.union.map<string,string>/emptyCompact
go/RoundTripTest/testset.Optional.map<i64,double>/allCompact
go/RoundTripTest/testset.union.map<string,double>/utf8Binary
go/RoundTripTest/testset.map<i64,binary>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/lowerBinary
go/RoundTripTest/map<i64,byte>/zeroBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/spacesCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/utf8Compact
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/emptyBinary
go/RoundTripTest/testset.Adapted.map<i64,float>/zeroCompact
go/RoundTripTest/testset.Adapted.map<i64,i64>/oneCompact
go/RoundTripTest/testset.map<string,i32>/utf8Binary
go/RoundTripTest/testset.Optional.map<string,i16>/allCompact
go/RoundTripTest/testset.map<string,i64>/lowerBinary
go/RoundTripTest/testset.union.list<i32>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/maxBinary
go/RoundTripTest/testset.union.map<i64,string>/oneCompact
go/RoundTripTest/testset.Terse.map<string,i64>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<i64,byte>/oneCompact
go/RoundTripTest/testset.map<string,float>/trailing_spaceBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/minCompact
go/RoundTripTest/testset.Terse.map<i64,float>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/minCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/emptyBinary
go/RoundTripTest/testset.Adapted.map<string,bool>/lowerCompact
go/RoundTripTest/map<string,byte>/trailing_spaceBinary
go/RoundTripTest/testset.Terse.map<string,byte>/lowerBinary
go/RoundTripTest/testset.union.map<i64,bool>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/allCompact
go/RoundTripTest/map<string,byte>/upperBinary
go/RoundTripTest/testset.Adapted.map<i64,bool>/allCompact
go/RoundTripTest/testset.FieldAdapted.list<float>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<string,double>/spacesCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/emptyCompact
go/RoundTripTest/testset.union.map<string,bool>/leading_spaceCompact
go/RoundTripTest/testset.union.map<string,i16>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<i64,i64>/minBinary
go/RoundTripTest/testset.map<i64,binary>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/spacesCompact
go/RoundTripTest/map<string,i16>/utf8Binary
go/RoundTripTest/testset.union.map<string,string>/spacesCompact
go/RoundTripTest/map<string,i64>/emptyBinary
go/RoundTripTest/testset.Terse.map<string,string>/allCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/emptyCompact
go/RoundTripTest/testset.union.map<string,double>/lowerBinary
go/RoundTripTest/map<string,string>/upperBinary
go/RoundTripTest/testset.union.map<i64,byte>/maxCompact
go/RoundTripTest/testset.union.map<string,i64>/upperCompact
go/RoundTripTest/testset.union.map<string,float>/trailing_spaceCompact
go/RoundTripTest/testset.map<string,byte>/utf8Compact
go/RoundTripTest/testset.Terse.map<i64,i32>/maxCompact
go/RoundTripTest/testset.Terse.map<string,binary>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<string,binary>/allCompact
go/RoundTripTest/map<i64,bool>/neg_oneCompact
go/RoundTripTest/testset.Terse.map<i64,double>/neg_oneCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/utf8Binary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/trailing_spaceCompact
go/RoundTripTest/map<i64,double>/zeroBinary
go/RoundTripTest/testset.Terse.map<string,float>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/emptyCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/upperBinary
go/RoundTripTest/map<string,string>/utf8Compact
go/RoundTripTest/testset.list<adapted<i32>>/frontBinary
go/RoundTripTest/testset.Adapted.list<i64>/frontBinary
go/RoundTripTest/testset.Terse.map<i64,i32>/neg_oneBinary
go/RoundTripTest/map<string,string>/allCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/utf8Compact
go/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/oneCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/allBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/upperCompact
go/RoundTripTest/testset.union.map<i64,i64>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/allCompact
go/RoundTripTest/testset.union.list<adapted<double>>/frontCompact
go/RoundTripTest/testset.Optional.map<string,binary>/spacesCompact
go/RoundTripTest/testset.Adapted.map<string,i32>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<i64,binary>/oneCompact
go/RoundTripTest/testset.Optional.map<string,binary>/emptyCompact
go/RoundTripTest/testset.Terse.map<i64,float>/maxBinary
go/RoundTripTest/testset.union.map<string,double>/spacesBinary
go/RoundTripTest/testset.Optional.map<i64,byte>/zeroCompact
go/RoundTripTest/testset.map<string,i16>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/spacesCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/trailing_spaceCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/maxBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/allCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<string,float>/trailing_spaceBinary
go/RoundTripTest/map<i64,binary>/oneBinary
go/RoundTripTest/testset.Terse.list<i32>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i16>/zeroCompact
go/RoundTripTest/testset.Adapted.map<string,i32>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<string,i64>/trailing_spaceCompact
go/RoundTripTest/testset.Optional.map<string,float>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/emptyCompact
go/RoundTripTest/testset.Optional.list<string>/frontBinary
go/RoundTripTest/testset.Terse.map<i64,i32>/zeroBinary
go/RoundTripTest/testset.map<string,i64>/spacesBinary
go/RoundTripTest/testset.Adapted.list<adapted<i32>>/frontCompact
go/RoundTripTest/testset.Terse.list<i64>/frontCompact
go/RoundTripTest/map<i64,float>/zeroCompact
go/RoundTripTest/map<string,double>/lowerCompact
go/RoundTripTest/testset.Adapted.map<i64,float>/minBinary
go/RoundTripTest/testset.Terse.list<string>/frontBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<string,i16>/lowerBinary
go/RoundTripTest/testset.map<i64,i32>/zeroCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/maxCompact
go/RoundTripTest/testset.Adapted.map<string,i64>/leading_spaceBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<string,double>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<string,float>/trailing_spaceCompact
go/RoundTripTest/testset.list<adapted<string>>/frontBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,binary>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/oneBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/trailing_spaceBinary
go/RoundTripTest/testset.map<i64,string>/neg_oneBinary
go/RoundTripTest/testset.map<string,double>/spacesBinary
go/RoundTripTest/testset.map<string,float>/lowerCompact
go/RoundTripTest/testset.Adapted.map<string,binary>/spacesBinary
go/RoundTripTest/testset.map<i64,string>/oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/spacesBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/utf8Compact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/minCompact
go/RoundTripTest/testset.Optional.map<string,double>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/emptyCompact
go/RoundTripTest/map<i64,i32>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<i64,string>/minCompact
go/RoundTripTest/testset.Optional.map<string,byte>/spacesCompact
go/RoundTripTest/testset.map<i64,bool>/zeroBinary
go/RoundTripTest/list<double>/frontBinary
go/RoundTripTest/testset.Optional.map<string,string>/upperBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/allCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/upperBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/lowerCompact
go/RoundTripTest/testset.Terse.map<i64,double>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,string>/neg_oneCompact
go/RoundTripTest/testset.Terse.map<i64,bool>/allBinary
go/RoundTripTest/map<i64,i16>/minBinary
go/RoundTripTest/testset.Optional.map<i64,i64>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i64>/neg_oneBinary
go/RoundTripTest/map<i64,string>/maxBinary
go/RoundTripTest/map<i64,bool>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<string,double>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/zeroBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/lowerCompact
go/RoundTripTest/testset.map<string,bool>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<i64,i32>/allBinary
go/RoundTripTest/testset.Terse.map<string,i32>/emptyBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/upperBinary
go/RoundTripTest/map<string,i32>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<i64,bool>/oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/lowerBinary
go/RoundTripTest/testset.Adapted.map<string,double>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/lowerBinary
go/RoundTripTest/testset.Optional.map<string,i32>/spacesCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<string,float>/upperCompact
go/RoundTripTest/testset.map<string,double>/lowerBinary
go/RoundTripTest/testset.map<i64,float>/allCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/allBinary
go/RoundTripTest/testset.map<i64,i64>/allCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/zeroCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/upperCompact
go/RoundTripTest/map<i64,string>/minBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/spacesCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/oneCompact
go/RoundTripTest/testset.union.map<string,string>/emptyBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/upperBinary
go/RoundTripTest/testset.Optional.map<string,i64>/upperBinary
go/RoundTripTest/testset.Terse.map<string,string>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,bool>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/neg_oneBinary
go/RoundTripTest/testset.list<adapted<i64>>/frontCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/allCompact
go/RoundTripTest/testset.map<i64,bool>/minCompact
go/RoundTripTest/testset.Adapted.map<i64,i64>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/spacesCompact
go/RoundTripTest/testset.map<i64,byte>/zeroCompact
go/RoundTripTest/testset.Adapted.map<i64,i16>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/utf8Binary
go/RoundTripTest/testset.Adapted.map<string,i64>/lowerBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/spacesCompact
go/RoundTripTest/testset.union.map<string,i32>/spacesBinary
go/RoundTripTest/testset.Adapted.map<string,string>/emptyCompact
go/RoundTripTest/testset.Terse.map<string,bool>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/upperBinary
go/RoundTripTest/testset.Terse.map<string,double>/leading_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/zeroCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/oneCompact
go/RoundTripTest/testset.map<string,double>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,binary>/zeroCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/spacesCompact
go/RoundTripTest/testset.map<string,double>/allBinary
go/RoundTripTest/testset.Optional.map<string,string>/emptyBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,byte>/oneCompact
go/RoundTripTest/testset.Terse.map<i64,i64>/minBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/upperBinary
go/RoundTripTest/testset.map<i64,byte>/neg_oneBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/minCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/lowerCompact
go/RoundTripTest/testset.union.map<string,i32>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/upperBinary
go/RoundTripTest/map<i64,double>/oneBinary
go/RoundTripTest/testset.Terse.map<i64,float>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<string,double>/upperCompact
go/RoundTripTest/testset.Optional.map<i64,string>/maxBinary
go/RoundTripTest/testset.Optional.list<byte>/frontCompact
go/RoundTripTest/testset.Terse.map<i64,bool>/neg_oneBinary
go/RoundTripTest/testset.list<adapted<byte>>/frontBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/maxCompact
go/RoundTripTest/testset.Terse.map<string,bool>/upperCompact
go/RoundTripTest/testset.Optional.map<string,bool>/upperBinary
go/RoundTripTest/testset.Terse.map<i64,i32>/oneCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<string,float>/lowerBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/oneBinary
go/RoundTripTest/testset.map<i64,i64>/allBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/utf8Binary
go/RoundTripTest/testset.map<string,bool>/upperCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/lowerCompact
go/RoundTripTest/testset.map<i64,string>/zeroCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/upperBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/upperCompact
go/RoundTripTest/testset.union.map<string,i16>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<string,string>/lowerBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/spacesCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/zeroBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/utf8Compact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/minCompact
go/RoundTripTest/map<string,double>/leading_spaceBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/leading_spaceBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/maxBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/maxBinary
go/RoundTripTest/map<string,binary>/spacesBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/allCompact
go/RoundTripTest/testset.map<i64,float>/minBinary
go/RoundTripTest/map<string,string>/lowerBinary
go/RoundTripTest/testset.Optional.map<string,byte>/utf8Binary
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/spacesBinary
go/RoundTripTest/testset.map<i64,i32>/maxCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/maxCompact
go/RoundTripTest/list<i32>/frontCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,double>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/leading_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/neg_oneCompact
go/RoundTripTest/testset.Terse.map<i64,binary>/zeroBinary
go/RoundTripTest/testset.Terse.map<string,bool>/utf8Binary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/maxCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/lowerBinary
go/RoundTripTest/testset.union.map<string,i32>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<string,i32>/utf8Binary
go/RoundTripTest/testset.map<string,float>/spacesCompact
go/RoundTripTest/testset.Optional.map<i64,binary>/zeroBinary
go/RoundTripTest/testset.Terse.map<i64,string>/oneCompact
go/RoundTripTest/testset.Terse.map<string,i16>/emptyCompact
go/RoundTripTest/testset.union.map<i64,byte>/oneCompact
go/RoundTripTest/testset.union.map<i64,i32>/neg_oneBinary
go/RoundTripTest/testset.union.map<string,binary>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<i64,i32>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i64>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<string,double>/lowerBinary
go/RoundTripTest/testset.Optional.map<string,string>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/neg_oneBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/maxCompact
go/RoundTripTest/testset.Adapted.map<string,bool>/spacesBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/upperCompact
go/RoundTripTest/testset.union.map<string,binary>/upperCompact
go/RoundTripTest/testset.union.map<string,float>/lowerBinary
go/RoundTripTest/testset.Optional.map<i64,string>/oneCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/spacesCompact
go/RoundTripTest/testset.Terse.map<string,i32>/lowerCompact
go/RoundTripTest/testset.Adapted.map<i64,byte>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/emptyCompact
go/RoundTripTest/testset.Optional.map<i64,i64>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.list<i16>/frontCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/emptyBinary
go/RoundTripTest/testset.union.map<string,bool>/lowerCompact
go/RoundTripTest/testset.Adapted.map<string,i16>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/spacesCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/neg_oneCompact
go/RoundTripTest/testset.Optional.map<i64,binary>/maxCompact
go/RoundTripTest/testset.map<i64,string>/zeroBinary
go/RoundTripTest/testset.Terse.map<i64,i64>/zeroBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/lowerCompact
go/RoundTripTest/testset.union.map<string,float>/allCompact
go/RoundTripTest/testset.list<adapted<i16>>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<string,double>/emptyBinary
go/RoundTripTest/testset.union.list<adapted<i16>>/frontBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/utf8Compact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/trailing_spaceCompact
go/RoundTripTest/testset.map<string,i64>/trailing_spaceBinary
go/RoundTripTest/map<string,byte>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/upperBinary
go/RoundTripTest/testset.map<string,bool>/allCompact
go/RoundTripTest/testset.union.map<string,byte>/upperBinary
go/RoundTripTest/testset.Optional.list<string>/frontCompact
go/RoundTripTest/testset.Optional.map<string,i32>/emptyCompact
go/RoundTripTest/map<string,i64>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<i64,i64>/allBinary
go/RoundTripTest/testset.Optional.map<i64,i64>/oneBinary
go/RoundTripTest/testset.Terse.map<string,i32>/lowerBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/allBinary
go/RoundTripTest/testset.union.map<string,string>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/maxBinary
go/RoundTripTest/testset.map<string,binary>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<i64,string>/oneBinary
go/RoundTripTest/testset.Terse.map<i64,i32>/neg_oneCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/emptyBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/emptyBinary
go/RoundTripTest/testset.Terse.map<string,i16>/spacesBinary
go/RoundTripTest/map<i64,i64>/maxCompact
go/RoundTripTest/testset.union.list<byte>/frontBinary
go/RoundTripTest/testset.Adapted.map<string,i32>/lowerBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,double>/maxBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/leading_spaceBinary
go/RoundTripTest/testset.union.list<adapted<string>>/frontCompact
go/RoundTripTest/testset.Optional.map<i64,binary>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,byte>/allCompact
go/RoundTripTest/testset.Optional.map<i64,i32>/maxCompact
go/RoundTripTest/testset.Optional.map<string,string>/upperCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/upperCompact
go/RoundTripTest/testset.union.map<i64,string>/zeroBinary
go/RoundTripTest/testset.union.map<i64,float>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<string,i64>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/allBinary
go/RoundTripTest/testset.Optional.map<string,float>/utf8Binary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/trailing_spaceCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/emptyBinary
go/RoundTripTest/testset.map<string,byte>/spacesBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/trailing_spaceCompact
go/RoundTripTest/testset.Terse.map<i64,i16>/oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/minBinary
go/RoundTripTest/map<string,double>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/lowerBinary
go/RoundTripTest/testset.Optional.map<string,bool>/allCompact
go/RoundTripTest/testset.Terse.map<string,byte>/trailing_spaceCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/oneBinary
go/RoundTripTest/testset.Adapted.map<i64,float>/oneCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/allBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/zeroCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/emptyCompact
go/RoundTripTest/map<string,byte>/upperCompact
go/RoundTripTest/testset.union.map<i64,i32>/oneBinary
go/RoundTripTest/testset.union.map<string,bool>/utf8Compact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/allBinary
go/RoundTripTest/testset.union.map<string,i64>/emptyBinary
go/RoundTripTest/map<string,float>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<string,double>/upperCompact
go/RoundTripTest/testset.list<double>/frontCompact
go/RoundTripTest/list<i32>/frontBinary
go/RoundTripTest/testset.Adapted.map<string,byte>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/upperCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/oneCompact
go/RoundTripTest/testset.Adapted.map<string,string>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<string,string>/spacesCompact
go/RoundTripTest/testset.Terse.map<string,i32>/spacesCompact
go/RoundTripTest/testset.Optional.map<i64,string>/maxCompact
go/RoundTripTest/testset.Terse.map<i64,binary>/zeroCompact
go/RoundTripTest/testset.Terse.map<string,binary>/lowerCompact
go/RoundTripTest/testset.map<string,i32>/lowerBinary
go/RoundTripTest/testset.union.map<i64,bool>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<i64,binary>/allBinary
go/RoundTripTest/testset.Adapted.map<string,byte>/lowerBinary
go/RoundTripTest/testset.Optional.list<i16>/frontBinary
go/RoundTripTest/testset.union.map<string,byte>/allCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/utf8Compact
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/upperCompact
go/RoundTripTest/testset.map<string,bool>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/neg_oneBinary
go/RoundTripTest/testset.map<string,byte>/emptyBinary
go/RoundTripTest/testset.Adapted.map<i64,byte>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/minBinary
go/RoundTripTest/testset.Optional.map<string,i32>/allBinary
go/RoundTripTest/map<string,float>/lowerBinary
go/RoundTripTest/testset.union.map<string,byte>/spacesCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/allBinary
go/RoundTripTest/testset.Terse.map<string,byte>/leading_spaceCompact
go/RoundTripTest/testset.map<string,binary>/allCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/lowerCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/zeroCompact
go/RoundTripTest/testset.union.map<i64,float>/zeroCompact
go/RoundTripTest/map<string,float>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/trailing_spaceCompact
go/RoundTripTest/testset.Terse.map<i64,byte>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/oneBinary
go/RoundTripTest/map<i64,byte>/minCompact
go/RoundTripTest/testset.Terse.map<i64,i64>/oneCompact
go/RoundTripTest/testset.Optional.map<i64,double>/maxBinary
go/RoundTripTest/testset.Terse.map<string,float>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/lowerCompact
go/RoundTripTest/testset.Terse.map<string,byte>/utf8Compact
go/RoundTripTest/map<string,i16>/utf8Compact
go/RoundTripTest/testset.Adapted.map<string,i32>/utf8Compact
go/RoundTripTest/testset.Adapted.map<string,i16>/leading_spaceBinary
go/RoundTripTest/testset.map<string,i32>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,double>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/maxCompact
go/RoundTripTest/testset.Optional.map<string,byte>/emptyBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/lowerBinary
go/RoundTripTest/map<i64,binary>/oneCompact
go/RoundTripTest/testset.union.map<string,binary>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/emptyCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/allBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/allBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<string,byte>/leading_spaceBinary
go/RoundTripTest/testset.Optional.map<i64,bool>/maxCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/emptyCompact
go/RoundTripTest/testset.Terse.map<string,binary>/leading_spaceBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<string,i16>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i64>/oneCompact
go/RoundTripTest/testset.Optional.map<string,i16>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/allCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/lowerBinary
go/RoundTripTest/testset.union.map<i64,double>/neg_oneCompact
go/RoundTripTest/testset.Terse.map<string,i32>/allBinary
go/RoundTripTest/testset.map<string,i16>/emptyCompact
go/RoundTripTest/testset.Adapted.list<adapted<float>>/frontCompact
go/RoundTripTest/testset.union.map<string,double>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/allBinary
go/RoundTripTest/map<string,bool>/leading_spaceCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/maxBinary
go/RoundTripTest/testset.union.map<i64,double>/minBinary
go/RoundTripTest/testset.Adapted.map<i64,i32>/oneBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<string,i64>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,string>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/allBinary
go/RoundTripTest/testset.Optional.map<string,i32>/leading_spaceBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/oneCompact
go/RoundTripTest/testset.Adapted.map<i64,i64>/allCompact
go/RoundTripTest/testset.Optional.map<string,bool>/upperCompact
go/RoundTripTest/testset.union.map<i64,i32>/zeroBinary
go/RoundTripTest/testset.union.map<string,bool>/leading_spaceBinary
go/RoundTripTest/testset.Optional.map<i64,bool>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/leading_spaceCompact
go/RoundTripTest/map<string,binary>/emptyCompact
go/RoundTripTest/map<i64,double>/neg_oneBinary
go/RoundTripTest/testset.Optional.list<i16>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/lowerCompact
go/RoundTripTest/testset.Terse.map<string,binary>/upperBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/zeroCompact
go/RoundTripTest/testset.Terse.map<string,binary>/leading_spaceCompact
go/RoundTripTest/testset.union.map<string,byte>/spacesBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<string,float>/spacesBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/allCompact
go/RoundTripTest/testset.Adapted.map<i64,i16>/maxBinary
go/RoundTripTest/map<i64,float>/minCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/utf8Compact
go/RoundTripTest/testset.Terse.map<i64,float>/zeroBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/zeroCompact
go/RoundTripTest/testset.Optional.map<i64,i16>/minBinary
go/RoundTripTest/testset.Optional.map<i64,bool>/neg_oneBinary
go/RoundTripTest/testset.Adapted.map<i64,string>/allCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/maxBinary
go/RoundTripTest/testset.Terse.map<i64,string>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/emptyCompact
go/RoundTripTest/testset.Terse.map<i64,i16>/neg_oneCompact
go/RoundTripTest/testset.Terse.map<string,byte>/allCompact
go/RoundTripTest/testset.Optional.list<double>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/maxBinary
go/RoundTripTest/testset.map<i64,i16>/neg_oneCompact
go/RoundTripTest/map<i64,bool>/oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/maxCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/spacesBinary
go/RoundTripTest/testset.map<i64,double>/minBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,string>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<string,string>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<string,string>/upperBinary
go/RoundTripTest/testset.Terse.list<binary>/frontCompact
go/RoundTripTest/testset.Terse.map<i64,string>/minCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/oneCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/zeroCompact
go/RoundTripTest/map<i64,string>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/minCompact
go/RoundTripTest/testset.map<string,binary>/upperBinary
go/RoundTripTest/testset.Optional.map<string,i32>/spacesBinary
go/RoundTripTest/testset.Optional.map<string,float>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i64>/allCompact
go/RoundTripTest/testset.Adapted.map<i64,i16>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i32>/allCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/minCompact
go/RoundTripTest/testset.map<i64,double>/minCompact
go/RoundTripTest/map<i64,double>/zeroCompact
go/RoundTripTest/testset.Adapted.map<i64,i64>/allBinary
go/RoundTripTest/testset.Terse.map<i64,string>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/utf8Compact
go/RoundTripTest/testset.Terse.map<i64,double>/zeroCompact
go/RoundTripTest/testset.list<binary>/frontCompact
go/RoundTripTest/testset.Terse.map<string,double>/spacesCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/zeroCompact
go/RoundTripTest/testset.Adapted.map<i64,double>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i16>/minCompact
go/RoundTripTest/testset.Adapted.map<string,i32>/lowerCompact
go/RoundTripTest/testset.Terse.list<float>/frontBinary
go/RoundTripTest/testset.Adapted.list<adapted<string>>/frontCompact
go/RoundTripTest/map<string,i32>/emptyBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/utf8Compact
go/RoundTripTest/map<string,i64>/lowerCompact
go/RoundTripTest/map<i64,float>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/oneBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/zeroCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/emptyCompact
go/RoundTripTest/map<string,bool>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.list<byte>/frontBinary
go/RoundTripTest/map<string,byte>/trailing_spaceCompact
go/RoundTripTest/testset.Optional.map<string,float>/spacesBinary
go/RoundTripTest/testset.Terse.map<i64,byte>/minCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/leading_spaceCompact
go/RoundTripTest/testset.Optional.map<i64,bool>/oneBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/minCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/zeroBinary
go/RoundTripTest/map<i64,binary>/minBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/allCompact
go/RoundTripTest/testset.map<string,float>/utf8Compact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/maxBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/zeroBinary
go/RoundTripTest/testset.Optional.map<i64,double>/zeroCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/utf8Compact
go/RoundTripTest/testset.Optional.map<string,string>/utf8Compact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/utf8Compact
go/RoundTripTest/testset.list<adapted<binary>>/frontBinary
go/RoundTripTest/testset.Optional.map<i64,byte>/oneBinary
go/RoundTripTest/testset.map<string,float>/spacesBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<string,byte>/spacesBinary
go/RoundTripTest/testset.Adapted.map<i64,string>/zeroCompact
go/RoundTripTest/testset.Adapted.map<string,byte>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/neg_oneCompact
go/RoundTripTest/testset.Terse.map<string,i16>/leading_spaceBinary
go/RoundTripTest/testset.map<string,i16>/upperBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/oneCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/emptyCompact
go/RoundTripTest/testset.Terse.map<string,i64>/trailing_spaceBinary
go/RoundTripTest/map<string,binary>/lowerBinary
go/RoundTripTest/testset.Terse.map<string,string>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/maxCompact
go/RoundTripTest/testset.union.map<string,i16>/utf8Compact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/lowerBinary
go/RoundTripTest/testset.list<i16>/frontBinary
go/RoundTripTest/testset.map<i64,string>/allCompact
go/RoundTripTest/testset.Optional.map<string,i32>/upperBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/lowerCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/spacesBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/leading_spaceBinary
go/RoundTripTest/map<string,i16>/upperCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/leading_spaceBinary
go/RoundTripTest/testset.map<string,string>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/leading_spaceBinary
go/RoundTripTest/testset.map<i64,float>/maxBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<string,byte>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<string,byte>/leading_spaceCompact
go/RoundTripTest/testset.list<i16>/frontCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,binary>/allBinary
go/RoundTripTest/map<string,i16>/allBinary
go/RoundTripTest/testset.Adapted.map<string,bool>/upperBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/spacesBinary
go/RoundTripTest/testset.Adapted.map<i64,float>/maxCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/neg_oneCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/emptyCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/emptyBinary
go/RoundTripTest/testset.Adapted.map<i64,string>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/emptyBinary
go/RoundTripTest/testset.Adapted.map<string,bool>/emptyBinary
go/RoundTripTest/map<i64,i64>/allCompact
go/RoundTripTest/testset.union.map<string,bool>/upperBinary
go/RoundTripTest/testset.union.map<string,i32>/trailing_spaceCompact
go/RoundTripTest/map<string,byte>/spacesCompact
go/RoundTripTest/testset.union.list<double>/frontBinary
go/RoundTripTest/map<string,float>/leading_spaceBinary
go/RoundTripTest/testset.Terse.list<byte>/frontCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/zeroBinary
go/RoundTripTest/testset.Optional.map<string,i16>/emptyCompact
go/RoundTripTest/testset.map<string,bool>/emptyCompact
go/RoundTripTest/testset.map<string,i64>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/oneBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/minCompact
go/RoundTripTest/testset.union.map<i64,binary>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<string,i32>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.list<adapted<binary>>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/spacesBinary
go/RoundTripTest/testset.Optional.map<i64,i16>/zeroCompact
go/RoundTripTest/testset.map<string,i16>/emptyBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/allCompact
go/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/frontBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/leading_spaceCompact
go/RoundTripTest/testset.Terse.map<i64,i16>/oneBinary
go/RoundTripTest/testset.Adapted.map<string,i32>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/oneCompact
go/RoundTripTest/testset.map<i64,double>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/spacesBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/utf8Binary
go/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/neg_oneBinary
go/RoundTripTest/testset.Adapted.map<string,double>/spacesBinary
go/RoundTripTest/testset.map<i64,float>/zeroCompact
go/RoundTripTest/testset.Adapted.map<i64,binary>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/zeroBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/neg_oneCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/spacesCompact
go/RoundTripTest/testset.union.map<string,bool>/upperCompact
go/RoundTripTest/map<string,i64>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/utf8Binary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/minBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/allBinary
go/RoundTripTest/testset.Adapted.map<string,binary>/trailing_spaceBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/oneCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,bool>/neg_oneBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/allCompact
go/RoundTripTest/testset.map<i64,binary>/allCompact
go/RoundTripTest/testset.map<string,bool>/emptyBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/upperCompact
go/RoundTripTest/map<i64,binary>/allCompact
go/RoundTripTest/testset.Adapted.list<adapted<byte>>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/upperBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/allCompact
go/RoundTripTest/map<string,byte>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/lowerCompact
go/RoundTripTest/map<i64,binary>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/leading_spaceCompact
go/RoundTripTest/list<i16>/frontBinary
go/RoundTripTest/testset.map<i64,double>/allBinary
go/RoundTripTest/testset.map<string,binary>/utf8Binary
go/RoundTripTest/testset.map<string,string>/emptyBinary
go/RoundTripTest/testset.union.map<string,binary>/trailing_spaceBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/upperCompact
go/RoundTripTest/testset.Terse.list<i16>/frontBinary
go/RoundTripTest/testset.Terse.map<i64,bool>/neg_oneCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/leading_spaceBinary
go/RoundTripTest/testset.union.map<string,float>/allBinary
go/RoundTripTest/testset.Optional.map<i64,i64>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/spacesCompact
go/RoundTripTest/map<i64,bool>/neg_oneBinary
go/RoundTripTest/testset.Adapted.map<i64,byte>/allCompact
go/RoundTripTest/testset.Adapted.map<string,binary>/upperCompact
go/RoundTripTest/testset.Optional.map<i64,byte>/minBinary
go/RoundTripTest/testset.Terse.map<string,i16>/spacesCompact
go/RoundTripTest/testset.map<string,i32>/spacesBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/emptyCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/allBinary
go/RoundTripTest/testset.Terse.map<string,double>/spacesBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/trailing_spaceBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/lowerCompact
go/RoundTripTest/testset.map<string,float>/allBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/lowerCompact
go/RoundTripTest/testset.map<i64,bool>/neg_oneBinary
go/RoundTripTest/testset.Adapted.map<i64,string>/minBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/minCompact
go/RoundTripTest/testset.union.map<i64,i16>/allCompact
go/RoundTripTest/testset.union.map<i64,i16>/neg_oneCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/zeroBinary
go/RoundTripTest/testset.Terse.map<i64,i64>/minCompact
go/RoundTripTest/map<string,i64>/upperCompact
go/RoundTripTest/testset.map<string,bool>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/upperCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/zeroBinary
go/RoundTripTest/map<i64,float>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/allCompact
go/RoundTripTest/testset.Terse.map<string,bool>/spacesBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/allCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/upperBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,bool>/oneBinary
go/RoundTripTest/testset.Terse.map<string,double>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/upperCompact
go/RoundTripTest/map<string,i64>/emptyCompact
go/RoundTripTest/testset.Adapted.map<i64,bool>/maxBinary
go/RoundTripTest/testset.Adapted.map<string,string>/spacesBinary
go/RoundTripTest/testset.Optional.map<string,bool>/spacesCompact
go/RoundTripTest/testset.Terse.map<i64,binary>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i64>/oneBinary
go/RoundTripTest/map<i64,string>/oneBinary
go/RoundTripTest/testset.Optional.map<string,binary>/allCompact
go/RoundTripTest/testset.union.map<i64,double>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/utf8Binary
go/RoundTripTest/testset.Terse.list<i64>/frontBinary
go/RoundTripTest/testset.Optional.map<i64,bool>/minBinary
go/RoundTripTest/testset.map<string,i64>/leading_spaceBinary
go/RoundTripTest/map<string,i16>/emptyBinary
go/RoundTripTest/testset.union.map<i64,double>/minCompact
go/RoundTripTest/testset.union.map<string,i32>/utf8Compact
go/RoundTripTest/testset.union.map<string,string>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<i64,byte>/minCompact
go/RoundTripTest/map<string,byte>/allCompact
go/RoundTripTest/testset.union.map<i64,i32>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/minCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/maxCompact
go/RoundTripTest/testset.map<string,double>/emptyCompact
go/RoundTripTest/testset.union.map<i64,i32>/minCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/maxBinary
go/RoundTripTest/testset.Adapted.map<i64,float>/allCompact
go/RoundTripTest/testset.Terse.map<i64,i64>/allCompact
go/RoundTripTest/testset.map<string,i32>/trailing_spaceBinary
go/RoundTripTest/testset.map<string,byte>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/emptyBinary
go/RoundTripTest/testset.Terse.map<string,i16>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/maxCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i32>/oneCompact
go/RoundTripTest/testset.union.list<i16>/frontCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/leading_spaceBinary
go/RoundTripTest/map<string,i32>/leading_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i16>/oneBinary
go/RoundTripTest/testset.Terse.map<string,double>/emptyBinary
go/RoundTripTest/testset.map<string,byte>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/neg_oneBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/neg_oneBinary
go/RoundTripTest/testset.map<i64,i32>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/lowerBinary
go/RoundTripTest/testset.map<string,i16>/lowerCompact
go/RoundTripTest/testset.map<string,binary>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i32>/zeroBinary
go/RoundTripTest/testset.Terse.map<string,string>/trailing_spaceCompact
go/RoundTripTest/map<string,string>/leading_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/utf8Compact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/lowerCompact
go/RoundTripTest/testset.union.map<string,binary>/utf8Binary
go/RoundTripTest/testset.Optional.map<i64,i32>/oneBinary
go/RoundTripTest/testset.Optional.list<double>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/oneBinary
go/RoundTripTest/testset.Optional.map<string,float>/upperCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/spacesBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/lowerBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.list<string>/frontCompact
go/RoundTripTest/testset.Optional.map<string,binary>/lowerBinary
go/RoundTripTest/testset.Terse.map<string,bool>/leading_spaceBinary
go/RoundTripTest/testset.union.map<string,float>/upperBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/leading_spaceCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/upperBinary
go/RoundTripTest/testset.map<string,string>/spacesBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/minBinary
go/RoundTripTest/map<i64,string>/minCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/spacesCompact
go/RoundTripTest/testset.map<string,byte>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/utf8Compact
go/RoundTripTest/map<i64,i16>/oneCompact
go/RoundTripTest/testset.map<string,float>/allCompact
go/RoundTripTest/testset.Terse.map<string,double>/allCompact
go/RoundTripTest/testset.union.map<string,string>/allBinary
go/RoundTripTest/testset.Terse.map<string,binary>/trailing_spaceCompact
go/RoundTripTest/testset.map<i64,double>/zeroCompact
go/RoundTripTest/testset.Adapted.list<adapted<float>>/frontBinary
go/RoundTripTest/testset.Optional.map<string,binary>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<string,i64>/spacesCompact
go/RoundTripTest/testset.Adapted.map<string,i64>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<string,binary>/upperBinary
go/RoundTripTest/testset.Terse.map<i64,bool>/zeroBinary
go/RoundTripTest/testset.union.map<i64,i64>/neg_oneBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,float>/oneBinary
go/RoundTripTest/map<string,i16>/leading_spaceCompact
go/RoundTripTest/testset.Terse.map<i64,double>/allBinary
go/RoundTripTest/testset.map<i64,byte>/maxBinary
go/RoundTripTest/testset.Terse.map<i64,i64>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/trailing_spaceCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/neg_oneCompact
go/RoundTripTest/testset.Terse.map<i64,string>/zeroCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/leading_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/allCompact
go/RoundTripTest/map<string,double>/spacesCompact
go/RoundTripTest/testset.Terse.map<string,byte>/emptyCompact
go/RoundTripTest/testset.Adapted.map<i64,i32>/minBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/lowerCompact
go/RoundTripTest/testset.map<string,i16>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/allBinary
go/RoundTripTest/testset.union.map<i64,float>/allBinary
go/RoundTripTest/testset.union.map<i64,string>/neg_oneBinary
go/RoundTripTest/testset.union.map<string,i64>/leading_spaceCompact
go/RoundTripTest/testset.Optional.map<string,string>/emptyCompact
go/RoundTripTest/testset.Terse.map<i64,i32>/allCompact
go/RoundTripTest/testset.Adapted.map<i64,i32>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/allCompact
go/RoundTripTest/map<i64,float>/oneBinary
go/RoundTripTest/testset.Adapted.map<string,double>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/utf8Binary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/neg_oneBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/utf8Binary
go/RoundTripTest/testset.map<i64,byte>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<string,float>/upperBinary
go/RoundTripTest/testset.union.map<string,i16>/emptyCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/maxBinary
go/RoundTripTest/testset.Adapted.map<string,float>/leading_spaceCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/trailing_spaceCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/oneBinary
go/RoundTripTest/testset.Adapted.map<string,bool>/leading_spaceCompact
go/RoundTripTest/testset.map<string,float>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<string,string>/leading_spaceBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/utf8Compact
go/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/neg_oneCompact
go/RoundTripTest/map<i64,byte>/maxCompact
go/RoundTripTest/testset.Adapted.map<string,string>/allCompact
go/RoundTripTest/map<string,bool>/emptyCompact
go/RoundTripTest/testset.union.map<i64,double>/allCompact
go/RoundTripTest/testset.union.map<string,byte>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/minCompact
go/RoundTripTest/testset.Optional.map<i64,binary>/maxBinary
go/RoundTripTest/map<i64,double>/minCompact
go/RoundTripTest/testset.Adapted.list<double>/frontBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/emptyCompact
go/RoundTripTest/map<i64,i16>/allCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/spacesBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/trailing_spaceCompact
go/RoundTripTest/map<string,i16>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<string,string>/trailing_spaceBinary
go/RoundTripTest/testset.list<adapted<binary>>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/spacesCompact
go/RoundTripTest/testset.Adapted.map<string,double>/allCompact
go/RoundTripTest/testset.Terse.map<string,double>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/allCompact
go/RoundTripTest/testset.Terse.map<string,float>/upperCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/neg_oneCompact
go/RoundTripTest/testset.Optional.map<string,float>/utf8Compact
go/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/zeroBinary
go/RoundTripTest/testset.map<string,binary>/leading_spaceBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/lowerBinary
go/RoundTripTest/testset.list<adapted<string>>/frontCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/maxCompact
go/RoundTripTest/testset.union.map<string,float>/leading_spaceCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<i64,float>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/spacesCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<string>>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/maxBinary
go/RoundTripTest/testset.Optional.map<string,i64>/spacesCompact
go/RoundTripTest/testset.Adapted.map<i64,float>/allBinary
go/RoundTripTest/testset.map<string,i64>/emptyCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/spacesCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/lowerBinary
go/RoundTripTest/testset.Adapted.map<i64,i64>/oneBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/leading_spaceBinary
go/RoundTripTest/testset.union.map<i64,float>/minBinary
go/RoundTripTest/testset.union.map<string,string>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,binary>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,string>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<string,float>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.list<adapted<binary>>/frontCompact
go/RoundTripTest/testset.Terse.map<string,double>/upperBinary
go/RoundTripTest/testset.map<i64,string>/minBinary
go/RoundTripTest/map<string,i64>/leading_spaceCompact
go/RoundTripTest/testset.Optional.map<i64,binary>/minCompact
go/RoundTripTest/testset.Adapted.map<string,binary>/utf8Compact
go/RoundTripTest/testset.Adapted.map<string,float>/utf8Compact
go/RoundTripTest/testset.map<string,bool>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/upperBinary
go/RoundTripTest/testset.Adapted.map<i64,byte>/neg_oneBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/zeroBinary
go/RoundTripTest/testset.Terse.map<i64,float>/zeroCompact
go/RoundTripTest/map<string,float>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<string,float>/upperCompact
go/RoundTripTest/testset.Terse.map<string,string>/trailing_spaceBinary
go/RoundTripTest/testset.union.list<binary>/frontCompact
go/RoundTripTest/testset.Terse.map<string,float>/allCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/upperBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/trailing_spaceCompact
go/RoundTripTest/testset.map<i64,float>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,double>/maxCompact
go/RoundTripTest/map<string,i64>/upperBinary
go/RoundTripTest/testset.Terse.map<i64,i16>/minBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/allBinary
go/RoundTripTest/testset.map<string,string>/leading_spaceCompact
go/RoundTripTest/testset.Terse.map<string,string>/leading_spaceBinary
go/RoundTripTest/testset.map<string,float>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,double>/zeroCompact
go/RoundTripTest/testset.Adapted.map<i64,i32>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/leading_spaceBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/allBinary
go/RoundTripTest/map<i64,bool>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/leading_spaceBinary
go/RoundTripTest/testset.Optional.map<string,string>/spacesBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/utf8Compact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/maxCompact
go/RoundTripTest/map<i64,i32>/minBinary
go/RoundTripTest/testset.Terse.map<string,i32>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/spacesCompact
go/RoundTripTest/testset.Terse.map<i64,float>/minBinary
go/RoundTripTest/map<string,binary>/upperBinary
go/RoundTripTest/testset.Optional.map<string,i32>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/emptyCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/lowerBinary
go/RoundTripTest/testset.map<string,byte>/utf8Binary
go/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/zeroCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/oneBinary
go/RoundTripTest/testset.union.map<string,i16>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/lowerBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/lowerCompact
go/RoundTripTest/map<string,double>/allBinary
go/RoundTripTest/map<i64,bool>/maxCompact
go/RoundTripTest/testset.Terse.map<i64,bool>/maxCompact
go/RoundTripTest/map<i64,i32>/allCompact
go/RoundTripTest/testset.Adapted.map<string,i16>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,string>/maxBinary
go/RoundTripTest/testset.Optional.map<string,double>/utf8Compact
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.list<binary>/frontBinary
go/RoundTripTest/testset.Optional.map<string,i16>/upperCompact
go/RoundTripTest/testset.Terse.map<string,i16>/allCompact
go/RoundTripTest/testset.map<string,double>/utf8Binary
go/RoundTripTest/testset.Optional.map<string,i16>/leading_spaceBinary
go/RoundTripTest/testset.Terse.map<i64,i32>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/neg_oneCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.list<adapted<double>>/frontCompact
go/RoundTripTest/testset.Adapted.map<string,bool>/allCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<string,string>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/allBinary
go/RoundTripTest/list<double>/frontCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/upperCompact
go/RoundTripTest/testset.map<i64,binary>/zeroCompact
go/RoundTripTest/testset.Optional.map<i64,i64>/minCompact
go/RoundTripTest/testset.map<i64,double>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/utf8Compact
go/RoundTripTest/testset.Terse.map<string,binary>/spacesCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/spacesBinary
go/RoundTripTest/testset.list<binary>/frontBinary
go/RoundTripTest/testset.union.map<string,i64>/allCompact
go/RoundTripTest/map<i64,string>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/allBinary
go/RoundTripTest/map<string,i64>/utf8Compact
go/RoundTripTest/testset.Optional.map<string,i16>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/leading_spaceCompact
go/RoundTripTest/map<i64,bool>/zeroBinary
go/RoundTripTest/testset.Terse.list<string>/frontCompact
go/RoundTripTest/testset.map<string,i16>/leading_spaceCompact
go/RoundTripTest/testset.union.map<i64,float>/neg_oneCompact
go/RoundTripTest/map<i64,i32>/minCompact
go/RoundTripTest/testset.union.map<string,double>/allCompact
go/RoundTripTest/testset.union.map<string,i16>/leading_spaceBinary
go/RoundTripTest/testset.Terse.map<string,float>/lowerBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/allCompact
go/RoundTripTest/testset.map<string,double>/lowerCompact
go/RoundTripTest/map<string,string>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/allBinary
go/RoundTripTest/testset.Terse.map<i64,double>/allCompact
go/RoundTripTest/testset.Optional.map<i64,i16>/oneCompact
go/RoundTripTest/testset.map<string,i64>/utf8Compact
go/RoundTripTest/testset.Adapted.map<i64,float>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<string,i16>/emptyCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/spacesCompact
go/RoundTripTest/testset.Adapted.map<string,double>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/allBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/lowerBinary
go/RoundTripTest/testset.map<string,double>/upperCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/minCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/upperBinary
go/RoundTripTest/testset.union.map<string,byte>/utf8Compact
go/RoundTripTest/testset.Adapted.map<string,float>/upperBinary
go/RoundTripTest/list<float>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/neg_oneCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/allCompact
go/RoundTripTest/testset.map<string,float>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/oneBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/allBinary
go/RoundTripTest/testset.Adapted.map<string,i64>/allCompact
go/RoundTripTest/testset.Terse.map<string,i16>/trailing_spaceBinary
go/RoundTripTest/testset.Optional.list<i32>/frontBinary
go/RoundTripTest/testset.Adapted.map<i64,bool>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<string,string>/emptyBinary
go/RoundTripTest/map<string,i32>/upperBinary
go/RoundTripTest/testset.map<i64,string>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/oneBinary
go/RoundTripTest/testset.Adapted.map<i64,i64>/maxBinary
go/RoundTripTest/map<i64,i16>/minCompact
go/RoundTripTest/testset.map<string,i16>/utf8Binary
go/RoundTripTest/testset.Adapted.map<i64,float>/zeroBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/zeroBinary
go/RoundTripTest/testset.union.map<string,i64>/utf8Binary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/neg_oneCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/maxBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<string,double>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<i64,double>/zeroBinary
go/RoundTripTest/testset.Optional.map<string,i64>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<i64,i16>/oneCompact
go/RoundTripTest/testset.Optional.list<binary>/frontBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/upperBinary
go/RoundTripTest/testset.union.list<float>/frontCompact
go/RoundTripTest/testset.union.list<adapted<i32>>/frontBinary
go/RoundTripTest/testset.Adapted.map<i64,float>/minCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/upperCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/allBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/upperBinary
go/RoundTripTest/testset.list<adapted<i32>>/frontCompact
go/RoundTripTest/testset.union.map<i64,binary>/zeroBinary
go/RoundTripTest/testset.Optional.map<string,string>/allBinary
go/RoundTripTest/testset.Optional.map<i64,bool>/allCompact
go/RoundTripTest/testset.union.map<string,double>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/lowerBinary
go/RoundTripTest/testset.Optional.map<string,byte>/lowerBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/utf8Binary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/allBinary
go/RoundTripTest/testset.union.list<adapted<binary>>/frontBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/neg_oneCompact
go/RoundTripTest/testset.Terse.map<string,binary>/upperCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/emptyBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/leading_spaceBinary
go/RoundTripTest/testset.union.map<i64,i64>/minCompact
go/RoundTripTest/testset.Optional.map<i64,byte>/allCompact
go/RoundTripTest/testset.map<string,i16>/upperCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/minCompact
go/RoundTripTest/testset.Adapted.map<string,byte>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/allBinary
go/RoundTripTest/map<i64,i32>/allBinary
go/RoundTripTest/testset.Optional.map<i64,i16>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i32>/minCompact
go/RoundTripTest/testset.Optional.map<i64,i64>/maxCompact
go/RoundTripTest/testset.Optional.map<i64,i16>/allCompact
go/RoundTripTest/testset.Optional.map<i64,i32>/oneCompact
go/RoundTripTest/testset.map<string,i32>/upperCompact
go/RoundTripTest/testset.union.map<string,double>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/leading_spaceCompact
go/RoundTripTest/map<string,i64>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/maxBinary
go/RoundTripTest/testset.union.map<string,string>/allCompact
go/RoundTripTest/map<string,i32>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/maxCompact
go/RoundTripTest/testset.Terse.map<string,i64>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/neg_oneBinary
go/RoundTripTest/testset.Terse.map<string,i64>/utf8Binary
go/RoundTripTest/map<string,byte>/utf8Binary
go/RoundTripTest/testset.Adapted.map<string,string>/allBinary
go/RoundTripTest/testset.union.map<string,i16>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<string,float>/emptyCompact
go/RoundTripTest/testset.union.map<i64,i64>/minBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/neg_oneCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i32>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/neg_oneCompact
go/RoundTripTest/testset.union.map<string,byte>/emptyBinary
go/RoundTripTest/testset.Optional.map<string,float>/emptyCompact
go/RoundTripTest/testset.map<i64,i16>/maxBinary
go/RoundTripTest/testset.Optional.map<i64,binary>/neg_oneCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/allCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i32>>/lowerBinary
go/RoundTripTest/testset.union.map<i64,string>/allCompact
go/RoundTripTest/testset.Terse.map<string,i16>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<string,double>/leading_spaceCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<byte>>/minBinary
go/RoundTripTest/testset.Adapted.map<string,float>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/leading_spaceCompact
go/RoundTripTest/testset.Optional.map<string,double>/leading_spaceBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/allBinary
go/RoundTripTest/testset.union.map<i64,bool>/neg_oneBinary
go/RoundTripTest/testset.Terse.map<i64,i64>/maxCompact
go/RoundTripTest/testset.map<i64,i64>/maxCompact
go/RoundTripTest/testset.map<i64,double>/oneBinary
go/RoundTripTest/testset.union.map<string,i64>/trailing_spaceCompact
go/RoundTripTest/map<i64,string>/allBinary
go/RoundTripTest/testset.FieldAdapted.list<adapted<i64>>/frontBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.list<adapted<float>>/frontBinary
go/RoundTripTest/testset.Optional.map<string,i16>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<string,i32>/utf8Binary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/lowerCompact
go/RoundTripTest/testset.map<i64,i32>/oneCompact
go/RoundTripTest/map<string,string>/emptyCompact
go/RoundTripTest/testset.Adapted.list<byte>/frontCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/neg_oneCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/neg_oneCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/maxCompact
go/RoundTripTest/map<string,i64>/trailing_spaceCompact
go/RoundTripTest/map<string,i64>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/allCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<string,i32>/allCompact
go/RoundTripTest/list<binary>/frontBinary
go/RoundTripTest/testset.Optional.map<string,double>/lowerBinary
go/RoundTripTest/testset.Optional.map<string,string>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/leading_spaceCompact
go/RoundTripTest/testset.Terse.map<string,float>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/lowerCompact
go/RoundTripTest/testset.Optional.map<i64,bool>/maxBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/spacesCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/spacesCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/minCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<string,float>/utf8Compact
go/RoundTripTest/testset.union.list<binary>/frontBinary
go/RoundTripTest/testset.map<string,binary>/allBinary
go/RoundTripTest/testset.Adapted.map<string,float>/emptyCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/zeroCompact
go/RoundTripTest/testset.Terse.list<binary>/frontBinary
go/RoundTripTest/testset.Terse.map<string,byte>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<string,double>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<bool>>/allCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,float>/oneCompact
go/RoundTripTest/testset.Optional.map<string,i64>/leading_spaceBinary
go/RoundTripTest/testset.list<float>/frontBinary
go/RoundTripTest/testset.Optional.map<string,bool>/lowerCompact
go/RoundTripTest/testset.Adapted.list<adapted<string>>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<float>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,float>/minBinary
go/RoundTripTest/testset.Optional.map<string,bool>/spacesBinary
go/RoundTripTest/testset.Terse.map<string,i16>/upperBinary
go/RoundTripTest/testset.Terse.map<string,i32>/emptyCompact
go/RoundTripTest/testset.map<string,string>/lowerCompact
go/RoundTripTest/testset.Terse.map<i64,float>/oneCompact
go/RoundTripTest/testset.map<i64,bool>/oneBinary
go/RoundTripTest/testset.union.map<i64,byte>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<i64,i16>/minBinary
go/RoundTripTest/testset.union.map<i64,float>/minCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/emptyBinary
go/RoundTripTest/testset.list<i64>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i32>/maxBinary
go/RoundTripTest/map<string,double>/upperBinary
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/leading_spaceCompact
go/RoundTripTest/testset.Terse.map<i64,byte>/allCompact
go/RoundTripTest/testset.Terse.map<string,i16>/lowerBinary
go/RoundTripTest/list<string>/frontBinary
go/RoundTripTest/testset.union.map<i64,i16>/minBinary
go/RoundTripTest/testset.union.map<string,float>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<string,double>/emptyCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/spacesBinary
go/RoundTripTest/testset.Terse.map<i64,double>/maxCompact
go/RoundTripTest/testset.Adapted.map<string,i32>/upperBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/spacesBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/neg_oneBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/trailing_spaceBinary
go/RoundTripTest/map<string,float>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<string>>/emptyCompact
go/RoundTripTest/testset.Adapted.list<adapted<i32>>/frontBinary
go/RoundTripTest/testset.Adapted.map<string,i16>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<string,string>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/utf8Binary
go/RoundTripTest/testset.Adapted.map<string,byte>/spacesCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/minBinary
go/RoundTripTest/testset.map<i64,i32>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/allBinary
go/RoundTripTest/testset.Terse.map<string,byte>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/allBinary
go/RoundTripTest/testset.map<string,byte>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/emptyBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<float>>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/allCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/allBinary
go/RoundTripTest/testset.Optional.map<string,bool>/leading_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.list<adapted<string>>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/utf8Binary
go/RoundTripTest/testset.union.map<string,binary>/emptyCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/zeroCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/neg_oneCompact
go/RoundTripTest/list<i64>/frontBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<string,binary>/utf8Binary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.list<i64>/frontBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i64>>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,bool>/minBinary
go/RoundTripTest/testset.Terse.map<i64,string>/zeroBinary
go/RoundTripTest/testset.Adapted.map<string,i64>/upperBinary
go/RoundTripTest/testset.Optional.map<i64,byte>/neg_oneBinary
go/RoundTripTest/testset.union.list<adapted<double>>/frontBinary
go/RoundTripTest/testset.Adapted.map<string,i32>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/upperCompact
go/RoundTripTest/testset.Adapted.list<adapted<i16>>/frontBinary
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/leading_spaceCompact
go/RoundTripTest/testset.map<string,double>/utf8Compact
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/lowerBinary
go/RoundTripTest/testset.Adapted.map<string,i32>/upperCompact
go/RoundTripTest/testset.union.map<string,float>/spacesCompact
go/RoundTripTest/testset.Terse.map<string,float>/upperBinary
go/RoundTripTest/testset.Optional.map<i64,i32>/minBinary
go/RoundTripTest/testset.Adapted.map<i64,float>/maxBinary
go/RoundTripTest/testset.union.map<i64,bool>/minCompact
go/RoundTripTest/map<string,i32>/utf8Binary
go/RoundTripTest/testset.Terse.map<string,bool>/allBinary
go/RoundTripTest/testset.Terse.map<string,i16>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<string,i32>/emptyBinary
go/RoundTripTest/testset.Optional.map<string,i64>/emptyBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/spacesBinary
go/RoundTripTest/testset.Adapted.map<i64,string>/neg_oneBinary
go/RoundTripTest/map<i64,binary>/zeroBinary
go/RoundTripTest/testset.Terse.map<string,double>/allBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i16>>/oneCompact
go/RoundTripTest/testset.Terse.map<string,i64>/emptyCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/allBinary
go/RoundTripTest/testset.Adapted.map<string,bool>/utf8Binary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/oneBinary
go/RoundTripTest/testset.Optional.map<i64,i32>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,double>/minBinary
go/RoundTripTest/testset.Terse.map<string,string>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/allCompact
go/RoundTripTest/testset.Optional.map<i64,string>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/spacesCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/neg_oneBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/lowerBinary
go/RoundTripTest/testset.union.map<i64,i16>/zeroCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<float>>/upperCompact
go/RoundTripTest/map<string,bool>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<byte>>/upperCompact
go/RoundTripTest/testset.Optional.map<i64,binary>/oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<binary>>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/zeroBinary
go/RoundTripTest/testset.Terse.map<i64,bool>/minBinary
go/RoundTripTest/map<string,double>/utf8Binary
go/RoundTripTest/testset.Adapted.map<i64,i64>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,double>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<byte>>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/maxBinary
go/RoundTripTest/testset.Terse.map<string,string>/lowerBinary
go/RoundTripTest/testset.map<string,i64>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/spacesBinary
go/RoundTripTest/testset.Terse.map<string,i32>/trailing_spaceBinary
go/RoundTripTest/testset.Terse.map<i64,i16>/allCompact
go/RoundTripTest/testset.union.map<string,bool>/allBinary
go/RoundTripTest/testset.Adapted.map<i64,bool>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<string,string>/leading_spaceCompact
go/RoundTripTest/map<i64,float>/maxBinary
go/RoundTripTest/testset.Optional.map<i64,string>/zeroCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i64>>/minBinary
go/RoundTripTest/testset.Adapted.list<adapted<i16>>/frontCompact
go/RoundTripTest/testset.FieldAdapted.list<i32>/frontBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/maxBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/allCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/maxBinary
go/RoundTripTest/testset.map<i64,i64>/oneCompact
go/RoundTripTest/testset.union.map<string,double>/upperCompact
go/RoundTripTest/map<string,binary>/lowerCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/neg_oneCompact
go/RoundTripTest/testset.Optional.map<string,byte>/upperBinary
go/RoundTripTest/testset.union.map<string,string>/upperCompact
go/RoundTripTest/testset.Optional.list<i64>/frontBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/maxCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i16>>/leading_spaceBinary
go/RoundTripTest/testset.union.map<i64,double>/maxCompact
go/RoundTripTest/testset.Optional.map<i64,float>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<i64,binary>/oneBinary
go/RoundTripTest/testset.Adapted.list<binary>/frontBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/oneCompact
go/RoundTripTest/testset.Adapted.map<i64,i32>/oneCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i16>>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/oneBinary
go/RoundTripTest/testset.map<i64,i64>/maxBinary
go/RoundTripTest/testset.map<string,double>/leading_spaceBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<byte>>/allCompact
go/RoundTripTest/testset.union.map<i64,i32>/oneCompact
go/RoundTripTest/testset.union.map<string,binary>/lowerCompact
go/RoundTripTest/testset.Adapted.map<string,byte>/leading_spaceBinary
go/RoundTripTest/testset.Terse.map<string,i64>/lowerCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/minBinary
go/RoundTripTest/testset.Terse.map<i64,i32>/minCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/leading_spaceCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/emptyBinary
go/RoundTripTest/map<string,float>/spacesCompact
go/RoundTripTest/testset.Adapted.map<string,binary>/lowerCompact
go/RoundTripTest/testset.union.map<string,i64>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.list<i16>/frontBinary
go/RoundTripTest/map<string,string>/upperCompact
go/RoundTripTest/map<string,bool>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i64>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<string,i16>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<i64,binary>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i64>/minBinary
go/RoundTripTest/map<string,byte>/leading_spaceCompact
go/RoundTripTest/map<string,float>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i64>/minCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/allCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<double>>/leading_spaceBinary
go/RoundTripTest/testset.union.map<i64,i64>/zeroCompact
go/RoundTripTest/testset.Adapted.map<i64,bool>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<string,bool>/emptyBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<double>>/utf8Binary
go/RoundTripTest/testset.Adapted.map<string,i16>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,bool>/maxCompact
go/RoundTripTest/testset.Adapted.map<i64,double>/oneCompact
go/RoundTripTest/testset.map<i64,binary>/oneBinary
go/RoundTripTest/testset.map<i64,i64>/oneBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/zeroCompact
go/RoundTripTest/testset.union.map<i64,i32>/allCompact
go/RoundTripTest/map<i64,i64>/zeroBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/oneCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<double>>/maxCompact
go/RoundTripTest/map<string,bool>/lowerCompact
go/RoundTripTest/testset.union.map<string,i64>/trailing_spaceBinary
go/RoundTripTest/testset.Optional.map<string,string>/leading_spaceBinary
go/RoundTripTest/testset.union.map<i64,bool>/zeroCompact
go/RoundTripTest/testset.union.map<i64,float>/zeroBinary
go/RoundTripTest/testset.Adapted.map<string,byte>/leading_spaceCompact
go/RoundTripTest/testset.union.map<i64,i16>/oneCompact
go/RoundTripTest/testset.Optional.map<string,i16>/lowerBinary
go/RoundTripTest/testset.Terse.map<string,bool>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.list<float>/frontCompact
go/RoundTripTest/testset.map<i64,float>/zeroBinary
go/RoundTripTest/testset.union.list<float>/frontBinary
go/RoundTripTest/testset.Adapted.map<string,float>/leading_spaceBinary
go/RoundTripTest/testset.union.map<i64,double>/oneCompact
go/RoundTripTest/testset.Terse.map<string,string>/upperCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/oneBinary
go/RoundTripTest/testset.Terse.map<string,i16>/lowerCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<i64,double>/neg_oneBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/lowerCompact
go/RoundTripTest/testset.union.map<string,binary>/allCompact
go/RoundTripTest/testset.Adapted.map<string,i32>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/trailing_spaceCompact
go/RoundTripTest/testset.union.map<i64,byte>/oneBinary
go/RoundTripTest/testset.Adapted.map<string,i32>/emptyCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/zeroCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i64>>/emptyCompact
go/RoundTripTest/testset.union.map<string,i16>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<string,string>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/neg_oneBinary
go/RoundTripTest/testset.Terse.map<string,i64>/spacesCompact
go/RoundTripTest/testset.union.map<i64,i64>/oneCompact
go/RoundTripTest/testset.map<i64,i16>/neg_oneBinary
go/RoundTripTest/testset.Terse.map<string,byte>/upperBinary
go/RoundTripTest/testset.Optional.map<string,double>/spacesCompact
go/RoundTripTest/map<string,string>/utf8Binary
go/RoundTripTest/map<i64,i64>/allBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/leading_spaceBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i16>>/utf8Binary
go/RoundTripTest/testset.map<string,i32>/lowerCompact
go/RoundTripTest/testset.union.list<adapted<byte>>/frontCompact
go/RoundTripTest/testset.Terse.map<string,i16>/leading_spaceCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/lowerBinary
go/RoundTripTest/map<string,binary>/leading_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/upperBinary
go/RoundTripTest/testset.Optional.map<string,binary>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<byte>>/oneCompact
go/RoundTripTest/testset.union.map<i64,byte>/allBinary
go/RoundTripTest/testset.Adapted.list<string>/frontBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<string,string>/upperCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/trailing_spaceCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/utf8Compact
go/RoundTripTest/testset.Adapted.map<i64,i64>/neg_oneCompact
go/RoundTripTest/map<i64,i32>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<float>>/oneBinary
go/RoundTripTest/testset.Optional.map<string,i64>/emptyCompact
go/RoundTripTest/testset.Optional.map<string,string>/allCompact
go/RoundTripTest/testset.Terse.map<i64,i16>/neg_oneBinary
go/RoundTripTest/testset.Terse.map<string,i64>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,bool>/oneCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,string>/minBinary
go/RoundTripTest/testset.Optional.map<i64,i16>/maxCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/minBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/upperBinary
go/RoundTripTest/testset.Terse.map<string,bool>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<string,double>/utf8Binary
go/RoundTripTest/map<i64,i32>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/spacesCompact
go/RoundTripTest/testset.union.map<i64,byte>/neg_oneBinary
go/RoundTripTest/testset.Terse.map<string,byte>/upperCompact
go/RoundTripTest/testset.union.map<i64,float>/maxBinary
go/RoundTripTest/map<i64,string>/zeroCompact
go/RoundTripTest/testset.Optional.map<string,byte>/allCompact
go/RoundTripTest/testset.union.map<string,float>/emptyBinary
go/RoundTripTest/testset.union.map<string,i16>/allBinary
go/RoundTripTest/testset.union.map<string,i32>/allCompact
go/RoundTripTest/testset.union.map<string,i32>/lowerCompact
go/RoundTripTest/testset.union.map<string,string>/trailing_spaceCompact
go/RoundTripTest/testset.Optional.map<string,double>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/zeroBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/maxCompact
go/RoundTripTest/testset.Optional.map<string,byte>/trailing_spaceCompact
go/RoundTripTest/map<string,i16>/trailing_spaceBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i64>>/spacesBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/minBinary
go/RoundTripTest/testset.Optional.map<i64,i64>/zeroCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/minCompact
go/RoundTripTest/testset.FieldAdapted.list<adapted<binary>>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/oneBinary
go/RoundTripTest/testset.map<string,byte>/spacesCompact
go/RoundTripTest/testset.Terse.map<string,i32>/spacesBinary
go/RoundTripTest/map<i64,binary>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/spacesBinary
go/RoundTripTest/testset.Terse.map<string,i16>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<bool>>/emptyCompact
go/RoundTripTest/testset.Terse.map<i64,bool>/minCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/emptyBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/lowerBinary
go/RoundTripTest/testset.Optional.map<i64,double>/maxCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/maxBinary
go/RoundTripTest/testset.Adapted.map<i64,double>/maxCompact
go/RoundTripTest/testset.FieldAdapted.map<string,double>/allBinary
go/RoundTripTest/testset.Adapted.map<i64,double>/minCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/leading_spaceCompact
go/RoundTripTest/map<i64,i16>/maxBinary
go/RoundTripTest/testset.Adapted.map<i64,double>/minBinary
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/upperBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/neg_oneBinary
go/RoundTripTest/testset.map<string,bool>/leading_spaceCompact
go/RoundTripTest/map<string,string>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<double>>/trailing_spaceCompact
go/RoundTripTest/testset.Optional.map<string,bool>/allBinary
go/RoundTripTest/testset.map<i64,i16>/oneCompact
go/RoundTripTest/testset.map<i64,float>/maxCompact
go/RoundTripTest/testset.Optional.map<i64,float>/zeroBinary
go/RoundTripTest/testset.Terse.map<string,double>/upperCompact
go/RoundTripTest/map<i64,byte>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i32>>/emptyBinary
go/RoundTripTest/map<i64,string>/oneCompact
go/RoundTripTest/testset.Terse.map<i64,bool>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/leading_spaceBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/zeroBinary
go/RoundTripTest/testset.union.map<string,bool>/emptyCompact
go/RoundTripTest/testset.Optional.map<i64,i16>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,float>/maxCompact
go/RoundTripTest/testset.Terse.map<i64,float>/maxCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/minCompact
go/RoundTripTest/testset.Adapted.map<string,i16>/utf8Binary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,byte>/neg_oneCompact
go/RoundTripTest/testset.map<i64,i16>/zeroCompact
go/RoundTripTest/testset.map<string,bool>/lowerBinary
go/RoundTripTest/testset.union.list<adapted<i64>>/frontCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/allCompact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/utf8Binary
go/RoundTripTest/testset.map<adapted<i64>,adapted<binary>>/maxBinary
go/RoundTripTest/testset.FieldAdapted.map<string,string>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<string,float>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i64>>/zeroCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/allCompact
go/RoundTripTest/testset.FieldAdapted.list<adapted<i32>>/frontBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/maxCompact
go/RoundTripTest/testset.Optional.map<string,i32>/trailing_spaceBinary
go/RoundTripTest/testset.Terse.map<i64,byte>/maxCompact
go/RoundTripTest/testset.union.map<string,float>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<bool>>/allBinary
go/RoundTripTest/testset.Adapted.map<string,bool>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<string,string>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<string,binary>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<string,byte>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<string,binary>/leading_spaceBinary
go/RoundTripTest/testset.map<string,binary>/lowerBinary
go/RoundTripTest/testset.Adapted.map<string,double>/upperBinary
go/RoundTripTest/map<string,i16>/emptyCompact
go/RoundTripTest/map<i64,double>/maxBinary
go/RoundTripTest/testset.map<string,i64>/upperBinary
go/RoundTripTest/testset.Adapted.map<i64,i32>/neg_oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i64>>/emptyCompact
go/RoundTripTest/testset.Optional.map<i64,i64>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<i16>>/spacesCompact
go/RoundTripTest/testset.map<i64,string>/oneBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i64>>/leading_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<bool>>/minCompact
go/RoundTripTest/testset.Optional.map<i64,string>/allCompact
go/RoundTripTest/testset.union.map<i64,i64>/oneBinary
go/RoundTripTest/testset.union.map<string,i16>/spacesBinary
go/RoundTripTest/testset.union.map<string,i64>/upperBinary
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<binary>>/maxCompact
go/RoundTripTest/testset.list<i32>/frontCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i16>>/zeroBinary
go/RoundTripTest/testset.map<i64,byte>/zeroBinary
go/RoundTripTest/testset.Optional.map<string,double>/upperBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<string>>/maxBinary
go/RoundTripTest/testset.union.map<i64,float>/allCompact
go/RoundTripTest/testset.union.map<string,binary>/upperBinary
go/RoundTripTest/testset.Adapted.map<string,double>/lowerCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,i32>/allBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<binary>>/utf8Binary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/leading_spaceCompact
go/RoundTripTest/testset.union.map<string,i64>/utf8Compact
go/RoundTripTest/testset.Adapted.map<string,i64>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<binary>>/oneCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/minBinary
go/RoundTripTest/testset.Adapted.map<string,double>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<double>>/neg_oneBinary
go/RoundTripTest/testset.Optional.map<i64,i32>/neg_oneCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<double>>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i32>>/oneCompact
go/RoundTripTest/testset.Optional.map<string,i16>/utf8Compact
go/RoundTripTest/testset.map<adapted<string>,adapted<string>>/utf8Binary
go/RoundTripTest/testset.union.map<i64,i32>/maxBinary
go/RoundTripTest/testset.Adapted.map<string,float>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/emptyBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<bool>>/allBinary
go/RoundTripTest/testset.Adapted.map<i64,binary>/zeroBinary
go/RoundTripTest/testset.Optional.map<i64,float>/oneBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/leading_spaceCompact
go/RoundTripTest/testset.Terse.map<i64,string>/minBinary
go/RoundTripTest/testset.map<i64,i16>/allCompact
go/RoundTripTest/testset.map<i64,bool>/neg_oneCompact
go/RoundTripTest/testset.Optional.map<string,float>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.list<adapted<i16>>/frontBinary
go/RoundTripTest/testset.union.map<string,float>/emptyCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<string>>/spacesCompact
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<float>>/minBinary
go/RoundTripTest/map<string,double>/trailing_spaceBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<float>>/zeroBinary
go/RoundTripTest/testset.Terse.map<string,i32>/upperCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<bool>>/zeroCompact
go/RoundTripTest/map<i64,byte>/oneBinary
go/RoundTripTest/testset.Terse.map<i64,binary>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,binary>/zeroBinary
go/RoundTripTest/testset.Optional.map<i64,i32>/minCompact
go/RoundTripTest/testset.Optional.map<string,i16>/spacesCompact
go/RoundTripTest/testset.Terse.list<double>/frontCompact
go/RoundTripTest/testset.Terse.map<i64,byte>/oneCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<byte>>/upperCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/utf8Binary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/upperBinary
go/RoundTripTest/testset.Optional.map<string,string>/trailing_spaceCompact
go/RoundTripTest/testset.FieldAdapted.map<string,float>/emptyBinary
go/RoundTripTest/testset.map<i64,byte>/oneCompact
go/RoundTripTest/testset.union.map<string,i16>/upperCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<i16>>/neg_oneCompact
go/RoundTripTest/testset.Optional.map<string,string>/trailing_spaceBinary
go/RoundTripTest/testset.Terse.map<string,i16>/utf8Compact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<byte>>/upperCompact
go/RoundTripTest/testset.map<string,i16>/spacesCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<double>>/minBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<bool>>/oneCompact
go/RoundTripTest/testset.union.map<string,i16>/allCompact
go/RoundTripTest/testset.FieldAdapted.map<i64,byte>/allBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/spacesBinary
go/RoundTripTest/map<i64,byte>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<string,string>/lowerCompact
go/RoundTripTest/testset.union.map<string,i64>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<binary>>/spacesBinary
go/RoundTripTest/testset.FieldAdapted.list<adapted<i64>>/frontCompact
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/utf8Compact
go/RoundTripTest/testset.Optional.map<i64,float>/allBinary
go/RoundTripTest/testset.Terse.map<i64,i32>/zeroCompact
go/RoundTripTest/testset.Terse.list<byte>/frontBinary
go/RoundTripTest/map<string,bool>/spacesBinary
go/RoundTripTest/testset.Adapted.map<i64,i16>/allCompact
go/RoundTripTest/testset.Optional.map<i64,double>/neg_oneCompact
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<float>>/upperCompact
go/RoundTripTest/testset.Terse.map<string,double>/lowerBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,float>/zeroCompact
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/spacesCompact
go/RoundTripTest/testset.Optional.map<i64,i16>/zeroBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/leading_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/utf8Binary
go/RoundTripTest/testset.map<adapted<string>,adapted<byte>>/utf8Binary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<string>>/trailing_spaceBinary
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<binary>>/upperBinary
go/RoundTripTest/map<string,bool>/utf8Binary
go/RoundTripTest/testset.Adapted.map<string,binary>/allBinary
go/RoundTripTest/testset.Optional.map<string,i64>/utf8Binary
go/RoundTripTest/testset.Adapted.map<string,i64>/utf8Compact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/allBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/leading_spaceBinary
go/RoundTripTest/testset.Adapted.map<string,byte>/upperBinary
go/RoundTripTest/testset.Adapted.map<string,double>/emptyBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<binary>>/trailing_spaceCompact
go/RoundTripTest/testset.Optional.map<string,byte>/allBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<i32>>/emptyBinary
go/RoundTripTest/testset.Terse.map<i64,double>/maxBinary
go/RoundTripTest/map<i64,string>/neg_oneCompact
go/RoundTripTest/testset.map<string,double>/trailing_spaceCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i32>>/maxBinary
go/RoundTripTest/testset.map<string,i16>/trailing_spaceBinary
go/RoundTripTest/testset.union.map<adapted<i64>,adapted<i32>>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<i64>,adapted<string>>/zeroBinary
go/RoundTripTest/testset.map<string,i64>/trailing_spaceCompact
go/RoundTripTest/testset.map<adapted<i64>,adapted<i32>>/allCompact
go/RoundTripTest/testset.Adapted.map<string,bool>/upperCompact
go/RoundTripTest/testset.Terse.map<i64,string>/allCompact
go/RoundTripTest/testset.Adapted.map<string,i64>/emptyBinary
go/RoundTripTest/testset.FieldAdapted.map<adapted<string>,adapted<double>>/utf8Binary
go/RoundTripTest/testset.map<string,i64>/allBinary
go/RoundTripTest/map<string,float>/utf8Compact
go/RoundTripTest/testset.FieldAdapted.map<i64,i16>/minBinary
go/RoundTripTest/testset.map<adapted<i64>,adapted<string>>/zeroCompact
go/RoundTripTest/testset.union.map<i64,binary>/oneBinary
go/RoundTripTest/testset.map<adapted<string>,adapted<i32>>/upperCompact
go/RoundTripTest/testset.Adapted.map<string,i64>/emptyCompact
go/RoundTripTest/map<string,string>/emptyBinary
go/RoundTripTest/testset.Adapted.map<i64,double>/neg_oneCompact
go/RoundTripTest/testset.Adapted.map<string,byte>/trailing_spaceBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,i32>/zeroCompact
go/RoundTripTest/testset.FieldAdapted.map<string,bool>/allCompact
go/RoundTripTest/testset.Optional.map<i64,i32>/zeroCompact
go/RoundTripTest/testset.Optional.map<string,i16>/trailing_spaceCompact
go/RoundTripTest/testset.Terse.map<i64,double>/oneBinary
go/RoundTripTest/testset.FieldAdapted.map<i64,byte>/minBinary
go/RoundTripTest/testset.union.map<adapted<string>,adapted<bool>>/lowerCompact
go/RoundTripTest/testset.union.map<adapted<string>,adapted<float>>/utf8Compact
go/RoundTripTest/testset.Adapted.map<adapted<string>,adapted<i16>>/allCompact
go/RoundTripTest/testset.list<float>/frontCompact
go/RoundTripTest/testset.Adapted.map<adapted<i64>,adapted<i64>>/zeroBinary

#
# Go Data conformance compatibility tests [FAILED]
go/CompatibilityTest/testset.i32.i16/ChangeFieldType/zero.Binary
go/CompatibilityTest/testset.i32.i16/ChangeFieldType/zero.Compact
go/CompatibilityTest/testset.i32.i16/ChangeFieldType/min.Binary
go/CompatibilityTest/testset.i32.i16/ChangeFieldType/min.Compact
go/CompatibilityTest/testset.i32.i16/ChangeFieldType/max.Binary
go/CompatibilityTest/testset.i32.i16/ChangeFieldType/max.Compact
go/CompatibilityTest/testset.i32.i16/ChangeFieldType/one.Binary
go/CompatibilityTest/testset.i32.i16/ChangeFieldType/one.Compact
go/CompatibilityTest/testset.i32.i16/ChangeFieldType/neg_one.Binary
go/CompatibilityTest/testset.i32.i16/ChangeFieldType/neg_one.Compact
go/CompatibilityTest/testset.i32.i64/ChangeFieldType/zero.Binary
go/CompatibilityTest/testset.i32.i64/ChangeFieldType/zero.Compact
go/CompatibilityTest/testset.i32.i64/ChangeFieldType/min.Binary
go/CompatibilityTest/testset.i32.i64/ChangeFieldType/min.Compact
go/CompatibilityTest/testset.i32.i64/ChangeFieldType/max.Binary
go/CompatibilityTest/testset.i32.i64/ChangeFieldType/max.Compact
go/CompatibilityTest/testset.i32.i64/ChangeFieldType/one.Binary
go/CompatibilityTest/testset.i32.i64/ChangeFieldType/one.Compact
go/CompatibilityTest/testset.i32.i64/ChangeFieldType/neg_one.Binary
go/CompatibilityTest/testset.i32.i64/ChangeFieldType/neg_one.Compact
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/empty.Binary
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/empty.Compact
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/all.Binary
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/all.Compact
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/set(zero).Binary
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/set(zero).Compact
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/set(min).Binary
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/set(min).Compact
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/set(max).Binary
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/set(max).Compact
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/set(one).Binary
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/set(one).Compact
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/set(neg_one).Binary
go/CompatibilityTest/testset.set<i64>.list<i64>/ChangeFieldType/set(neg_one).Compact
go/CompatibilityTest/testset.list<i64>.set<i64>/ChangeFieldType/empty.Binary
go/CompatibilityTest/testset.list<i64>.set<i64>/ChangeFieldType/empty.Compact
go/CompatibilityTest/testset.list<i64>.set<i64>/ChangeFieldType/all.Binary
go/CompatibilityTest/testset.list<i64>.set<i64>/ChangeFieldType/all.Compact
go/CompatibilityTest/testset.list<i64>.set<i64>/ChangeFieldType/duplicate.Binary
go/CompatibilityTest/testset.list<i64>.set<i64>/ChangeFieldType/duplicate.Compact
go/CompatibilityTest/testset.list<i64>.set<i64>/ChangeFieldType/reverse.Binary
go/CompatibilityTest/testset.list<i64>.set<i64>/ChangeFieldType/reverse.Compact
go/CompatibilityTest/testset.i16/AddTerseFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.i16/AddTerseFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.i16/ChangeSingularToContainer/zero.Binary
go/CompatibilityTest/testset.i16/ChangeContainerToSingular/zero.Binary
go/CompatibilityTest/testset.i16/ChangeContainerToSingular/zero.Compact
go/CompatibilityTest/testset.i16/ChangeSingularToContainer/min.Binary
go/CompatibilityTest/testset.i16/ChangeSingularToContainer/min.Compact
go/CompatibilityTest/testset.i16/ChangeContainerToSingular/min.Binary
go/CompatibilityTest/testset.i16/ChangeContainerToSingular/min.Compact
go/CompatibilityTest/testset.i16/ChangeSingularToContainer/max.Binary
go/CompatibilityTest/testset.i16/ChangeSingularToContainer/max.Compact
go/CompatibilityTest/testset.i16/ChangeContainerToSingular/max.Binary
go/CompatibilityTest/testset.i16/ChangeContainerToSingular/max.Compact
go/CompatibilityTest/testset.i16/ChangeSingularToContainer/one.Binary
go/CompatibilityTest/testset.i16/ChangeContainerToSingular/one.Binary
go/CompatibilityTest/testset.i16/ChangeContainerToSingular/one.Compact
go/CompatibilityTest/testset.i16/ChangeSingularToContainer/neg_one.Binary
go/CompatibilityTest/testset.i16/ChangeContainerToSingular/neg_one.Binary
go/CompatibilityTest/testset.i16/ChangeContainerToSingular/neg_one.Compact
go/CompatibilityTest/testset.i32/AddTerseFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.i32/AddTerseFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.i32/ChangeSingularToContainer/zero.Binary
go/CompatibilityTest/testset.i32/ChangeContainerToSingular/zero.Binary
go/CompatibilityTest/testset.i32/ChangeContainerToSingular/zero.Compact
go/CompatibilityTest/testset.i32/ChangeSingularToContainer/min.Binary
go/CompatibilityTest/testset.i32/ChangeSingularToContainer/min.Compact
go/CompatibilityTest/testset.i32/ChangeContainerToSingular/min.Binary
go/CompatibilityTest/testset.i32/ChangeContainerToSingular/min.Compact
go/CompatibilityTest/testset.i32/ChangeSingularToContainer/max.Binary
go/CompatibilityTest/testset.i32/ChangeSingularToContainer/max.Compact
go/CompatibilityTest/testset.i32/ChangeContainerToSingular/max.Binary
go/CompatibilityTest/testset.i32/ChangeContainerToSingular/max.Compact
go/CompatibilityTest/testset.i32/ChangeSingularToContainer/one.Binary
go/CompatibilityTest/testset.i32/ChangeContainerToSingular/one.Binary
go/CompatibilityTest/testset.i32/ChangeContainerToSingular/one.Compact
go/CompatibilityTest/testset.i32/ChangeSingularToContainer/neg_one.Binary
go/CompatibilityTest/testset.i32/ChangeContainerToSingular/neg_one.Binary
go/CompatibilityTest/testset.i32/ChangeContainerToSingular/neg_one.Compact
go/CompatibilityTest/testset.i64/AddTerseFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.i64/AddTerseFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.i64/ChangeContainerToSingular/zero.Binary
go/CompatibilityTest/testset.i64/ChangeContainerToSingular/zero.Compact
go/CompatibilityTest/testset.i64/ChangeSingularToContainer/min.Compact
go/CompatibilityTest/testset.i64/ChangeContainerToSingular/min.Binary
go/CompatibilityTest/testset.i64/ChangeContainerToSingular/min.Compact
go/CompatibilityTest/testset.i64/ChangeSingularToContainer/max.Binary
go/CompatibilityTest/testset.i64/ChangeSingularToContainer/max.Compact
go/CompatibilityTest/testset.i64/ChangeContainerToSingular/max.Binary
go/CompatibilityTest/testset.i64/ChangeContainerToSingular/max.Compact
go/CompatibilityTest/testset.i64/ChangeContainerToSingular/one.Binary
go/CompatibilityTest/testset.i64/ChangeContainerToSingular/one.Compact
go/CompatibilityTest/testset.i64/ChangeSingularToContainer/neg_one.Binary
go/CompatibilityTest/testset.i64/ChangeContainerToSingular/neg_one.Binary
go/CompatibilityTest/testset.i64/ChangeContainerToSingular/neg_one.Compact
go/CompatibilityTest/testset.string/AddTerseFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.string/AddTerseFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.string/ChangeSingularToContainer/empty.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/empty.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/empty.Compact
go/CompatibilityTest/testset.string/ChangeSingularToContainer/lower.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/lower.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/lower.Compact
go/CompatibilityTest/testset.string/ChangeSingularToContainer/upper.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/upper.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/upper.Compact
go/CompatibilityTest/testset.string/ChangeSingularToContainer/spaces.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/spaces.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/spaces.Compact
go/CompatibilityTest/testset.string/ChangeSingularToContainer/leading_space.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/leading_space.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/leading_space.Compact
go/CompatibilityTest/testset.string/ChangeSingularToContainer/trailing_space.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/trailing_space.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/trailing_space.Compact
go/CompatibilityTest/testset.string/ChangeSingularToContainer/utf8.Binary
go/CompatibilityTest/testset.string/ChangeSingularToContainer/utf8.Compact
go/CompatibilityTest/testset.string/ChangeContainerToSingular/utf8.Binary
go/CompatibilityTest/testset.string/ChangeContainerToSingular/utf8.Compact
go/CompatibilityTest/testset.Unqualified.Terse/ChangeQualifier/empty.Binary
go/CompatibilityTest/testset.Unqualified.Terse/ChangeQualifier/empty.Compact
go/CompatibilityTest/testset.Terse.Unqualified/ChangeQualifier/empty.Binary
go/CompatibilityTest/testset.Terse.Unqualified/ChangeQualifier/empty.Compact
go/CompatibilityTest/testset.Optional.Terse/ChangeQualifier/empty.Binary
go/CompatibilityTest/testset.Optional.Terse/ChangeQualifier/empty.Compact
go/CompatibilityTest/testset.bool/AddTerseFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.bool/AddTerseFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.bool/ChangeSingularToContainer/true.Binary
go/CompatibilityTest/testset.bool/ChangeSingularToContainer/true.Compact
go/CompatibilityTest/testset.bool/ChangeContainerToSingular/true.Compact
go/CompatibilityTest/testset.bool/ChangeSingularToContainer/false.Binary
go/CompatibilityTest/testset.bool/ChangeSingularToContainer/false.Compact
go/CompatibilityTest/testset.bool/ChangeContainerToSingular/false.Compact
go/CompatibilityTest/testset.byte/AddTerseFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.byte/AddTerseFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.byte/ChangeSingularToContainer/zero.Binary
go/CompatibilityTest/testset.byte/ChangeContainerToSingular/zero.Binary
go/CompatibilityTest/testset.byte/ChangeContainerToSingular/zero.Compact
go/CompatibilityTest/testset.byte/ChangeSingularToContainer/min.Binary
go/CompatibilityTest/testset.byte/ChangeSingularToContainer/min.Compact
go/CompatibilityTest/testset.byte/ChangeContainerToSingular/min.Binary
go/CompatibilityTest/testset.byte/ChangeContainerToSingular/min.Compact
go/CompatibilityTest/testset.byte/ChangeSingularToContainer/max.Binary
go/CompatibilityTest/testset.byte/ChangeSingularToContainer/max.Compact
go/CompatibilityTest/testset.byte/ChangeContainerToSingular/max.Binary
go/CompatibilityTest/testset.byte/ChangeContainerToSingular/max.Compact
go/CompatibilityTest/testset.byte/ChangeSingularToContainer/one.Binary
go/CompatibilityTest/testset.byte/ChangeContainerToSingular/one.Binary
go/CompatibilityTest/testset.byte/ChangeContainerToSingular/one.Compact
go/CompatibilityTest/testset.byte/ChangeSingularToContainer/neg_one.Binary
go/CompatibilityTest/testset.byte/ChangeSingularToContainer/neg_one.Compact
go/CompatibilityTest/testset.byte/ChangeContainerToSingular/neg_one.Binary
go/CompatibilityTest/testset.byte/ChangeContainerToSingular/neg_one.Compact
go/CompatibilityTest/testset.float/AddTerseFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.float/AddTerseFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/zero.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/zero.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/zero.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/lowest.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/lowest.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/lowest.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/lowest.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/min.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/min.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/min.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/max.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/max.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/max.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/max.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/max_int.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/max_int.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/max_int.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/max_int.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/min_int.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/min_int.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/min_int.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/min_int.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/max_digits.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/max_digits.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/max_digits.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/max_digits.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_max_digits.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_max_digits.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/neg_max_digits.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/neg_max_digits.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/one_tenth.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/one_tenth.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/one_tenth.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/one_tenth.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/min_plus_ulp.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/min_plus_ulp.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/min_plus_ulp.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/max_minus_ulp.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/max_minus_ulp.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/max_minus_ulp.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/max_minus_ulp.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/inf.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/inf.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/inf.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/inf.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_inf.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_inf.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/neg_inf.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/neg_inf.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/one.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/one.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/one.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/one.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_one.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_one.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/neg_one.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/neg_one.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/epsilon.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/epsilon.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/epsilon.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/epsilon.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_epsilon.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_epsilon.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/neg_epsilon.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/neg_epsilon.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/denorm_min.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/denorm_min.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/denorm_min.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_denorm_min.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_denorm_min.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/neg_denorm_min.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/neg_denorm_min.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_zero.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/neg_zero.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/neg_zero.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/neg_zero.Compact
go/CompatibilityTest/testset.double/AddTerseFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.double/AddTerseFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/zero.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/zero.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/lowest.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/lowest.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/lowest.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/lowest.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/min.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/min.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/min.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/max.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/max.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/max.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/max.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/max_int.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/max_int.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/max_int.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/max_int.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/min_int.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/min_int.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/min_int.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/min_int.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/max_digits.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/max_digits.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/max_digits.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/max_digits.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_max_digits.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_max_digits.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/neg_max_digits.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/neg_max_digits.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/one_tenth.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/one_tenth.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/one_tenth.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/one_tenth.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/min_plus_ulp.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/min_plus_ulp.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/min_plus_ulp.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/max_minus_ulp.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/max_minus_ulp.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/max_minus_ulp.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/max_minus_ulp.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/inf.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/inf.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/inf.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/inf.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_inf.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_inf.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/neg_inf.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/neg_inf.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/one.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/one.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/one.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/one.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_one.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_one.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/neg_one.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/neg_one.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/epsilon.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/epsilon.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/epsilon.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/epsilon.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_epsilon.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_epsilon.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/neg_epsilon.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/neg_epsilon.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/denorm_min.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/denorm_min.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_denorm_min.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/neg_denorm_min.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/neg_denorm_min.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/fmt_case_1.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/fmt_case_1.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/fmt_case_1.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/fmt_case_1.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/fmt_case_2.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/fmt_case_2.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/fmt_case_2.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/fmt_case_2.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/neg_zero.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/neg_zero.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/neg_zero.Compact
go/CompatibilityTest/testset.binary/ChangeSingularToContainer/empty.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/empty.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/empty.Compact
go/CompatibilityTest/testset.binary/ChangeSingularToContainer/lower.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/lower.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/lower.Compact
go/CompatibilityTest/testset.binary/ChangeSingularToContainer/upper.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/upper.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/upper.Compact
go/CompatibilityTest/testset.binary/ChangeSingularToContainer/spaces.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/spaces.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/spaces.Compact
go/CompatibilityTest/testset.binary/ChangeSingularToContainer/leading_space.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/leading_space.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/leading_space.Compact
go/CompatibilityTest/testset.binary/ChangeSingularToContainer/trailing_space.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/trailing_space.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/trailing_space.Compact
go/CompatibilityTest/testset.binary/ChangeSingularToContainer/utf8.Binary
go/CompatibilityTest/testset.binary/ChangeSingularToContainer/utf8.Compact
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/utf8.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/utf8.Compact
go/CompatibilityTest/testset.binary/ChangeSingularToContainer/bad_utf8.Binary
go/CompatibilityTest/testset.binary/ChangeSingularToContainer/bad_utf8.Compact
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/bad_utf8.Binary
go/CompatibilityTest/testset.binary/ChangeContainerToSingular/bad_utf8.Compact
go/CompatibilityTest/testset.bool/AddOptionalFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.bool/AddOptionalFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.bool/ChangeOptionalFieldCustomDefault.Binary
go/CompatibilityTest/testset.bool/ChangeOptionalFieldCustomDefault.Compact
go/CompatibilityTest/testset.byte/AddOptionalFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.byte/AddOptionalFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.byte/ChangeOptionalFieldCustomDefault.Binary
go/CompatibilityTest/testset.byte/ChangeOptionalFieldCustomDefault.Compact
go/CompatibilityTest/testset.float/AddOptionalFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.float/AddOptionalFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.float/ChangeOptionalFieldCustomDefault.Binary
go/CompatibilityTest/testset.float/ChangeOptionalFieldCustomDefault.Compact
go/CompatibilityTest/testset.double/AddOptionalFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.double/AddOptionalFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.double/ChangeOptionalFieldCustomDefault.Binary
go/CompatibilityTest/testset.double/ChangeOptionalFieldCustomDefault.Compact
go/CompatibilityTest/testset.binary/AddOptionalFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.binary/AddOptionalFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.binary/AddTerseFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.binary/AddTerseFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.binary/ChangeOptionalFieldCustomDefault.Binary
go/CompatibilityTest/testset.binary/ChangeOptionalFieldCustomDefault.Compact
go/CompatibilityTest/testset.i16/AddOptionalFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.i16/AddOptionalFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.i16/ChangeOptionalFieldCustomDefault.Binary
go/CompatibilityTest/testset.i16/ChangeOptionalFieldCustomDefault.Compact
go/CompatibilityTest/testset.i32/AddOptionalFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.i32/AddOptionalFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.i32/ChangeOptionalFieldCustomDefault.Binary
go/CompatibilityTest/testset.i32/ChangeOptionalFieldCustomDefault.Compact
go/CompatibilityTest/testset.i64/AddOptionalFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.i64/AddOptionalFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.i64/ChangeOptionalFieldCustomDefault.Binary
go/CompatibilityTest/testset.i64/ChangeOptionalFieldCustomDefault.Compact
go/CompatibilityTest/testset.string/AddOptionalFieldWithCustomDefault.Binary
go/CompatibilityTest/testset.string/AddOptionalFieldWithCustomDefault.Compact
go/CompatibilityTest/testset.string/ChangeOptionalFieldCustomDefault.Binary
go/CompatibilityTest/testset.string/ChangeOptionalFieldCustomDefault.Compact

#
# NaN Go Data conformance compatibility tests [FAILED]
# NaN is broken in test harness and not a Go specific issue
# list<float> and list<double> tests also contain NaN

go/CompatibilityTest/testset.float/StructToUnion/NaN.Binary
go/CompatibilityTest/testset.float/StructToUnion/NaN.Compact
go/CompatibilityTest/testset.float/StructToException/NaN.Binary
go/CompatibilityTest/testset.float/StructToException/NaN.Compact
go/CompatibilityTest/testset.float/UnionToStruct/NaN.Binary
go/CompatibilityTest/testset.float/UnionToStruct/NaN.Compact
go/CompatibilityTest/testset.float/UnionToException/NaN.Binary
go/CompatibilityTest/testset.float/UnionToException/NaN.Compact
go/CompatibilityTest/testset.float/ExceptionToStruct/NaN.Binary
go/CompatibilityTest/testset.float/ExceptionToStruct/NaN.Compact
go/CompatibilityTest/testset.float/ExceptionToUnion/NaN.Binary
go/CompatibilityTest/testset.float/ExceptionToUnion/NaN.Compact
go/CompatibilityTest/testset.float/ChangeSingularToContainer/NaN.Binary
go/CompatibilityTest/testset.float/ChangeSingularToContainer/NaN.Compact
go/CompatibilityTest/testset.float/ChangeContainerToSingular/NaN.Binary
go/CompatibilityTest/testset.float/ChangeContainerToSingular/NaN.Compact
go/CompatibilityTest/testset.double/StructToUnion/NaN.Binary
go/CompatibilityTest/testset.double/StructToUnion/NaN.Compact
go/CompatibilityTest/testset.double/StructToException/NaN.Binary
go/CompatibilityTest/testset.double/StructToException/NaN.Compact
go/CompatibilityTest/testset.double/UnionToStruct/NaN.Binary
go/CompatibilityTest/testset.double/UnionToStruct/NaN.Compact
go/CompatibilityTest/testset.double/UnionToException/NaN.Binary
go/CompatibilityTest/testset.double/UnionToException/NaN.Compact
go/CompatibilityTest/testset.double/ExceptionToStruct/NaN.Binary
go/CompatibilityTest/testset.double/ExceptionToStruct/NaN.Compact
go/CompatibilityTest/testset.double/ExceptionToUnion/NaN.Binary
go/CompatibilityTest/testset.double/ExceptionToUnion/NaN.Compact
go/CompatibilityTest/testset.double/ChangeSingularToContainer/NaN.Binary
go/CompatibilityTest/testset.double/ChangeSingularToContainer/NaN.Compact
go/CompatibilityTest/testset.double/ChangeContainerToSingular/NaN.Binary
go/CompatibilityTest/testset.double/ChangeContainerToSingular/NaN.Compact

#
# bad_utf8 Go Data conformance compatibility tests [FAILED]
# bad_utf8 is broken in test harness and not a Go specific issue
go/CompatibilityTest/testset.binary.string/ChangeFieldType/bad_utf8.Binary
go/CompatibilityTest/testset.binary.string/ChangeFieldType/bad_utf8.Compact

#
# Go Data conformance compatibility tests [SKIPPED]
go/CompatibilityTest/testset.Unqualified.Optional/ChangeQualifier/frontCompact
go/CompatibilityTest/testset.Required.Optional/ChangeQualifier/frontBinary
go/CompatibilityTest/testset.Required.Unqualified/ChangeQualifier/frontBinary
go/CompatibilityTest/testset.Optional.Required/ChangeQualifier/frontBinary
go/CompatibilityTest/testset.Terse.Unqualified/ChangeQualifier/frontCompact
go/CompatibilityTest/testset.Unqualified.Required/ChangeQualifier/frontBinary
go/CompatibilityTest/testset.Optional.Unqualified/ChangeQualifier/frontBinary
go/CompatibilityTest/testset.list<i64>.set<i64>/ChangeFieldType/frontCompact
go/CompatibilityTest/testset.Unqualified.Optional/ChangeQualifier/frontBinary
go/CompatibilityTest/testset.Unqualified.Terse/ChangeQualifier/frontBinary
go/CompatibilityTest/testset.Optional.Unqualified/ChangeQualifier/frontCompact
go/CompatibilityTest/testset.Unqualified.Required/ChangeQualifier/frontCompact
go/CompatibilityTest/testset.Required.Optional/ChangeQualifier/frontCompact
go/CompatibilityTest/testset.Optional.Terse/ChangeQualifier/frontCompact
go/CompatibilityTest/testset.Required.Unqualified/ChangeQualifier/frontCompact
go/CompatibilityTest/testset.Terse.Unqualified/ChangeQualifier/frontBinary
go/CompatibilityTest/testset.Optional.Terse/ChangeQualifier/frontBinary
go/CompatibilityTest/testset.Optional.Required/ChangeQualifier/frontCompact
go/CompatibilityTest/testset.list<i64>.set<i64>/ChangeFieldType/frontBinary
go/CompatibilityTest/testset.Unqualified.Terse/ChangeQualifier/frontCompact

#
# Go RPC conformance client tests
go/ThriftRPCClientTest/SinkBasic/Success.SinkBasicTest
go/ThriftRPCClientTest/SinkFragmentation/Success.SinkFragmentationTest
go/ThriftRPCClientTest/SinkSubsequestCredits/Success.SinkSubsequentCreditsTest
go/ThriftRPCClientTest/InteractionConstructorTest/Success.InteractionConstructorTest
go/ThriftRPCClientTest/InteractionFactoryFunctionTest/Success.InteractionFactoryFunctionTest
go/ThriftRPCClientTest/InteractionConstructorPersistsStateTest/Success.InteractionConstructorPersistsStateTest
go/ThriftRPCClientTest/InteractionFactoryFunctionPersistsStateTest/Success.InteractionFactoryFunctionPersistsStateTest
go/ThriftRPCClientTest/InteractionConstructorTerminationTest/Success.InteractionConstructorTerminationTest
go/ThriftRPCClientTest/InteractionFactoryFunctionTerminationTest/Success.InteractionFactoryFunctionTerminationTest
go/ThriftRPCClientTest/StreamBasic/Success.StreamBasicTest
go/ThriftRPCClientTest/StreamFragmentation/Success.StreamFragmentationTest
go/ThriftRPCClientTest/StreamInitialResponse/Success.StreamInitialResponseTest
go/ThriftRPCClientTest/StreamSubsequentCredits/Success.StreamSubsequentCreditsTest
go/ThriftRPCClientTest/StreamDeclaredException/Success.StreamDeclaredExceptionTest
go/ThriftRPCClientTest/StreamUndeclaredException/Success.StreamUndeclaredExceptionTest
go/ThriftRPCClientTest/StreamInitialDeclaredException/Success.StreamInitialDeclaredExceptionTest
go/ThriftRPCClientTest/StreamInitialUndeclaredException/Success.StreamInitialUndeclaredExceptionTest
go/ThriftRPCClientTest/StreamChunkTimeout/Success.StreamChunkTimeoutTest
go/ThriftRPCClientTest/StreamCreditTimeout/Success.StreamCreditTimeoutTest
go/ThriftRPCClientTest/StreamInitialTimeout/Success.StreamInitialTimeoutTest
go/ThriftRPCClientTest/RequestResponseTimeout/Success.RequestResponseTimeoutTest
#
# Go RPC conformance server tests
go/ThriftRPCServerTest/SinkBasic/Success.SinkBasicTest
go/ThriftRPCServerTest/SinkFragmentation/Success.SinkFragmentationTest
go/ThriftRPCServerTest/SinkSubsequestCredits/Success.SinkSubsequentCreditsTest
go/ThriftRPCServerTest/SinkChunkTimeout/Success.SinkChunkTimeoutTest
go/ThriftRPCServerTest/InteractionConstructorTest/Success.InteractionConstructorTest
go/ThriftRPCServerTest/InteractionFactoryFunctionTest/Success.InteractionFactoryFunctionTest
go/ThriftRPCServerTest/InteractionConstructorPersistsStateTest/Success.InteractionConstructorPersistsStateTest
go/ThriftRPCServerTest/InteractionFactoryFunctionPersistsStateTest/Success.InteractionFactoryFunctionPersistsStateTest
go/ThriftRPCServerTest/InteractionConstructorTerminationTest/Success.InteractionConstructorTerminationTest
go/ThriftRPCServerTest/InteractionFactoryFunctionTerminationTest/Success.InteractionFactoryFunctionTerminationTest
go/ThriftRPCServerTest/StreamBasic/Success.StreamBasicTest
go/ThriftRPCServerTest/StreamFragmentation/Success.StreamFragmentationTest
go/ThriftRPCServerTest/StreamInitialResponse/Success.StreamInitialResponseTest
go/ThriftRPCServerTest/StreamSubsequentCredits/Success.StreamSubsequentCreditsTest
go/ThriftRPCServerTest/StreamDeclaredException/Success.StreamDeclaredExceptionTest
go/ThriftRPCServerTest/StreamUndeclaredException/Success.StreamUndeclaredExceptionTest
go/ThriftRPCServerTest/StreamInitialDeclaredException/Success.StreamInitialDeclaredExceptionTest
go/ThriftRPCServerTest/StreamInitialUndeclaredException/Success.StreamInitialUndeclaredExceptionTest
go/ThriftRPCServerTest/StreamChunkTimeout/Success.StreamChunkTimeoutTest
go/ThriftRPCServerTest/StreamCreditTimeout/Success.StreamCreditTimeoutTest
go/ThriftRPCServerTest/StreamInitialTimeout/Success.StreamInitialTimeoutTest
go/ThriftRPCServerTest/RequestResponseTimeout/Success.RequestResponseTimeoutTest
