cpp_unittest(
  name = 'TEventBaseTest',
  srcs = [
    'TEventBaseTest.cpp',
  ],
  deps = [
    ':util',
    '@/thrift/lib/cpp/async',
  ],
  external_deps = [
    ('boost', '>= 1.37', 'boost_unit_test_framework'),
  ],
  type = 'boost',
  emails = ['thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'RequestContextTest',
  srcs = [
    'RequestContextTest.cpp',
  ],
  deps = [
    ':util',
    '@/thrift/lib/cpp/async',
  ],
  external_deps = [('gtest', None, 'gtest')],
  type = 'gtest',
  emails = ['thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'TAsyncChannelTest',
  srcs = [
    'TAsyncChannelTest.cpp',
  ],
  deps = [
    ':util',
    '@/thrift/lib/cpp/async',
  ],
  external_deps = [
    ('boost', '>= 1.37', 'boost_unit_test_framework'),
  ],
  type = 'boost',
  emails = ['thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'TAsyncChannelClientTest',
  srcs = [
    'TAsyncChannelClientTest.cpp',
  ],
  deps = [
    ':util',
    '@/thrift/lib/cpp/async:zlib',
    '@/thrift/lib/cpp/util:nonblocking',
    '@/thrift/lib/cpp/util:httpparser',
    '@/thrift/perf/cpp:load-handler',
  ],
  external_deps = [
    ('boost', '>= 1.37', 'boost_unit_test_framework'),
  ],
  type = 'boost',
  emails = ['thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'TAsyncSocketTest',
  srcs = [
    'TAsyncSocketTest.cpp',
  ],
  deps = [
    ':util',
    '@/thrift/lib/cpp/async',
  ],
  external_deps = [
    ('boost', '>= 1.37', 'boost_unit_test_framework'),
  ],
  type = 'boost',
  emails = ['thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'TAsyncSSLSocketTest',
  srcs = [
    'TAsyncSSLSocketTest.cpp',
  ],
  deps = [
    ':util',
    '@/thrift/lib/cpp/async:async_ssl',
  ],
  external_deps = [
    ('boost', '>= 1.37', 'boost_unit_test_framework'),
  ],
  type = 'boost',
  emails = ['ti-bugs@lists.facebook.com',
            'thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'TAsyncSSLSocketTest2',
  srcs = [
    'TAsyncSSLSocketTest2.cpp',
  ],
  deps = [
    ':util',
    '@/thrift/lib/cpp/async:async_ssl',
  ],
  external_deps = [
    ('boost', '>= 1.37', 'boost_unit_test_framework'),
  ],
  type = 'boost',
  emails = ['ti-bugs@lists.facebook.com',
            'thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'TAsyncSSLSocketWriteTest',
  srcs = [
    'TAsyncSSLSocketWriteTest.cpp',
  ],
  deps = [
    '@/thrift/lib/cpp/async:async_ssl',
  ],
  external_deps = [
    ('gtest', None, 'gtest_main'),
    ('gmock')
  ],
  type = "gtest",
  emails = ['ti-bugs@lists.facebook.com',
            'thrift-team@lists.facebook.com'],
)

# This is a unit test, but requires root privileges (or CAP_NET_RAW) to run.
cpp_binary(
  name = 'TAsyncSocketCorkingTest',
  srcs = [
    'TAsyncSocketCorkingTest.cpp',
  ],
  deps = [
    '@/folly',
    '@/thrift/lib/cpp/async:async_ssl',
  ],
  external_deps = [
    ('libpcap', None, 'pcap'),
    ('gtest', None, 'gtest_main'),
  ],
  #type = "gtest",
  #emails = ['ti-bugs@lists.facebook.com',
  #          'thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'TAsyncTimeoutSetTest',
  srcs = [
    'TAsyncTimeoutSetTest.cpp',
  ],
  deps = [
    ':util',
    '@/thrift/lib/cpp/async:async_cxx11',
  ],
  type = 'boost',
  emails = ['thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'HHWheelTimerTest',
  srcs = [
    'HHWheelTimerTest.cpp',
  ],
  deps = [
    ':util',
    '@/thrift/lib/cpp/async:async_cxx11',
  ],
  type = 'boost',
  emails = ['thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'TNotificationQueueTest',
  srcs = [
    'TNotificationQueueTest.cpp',
  ],
  deps = [
    ':async_util',
    '@/thrift/lib/cpp/async:async_cxx11',
  ],
  type = 'boost',
  emails = ['thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'Base64Test',
  srcs = [
    'Base64Test.cpp',
  ],
  deps = [
    '@/thrift/lib/cpp/protocol',
  ],
  external_deps = [
    ('boost', '>= 1.37', 'boost_unit_test_framework'),
  ],
  type = 'boost',
  owner = 'andrewcox',
  emails = ['thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'TEventServerTest',
  srcs = [
    'TEventServerTest.cpp',
  ],
  deps = [
    ':tevent_server_test',
    '@/thrift/lib/cpp/util:async',
    '@/thrift/lib/cpp/async',
  ],
  external_deps = [
    ('boost', '>= 1.37', 'boost_unit_test_framework'),
  ],
  type = 'boost',
  owner = 'andrewcox',
  emails = ['thrift-team@lists.facebook.com'],
)

cpp_unittest(
  name = 'TEventJobQueueTest',
  srcs = [
    'TEventJobQueueTest.cpp',
  ],
  deps = [
    '@/thrift/lib/cpp/async',
  ],
  external_deps = [
    ('boost', '>= 1.37', 'boost_unit_test_framework'),
  ],
  type = 'boost',
  emails = ['thrift-team@lists.facebook.com'],
)

cpp_library(
  name = 'util',
  srcs = [
    'NetworkUtil.cpp',
    'SocketPair.cpp',
    'TimeUtil.cpp',
  ],
  deps = [
    '@/thrift/lib/cpp/transport',
  ],
)

cpp_library(
  name = 'async_util',
  srcs = [
    'ScopedEventBaseThread.cpp',
  ],
  deps = [
    '@/thrift/lib/cpp/async',
    '@/thrift/lib/cpp/concurrency',
  ],
)

cpp_library (
  name = "DebugProtocolLib",
  thrift_srcs = {
        "DebugProtocolTest.thrift" : "DebugProtocolService"
        },
  thrift_cpp_options = "templates"
)

cpp_library (
  name = "tevent_server_test",
  thrift_srcs = {
        "TEventServerTest.thrift" : "TEventServerTestService"
        },
  thrift_cpp_options = "templates,cob_style",
  deps = [
    "@/common/fb303/if:fb303-cpp",
  ],
)

cpp_binary (
  name = "DebugProtocol",
  srcs = [
           "DebugProtocolTest.cpp",
         ],
  deps = [
        ":DebugProtocolLib",
        ],
)

cpp_binary (
  name = "PathsDemo",
  srcs = [ "PathsDemo.cpp" ],
  deps = [ ":Paths-cpp" ],
)

thrift_library (
  name = 'Paths',
  thrift_srcs = { 'Paths.thrift' : [] },
  languages = ['cpp'],
  thrift_cpp_options = 'templates=only',
)

thrift_library (
  name = 'FrozenTypes',
  thrift_srcs = {
    'FrozenTypes.thrift' : [],
  },
  languages = ['cpp'],
  thrift_cpp_options = 'templates=only,frozen',
)

cpp_unittest (
  name = "FrozenTest",
  srcs = [
          "FrozenTest.cpp",
         ],
  deps = [
          "@/thrift/lib/cpp:thrift",
          "@/folly",
          ":FrozenTypes-cpp",
         ],
  external_deps = [
          ("boost", ">= 1.37", "boost_unit_test_framework")
         ],
  type = 'boost',
  emails = ['thrift-team@lists.facebook.com'],
)

cpp_binary (
  name = "FrozenBench",
  srcs = [
          "FrozenBench.cpp",
         ],
  deps = [
          "@/thrift/lib/cpp:thrift",
          "@/folly",
          "@/folly:benchmark",
          ":FrozenTypes-cpp",
         ],
)

cpp_unittest(
    name = 'ShutdownSocketSetTest',
    srcs = [
        'ShutdownSocketSetTest.cpp',
    ],
    deps = [
        '@/thrift/lib/cpp:shutdown_socket_set',
    ],
    type = 'gtest',
)

cpp_unittest (
  name = "UDPTest",
  srcs = [
          "TAsyncUDPSocketTest.cpp",
         ],
  deps = [
          ":async_util",
          "@/thrift/lib/cpp/async:async_base",
         ],
  external_deps = [
          ("boost", ">= 1.37", "boost_unit_test_framework")
         ],
  type = 'boost',
  emails = ['thrift-team@lists.facebook.com'],
)
